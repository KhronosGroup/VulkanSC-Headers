{
  "version info": {
    "schema version": 2,
    "api version": "1.0.14",
    "comment": "from git branch: github-sc_main commit: 6c6f22ba99e0c8181907fe1ade9eff036ff83282",
    "date": "2023-12-15 03:22:20Z"
  },
  "validation": {
    "vkGetInstanceProcAddr": {
      "core": [
        {
          "vuid": "VUID-vkGetInstanceProcAddr-instance-parameter",
          "text": "If <code>instance</code> is not <code>NULL</code>, <code>instance</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkInstance\">VkInstance</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetInstanceProcAddr-pName-parameter",
          "text": "<code>pName</code> <strong class=\"purple\">must</strong> be a null-terminated UTF-8 string",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDeviceProcAddr": {
      "core": [
        {
          "vuid": "VUID-vkGetDeviceProcAddr-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceProcAddr-pName-parameter",
          "text": "<code>pName</code> <strong class=\"purple\">must</strong> be a null-terminated UTF-8 string",
          "page": "vkspec"
        }
      ]
    },
    "vkEnumerateInstanceVersion": {
      "core": [
        {
          "vuid": "VUID-vkEnumerateInstanceVersion-pApiVersion-parameter",
          "text": "<code>pApiVersion</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateInstance": {
      "core": [
        {
          "vuid": "VUID-vkCreateInstance-ppEnabledExtensionNames-01388",
          "text": "All <a href=\"#extendingvulkan-extensions-extensiondependencies\">required extensions</a> for each extension in the <a href=\"#VkInstanceCreateInfo\">VkInstanceCreateInfo</a>::<code>ppEnabledExtensionNames</code> list <strong class=\"purple\">must</strong> also be present in that list",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateInstance-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkInstanceCreateInfo\">VkInstanceCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateInstance-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateInstance-pInstance-parameter",
          "text": "<code>pInstance</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkInstance\">VkInstance</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkInstanceCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkInstanceCreateInfo-pNext-04926",
          "text": "If the <code>pNext</code> chain of <code>VkInstanceCreateInfo</code> includes a <code>VkDebugUtilsMessengerCreateInfoEXT</code> structure, the list of enabled extensions in <code>ppEnabledExtensionNames</code> <strong class=\"purple\">must</strong> contain <code><a href=\"#VK_EXT_debug_utils\">VK_EXT_debug_utils</a></code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkInstanceCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkInstanceCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkDebugUtilsMessengerCreateInfoEXT\">VkDebugUtilsMessengerCreateInfoEXT</a> or <a href=\"#VkValidationFeaturesEXT\">VkValidationFeaturesEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkInstanceCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique, with the exception of structures of type <a href=\"#VkDebugUtilsMessengerCreateInfoEXT\">VkDebugUtilsMessengerCreateInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkInstanceCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkInstanceCreateInfo-pApplicationInfo-parameter",
          "text": "If <code>pApplicationInfo</code> is not <code>NULL</code>, <code>pApplicationInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkApplicationInfo\">VkApplicationInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkInstanceCreateInfo-ppEnabledLayerNames-parameter",
          "text": "If <code>enabledLayerCount</code> is not <code>0</code>, <code>ppEnabledLayerNames</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>enabledLayerCount</code> null-terminated UTF-8 strings",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkInstanceCreateInfo-ppEnabledExtensionNames-parameter",
          "text": "If <code>enabledExtensionCount</code> is not <code>0</code>, <code>ppEnabledExtensionNames</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>enabledExtensionCount</code> null-terminated UTF-8 strings",
          "page": "vkspec"
        }
      ]
    },
    "VkValidationFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkValidationFeaturesEXT-pEnabledValidationFeatures-02967",
          "text": "If the <code>pEnabledValidationFeatures</code> array contains <code>VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT</code>, then it <strong class=\"purple\">must</strong> also contain <code>VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkValidationFeaturesEXT-pEnabledValidationFeatures-02968",
          "text": "If the <code>pEnabledValidationFeatures</code> array contains <code>VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT</code>, then it <strong class=\"purple\">must</strong> not contain <code>VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkValidationFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkValidationFeaturesEXT-pEnabledValidationFeatures-parameter",
          "text": "If <code>enabledValidationFeatureCount</code> is not <code>0</code>, <code>pEnabledValidationFeatures</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>enabledValidationFeatureCount</code> valid <a href=\"#VkValidationFeatureEnableEXT\">VkValidationFeatureEnableEXT</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkValidationFeaturesEXT-pDisabledValidationFeatures-parameter",
          "text": "If <code>disabledValidationFeatureCount</code> is not <code>0</code>, <code>pDisabledValidationFeatures</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>disabledValidationFeatureCount</code> valid <a href=\"#VkValidationFeatureDisableEXT\">VkValidationFeatureDisableEXT</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkApplicationInfo": {
      "core": [
        {
          "vuid": "VUID-VkApplicationInfo-apiVersion-05021",
          "text": "If <code>apiVersion</code> is not <code>0</code> and its variant is <code>VKSC_API_VARIANT</code>, then it <strong class=\"purple\">must</strong> be greater than or equal to <a href=\"#VKSC_API_VERSION_1_0\">VKSC_API_VERSION_1_0</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkApplicationInfo-key-05093",
          "text": "The <code>key</code> value of each <a href=\"#VkApplicationParametersEXT\">VkApplicationParametersEXT</a> structure in the <a href=\"#VkApplicationInfo\">VkApplicationInfo</a>::<code>pNext</code> chain <strong class=\"purple\">must</strong> be unique for each <code>vendorID</code> and <code>deviceID</code> pairing",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkApplicationInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_APPLICATION_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkApplicationInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkApplicationParametersEXT\">VkApplicationParametersEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkApplicationInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique, with the exception of structures of type <a href=\"#VkApplicationParametersEXT\">VkApplicationParametersEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkApplicationInfo-pApplicationName-parameter",
          "text": "If <code>pApplicationName</code> is not <code>NULL</code>, <code>pApplicationName</code> <strong class=\"purple\">must</strong> be a null-terminated UTF-8 string",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkApplicationInfo-pEngineName-parameter",
          "text": "If <code>pEngineName</code> is not <code>NULL</code>, <code>pEngineName</code> <strong class=\"purple\">must</strong> be a null-terminated UTF-8 string",
          "page": "vkspec"
        }
      ]
    },
    "VkApplicationParametersEXT": {
      "core": [
        {
          "vuid": "VUID-VkApplicationParametersEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_APPLICATION_PARAMETERS_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyInstance": {
      "core": [
        {
          "vuid": "VUID-vkDestroyInstance-instance-00629",
          "text": "All child objects created using <code>instance</code> <strong class=\"purple\">must</strong> have been destroyed prior to destroying <code>instance</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyInstance-instance-parameter",
          "text": "If <code>instance</code> is not <code>NULL</code>, <code>instance</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkInstance\">VkInstance</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyInstance-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkEnumeratePhysicalDevices": {
      "core": [
        {
          "vuid": "VUID-vkEnumeratePhysicalDevices-instance-parameter",
          "text": "<code>instance</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkInstance\">VkInstance</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumeratePhysicalDevices-pPhysicalDeviceCount-parameter",
          "text": "<code>pPhysicalDeviceCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumeratePhysicalDevices-pPhysicalDevices-parameter",
          "text": "If the value referenced by <code>pPhysicalDeviceCount</code> is not <code>0</code>, and <code>pPhysicalDevices</code> is not <code>NULL</code>, <code>pPhysicalDevices</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPhysicalDeviceCount</code> <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handles",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceProperties": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceProperties-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceProperties-pProperties-parameter",
          "text": "<code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkPhysicalDeviceProperties\">VkPhysicalDeviceProperties</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceProperties2": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceProperties2-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceProperties2-pProperties-parameter",
          "text": "<code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkPhysicalDeviceProperties2\">VkPhysicalDeviceProperties2</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceProperties2": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceProperties2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceProperties2-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT\">VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT</a>, <a href=\"#VkPhysicalDeviceConservativeRasterizationPropertiesEXT\">VkPhysicalDeviceConservativeRasterizationPropertiesEXT</a>, <a href=\"#VkPhysicalDeviceCustomBorderColorPropertiesEXT\">VkPhysicalDeviceCustomBorderColorPropertiesEXT</a>, <a href=\"#VkPhysicalDeviceDepthStencilResolveProperties\">VkPhysicalDeviceDepthStencilResolveProperties</a>, <a href=\"#VkPhysicalDeviceDescriptorIndexingProperties\">VkPhysicalDeviceDescriptorIndexingProperties</a>, <a href=\"#VkPhysicalDeviceDiscardRectanglePropertiesEXT\">VkPhysicalDeviceDiscardRectanglePropertiesEXT</a>, <a href=\"#VkPhysicalDeviceDriverProperties\">VkPhysicalDeviceDriverProperties</a>, <a href=\"#VkPhysicalDeviceExternalMemoryHostPropertiesEXT\">VkPhysicalDeviceExternalMemoryHostPropertiesEXT</a>, <a href=\"#VkPhysicalDeviceFloatControlsProperties\">VkPhysicalDeviceFloatControlsProperties</a>, <a href=\"#VkPhysicalDeviceFragmentShadingRatePropertiesKHR\">VkPhysicalDeviceFragmentShadingRatePropertiesKHR</a>, <a href=\"#VkPhysicalDeviceIDProperties\">VkPhysicalDeviceIDProperties</a>, <a href=\"#VkPhysicalDeviceLineRasterizationPropertiesEXT\">VkPhysicalDeviceLineRasterizationPropertiesEXT</a>, <a href=\"#VkPhysicalDeviceMaintenance3Properties\">VkPhysicalDeviceMaintenance3Properties</a>, <a href=\"#VkPhysicalDeviceMultiviewProperties\">VkPhysicalDeviceMultiviewProperties</a>, <a href=\"#VkPhysicalDevicePCIBusInfoPropertiesEXT\">VkPhysicalDevicePCIBusInfoPropertiesEXT</a>, <a href=\"#VkPhysicalDevicePerformanceQueryPropertiesKHR\">VkPhysicalDevicePerformanceQueryPropertiesKHR</a>, <a href=\"#VkPhysicalDevicePointClippingProperties\">VkPhysicalDevicePointClippingProperties</a>, <a href=\"#VkPhysicalDeviceProtectedMemoryProperties\">VkPhysicalDeviceProtectedMemoryProperties</a>, <a href=\"#VkPhysicalDeviceRobustness2PropertiesEXT\">VkPhysicalDeviceRobustness2PropertiesEXT</a>, <a href=\"#VkPhysicalDeviceSampleLocationsPropertiesEXT\">VkPhysicalDeviceSampleLocationsPropertiesEXT</a>, <a href=\"#VkPhysicalDeviceSamplerFilterMinmaxProperties\">VkPhysicalDeviceSamplerFilterMinmaxProperties</a>, <a href=\"#VkPhysicalDeviceSubgroupProperties\">VkPhysicalDeviceSubgroupProperties</a>, <a href=\"#VkPhysicalDeviceSubgroupSizeControlProperties\">VkPhysicalDeviceSubgroupSizeControlProperties</a>, <a href=\"#VkPhysicalDeviceTexelBufferAlignmentProperties\">VkPhysicalDeviceTexelBufferAlignmentProperties</a>, <a href=\"#VkPhysicalDeviceTimelineSemaphoreProperties\">VkPhysicalDeviceTimelineSemaphoreProperties</a>, <a href=\"#VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT\">VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT</a>, <a href=\"#VkPhysicalDeviceVulkan11Properties\">VkPhysicalDeviceVulkan11Properties</a>, <a href=\"#VkPhysicalDeviceVulkan12Properties\">VkPhysicalDeviceVulkan12Properties</a>, or <a href=\"#VkPhysicalDeviceVulkanSC10Properties\">VkPhysicalDeviceVulkanSC10Properties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceProperties2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceVulkan11Properties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceVulkan11Properties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceVulkan12Properties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceVulkan12Properties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceVulkanSC10Properties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceVulkanSC10Properties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_SC_1_0_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceIDProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceIDProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceDriverProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceDriverProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDevicePCIBusInfoPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDevicePCIBusInfoPropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceQueueFamilyProperties": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceQueueFamilyProperties-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceQueueFamilyProperties-pQueueFamilyPropertyCount-parameter",
          "text": "<code>pQueueFamilyPropertyCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceQueueFamilyProperties-pQueueFamilyProperties-parameter",
          "text": "If the value referenced by <code>pQueueFamilyPropertyCount</code> is not <code>0</code>, and <code>pQueueFamilyProperties</code> is not <code>NULL</code>, <code>pQueueFamilyProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pQueueFamilyPropertyCount</code> <a href=\"#VkQueueFamilyProperties\">VkQueueFamilyProperties</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceQueueFamilyProperties2": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceQueueFamilyProperties2-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceQueueFamilyProperties2-pQueueFamilyPropertyCount-parameter",
          "text": "<code>pQueueFamilyPropertyCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceQueueFamilyProperties2-pQueueFamilyProperties-parameter",
          "text": "If the value referenced by <code>pQueueFamilyPropertyCount</code> is not <code>0</code>, and <code>pQueueFamilyProperties</code> is not <code>NULL</code>, <code>pQueueFamilyProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pQueueFamilyPropertyCount</code> <a href=\"#VkQueueFamilyProperties2\">VkQueueFamilyProperties2</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkQueueFamilyProperties2": {
      "core": [
        {
          "vuid": "VUID-VkQueueFamilyProperties2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueueFamilyProperties2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkQueueFamilyCheckpointProperties2NV\">VkQueueFamilyCheckpointProperties2NV</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueueFamilyProperties2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        }
      ]
    },
    "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR": {
      "core": [
        {
          "vuid": "VUID-vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR-pCounterCount-parameter",
          "text": "<code>pCounterCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR-pCounters-parameter",
          "text": "If the value referenced by <code>pCounterCount</code> is not <code>0</code>, and <code>pCounters</code> is not <code>NULL</code>, <code>pCounters</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pCounterCount</code> <a href=\"#VkPerformanceCounterKHR\">VkPerformanceCounterKHR</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR-pCounterDescriptions-parameter",
          "text": "If the value referenced by <code>pCounterCount</code> is not <code>0</code>, and <code>pCounterDescriptions</code> is not <code>NULL</code>, <code>pCounterDescriptions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pCounterCount</code> <a href=\"#VkPerformanceCounterDescriptionKHR\">VkPerformanceCounterDescriptionKHR</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkPerformanceCounterKHR": {
      "core": [
        {
          "vuid": "VUID-VkPerformanceCounterKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPerformanceCounterKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPerformanceCounterDescriptionKHR": {
      "core": [
        {
          "vuid": "VUID-VkPerformanceCounterDescriptionKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPerformanceCounterDescriptionKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkEnumeratePhysicalDeviceGroups": {
      "core": [
        {
          "vuid": "VUID-vkEnumeratePhysicalDeviceGroups-instance-parameter",
          "text": "<code>instance</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkInstance\">VkInstance</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumeratePhysicalDeviceGroups-pPhysicalDeviceGroupCount-parameter",
          "text": "<code>pPhysicalDeviceGroupCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumeratePhysicalDeviceGroups-pPhysicalDeviceGroupProperties-parameter",
          "text": "If the value referenced by <code>pPhysicalDeviceGroupCount</code> is not <code>0</code>, and <code>pPhysicalDeviceGroupProperties</code> is not <code>NULL</code>, <code>pPhysicalDeviceGroupProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPhysicalDeviceGroupCount</code> <a href=\"#VkPhysicalDeviceGroupProperties\">VkPhysicalDeviceGroupProperties</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceGroupProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceGroupProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceGroupProperties-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateDevice": {
      "core": [
        {
          "vuid": "VUID-vkCreateDevice-ppEnabledExtensionNames-01387",
          "text": "All <a href=\"#extendingvulkan-extensions-extensiondependencies\">required device extensions</a> for each extension in the <a href=\"#VkDeviceCreateInfo\">VkDeviceCreateInfo</a>::<code>ppEnabledExtensionNames</code> list <strong class=\"purple\">must</strong> also be present in that list",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDevice-key-05092",
          "text": "The <code>key</code> value of each <a href=\"#VkApplicationParametersEXT\">VkApplicationParametersEXT</a> structure in the <a href=\"#VkDeviceCreateInfo\">VkDeviceCreateInfo</a>::<code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDevice-deviceMemoryRequestCount-05095",
          "text": "The sum of <code>deviceMemoryRequestCount</code> over all <code>VkDeviceObjectReservationCreateInfo</code> structures included in the <a href=\"#VkDeviceCreateInfo\">VkDeviceCreateInfo</a>::<code>pNext</code> chain <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>maxMemoryAllocationCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDevice-samplerRequestCount-05096",
          "text": "The sum of <code>samplerRequestCount</code> over all <code>VkDeviceObjectReservationCreateInfo</code> structures included in the <a href=\"#VkDeviceCreateInfo\">VkDeviceCreateInfo</a>::<code>pNext</code> chain <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>maxSamplerAllocationCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDevice-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDevice-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDeviceCreateInfo\">VkDeviceCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDevice-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDevice-pDevice-parameter",
          "text": "<code>pDevice</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkDeviceCreateInfo-queueFamilyIndex-02802",
          "text": "The <code>queueFamilyIndex</code> member of each element of <code>pQueueCreateInfos</code> <strong class=\"purple\">must</strong> be unique within <code>pQueueCreateInfos</code> , except that two members can share the same <code>queueFamilyIndex</code> if one describes protected-capable queues and one describes queues that are not protected-capable",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-pQueueCreateInfos-06755",
          "text": "If multiple elements of <code>pQueueCreateInfos</code> share the same <code>queueFamilyIndex</code>, the sum of their <code>queueCount</code> members <strong class=\"purple\">must</strong> be less than or equal to the <code>queueCount</code> member of the <code>VkQueueFamilyProperties</code> structure, as returned by <code>vkGetPhysicalDeviceQueueFamilyProperties</code> in the <code>pQueueFamilyProperties</code>[queueFamilyIndex]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-pQueueCreateInfos-06654",
          "text": "If multiple elements of <code>pQueueCreateInfos</code> share the same <code>queueFamilyIndex</code>, then all of such elements <strong class=\"purple\">must</strong> have the same global priority level, which <strong class=\"purple\">can</strong> be specified explicitly by the including a <a href=\"#VkDeviceQueueGlobalPriorityCreateInfoKHR\">VkDeviceQueueGlobalPriorityCreateInfoKHR</a> structure in the <code>pNext</code> chain, or by the implicit default value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-pNext-00373",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkPhysicalDeviceFeatures2\">VkPhysicalDeviceFeatures2</a> structure, then <code>pEnabledFeatures</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-pNext-02829",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkPhysicalDeviceVulkan11Features\">VkPhysicalDeviceVulkan11Features</a> structure, then it <strong class=\"purple\">must</strong> not include a <a href=\"#VkPhysicalDevice16BitStorageFeatures\">VkPhysicalDevice16BitStorageFeatures</a>, <a href=\"#VkPhysicalDeviceMultiviewFeatures\">VkPhysicalDeviceMultiviewFeatures</a>, <a href=\"#VkPhysicalDeviceVariablePointersFeatures\">VkPhysicalDeviceVariablePointersFeatures</a>, <a href=\"#VkPhysicalDeviceProtectedMemoryFeatures\">VkPhysicalDeviceProtectedMemoryFeatures</a>, <a href=\"#VkPhysicalDeviceSamplerYcbcrConversionFeatures\">VkPhysicalDeviceSamplerYcbcrConversionFeatures</a>, or <a href=\"#VkPhysicalDeviceShaderDrawParametersFeatures\">VkPhysicalDeviceShaderDrawParametersFeatures</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-pNext-02830",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkPhysicalDeviceVulkan12Features\">VkPhysicalDeviceVulkan12Features</a> structure, then it <strong class=\"purple\">must</strong> not include a <a href=\"#VkPhysicalDevice8BitStorageFeatures\">VkPhysicalDevice8BitStorageFeatures</a>, <a href=\"#VkPhysicalDeviceShaderAtomicInt64Features\">VkPhysicalDeviceShaderAtomicInt64Features</a>, <a href=\"#VkPhysicalDeviceShaderFloat16Int8Features\">VkPhysicalDeviceShaderFloat16Int8Features</a>, <a href=\"#VkPhysicalDeviceDescriptorIndexingFeatures\">VkPhysicalDeviceDescriptorIndexingFeatures</a>, <a href=\"#VkPhysicalDeviceScalarBlockLayoutFeatures\">VkPhysicalDeviceScalarBlockLayoutFeatures</a>, <a href=\"#VkPhysicalDeviceImagelessFramebufferFeatures\">VkPhysicalDeviceImagelessFramebufferFeatures</a>, <a href=\"#VkPhysicalDeviceUniformBufferStandardLayoutFeatures\">VkPhysicalDeviceUniformBufferStandardLayoutFeatures</a>, <a href=\"#VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures\">VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures</a>, <a href=\"#VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures\">VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures</a>, <a href=\"#VkPhysicalDeviceHostQueryResetFeatures\">VkPhysicalDeviceHostQueryResetFeatures</a>, <a href=\"#VkPhysicalDeviceTimelineSemaphoreFeatures\">VkPhysicalDeviceTimelineSemaphoreFeatures</a>, <a href=\"#VkPhysicalDeviceBufferDeviceAddressFeatures\">VkPhysicalDeviceBufferDeviceAddressFeatures</a>, or <a href=\"#VkPhysicalDeviceVulkanMemoryModelFeatures\">VkPhysicalDeviceVulkanMemoryModelFeatures</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-None-04896",
          "text": "If <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> is enabled, <a href=\"#features-shaderImageInt64Atomics\"><code>shaderImageInt64Atomics</code></a> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-None-04897",
          "text": "If <a href=\"#features-sparseImageFloat32Atomics\"><code>sparseImageFloat32Atomics</code></a> is enabled, <a href=\"#features-shaderImageFloat32Atomics\"><code>shaderImageFloat32Atomics</code></a> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-None-04898",
          "text": "If <a href=\"#features-sparseImageFloat32AtomicAdd\"><code>sparseImageFloat32AtomicAdd</code></a> is enabled, <a href=\"#features-shaderImageFloat32AtomicAdd\"><code>shaderImageFloat32AtomicAdd</code></a> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkApplicationParametersEXT\">VkApplicationParametersEXT</a>, <a href=\"#VkDeviceGroupDeviceCreateInfo\">VkDeviceGroupDeviceCreateInfo</a>, <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>, <a href=\"#VkDeviceSemaphoreSciSyncPoolReservationCreateInfoNV\">VkDeviceSemaphoreSciSyncPoolReservationCreateInfoNV</a>, <a href=\"#VkFaultCallbackInfo\">VkFaultCallbackInfo</a>, <a href=\"#VkPerformanceQueryReservationInfoKHR\">VkPerformanceQueryReservationInfoKHR</a>, <a href=\"#VkPhysicalDevice16BitStorageFeatures\">VkPhysicalDevice16BitStorageFeatures</a>, <a href=\"#VkPhysicalDevice4444FormatsFeaturesEXT\">VkPhysicalDevice4444FormatsFeaturesEXT</a>, <a href=\"#VkPhysicalDevice8BitStorageFeatures\">VkPhysicalDevice8BitStorageFeatures</a>, <a href=\"#VkPhysicalDeviceASTCDecodeFeaturesEXT\">VkPhysicalDeviceASTCDecodeFeaturesEXT</a>, <a href=\"#VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT\">VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT</a>, <a href=\"#VkPhysicalDeviceBufferDeviceAddressFeatures\">VkPhysicalDeviceBufferDeviceAddressFeatures</a>, <a href=\"#VkPhysicalDeviceColorWriteEnableFeaturesEXT\">VkPhysicalDeviceColorWriteEnableFeaturesEXT</a>, <a href=\"#VkPhysicalDeviceCustomBorderColorFeaturesEXT\">VkPhysicalDeviceCustomBorderColorFeaturesEXT</a>, <a href=\"#VkPhysicalDeviceDepthClipEnableFeaturesEXT\">VkPhysicalDeviceDepthClipEnableFeaturesEXT</a>, <a href=\"#VkPhysicalDeviceDescriptorIndexingFeatures\">VkPhysicalDeviceDescriptorIndexingFeatures</a>, <a href=\"#VkPhysicalDeviceExtendedDynamicState2FeaturesEXT\">VkPhysicalDeviceExtendedDynamicState2FeaturesEXT</a>, <a href=\"#VkPhysicalDeviceExtendedDynamicStateFeaturesEXT\">VkPhysicalDeviceExtendedDynamicStateFeaturesEXT</a>, <a href=\"#VkPhysicalDeviceExternalMemorySciBufFeaturesNV\">VkPhysicalDeviceExternalMemorySciBufFeaturesNV</a>, <a href=\"#VkPhysicalDeviceExternalMemoryScreenBufferFeaturesQNX\">VkPhysicalDeviceExternalMemoryScreenBufferFeaturesQNX</a>, <a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>, <a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>, <a href=\"#VkPhysicalDeviceFeatures2\">VkPhysicalDeviceFeatures2</a>, <a href=\"#VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT\">VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT</a>, <a href=\"#VkPhysicalDeviceFragmentShadingRateFeaturesKHR\">VkPhysicalDeviceFragmentShadingRateFeaturesKHR</a>, <a href=\"#VkPhysicalDeviceHostQueryResetFeatures\">VkPhysicalDeviceHostQueryResetFeatures</a>, <a href=\"#VkPhysicalDeviceImageRobustnessFeatures\">VkPhysicalDeviceImageRobustnessFeatures</a>, <a href=\"#VkPhysicalDeviceImagelessFramebufferFeatures\">VkPhysicalDeviceImagelessFramebufferFeatures</a>, <a href=\"#VkPhysicalDeviceIndexTypeUint8FeaturesEXT\">VkPhysicalDeviceIndexTypeUint8FeaturesEXT</a>, <a href=\"#VkPhysicalDeviceLineRasterizationFeaturesEXT\">VkPhysicalDeviceLineRasterizationFeaturesEXT</a>, <a href=\"#VkPhysicalDeviceMultiviewFeatures\">VkPhysicalDeviceMultiviewFeatures</a>, <a href=\"#VkPhysicalDevicePerformanceQueryFeaturesKHR\">VkPhysicalDevicePerformanceQueryFeaturesKHR</a>, <a href=\"#VkPhysicalDeviceProtectedMemoryFeatures\">VkPhysicalDeviceProtectedMemoryFeatures</a>, <a href=\"#VkPhysicalDeviceRobustness2FeaturesEXT\">VkPhysicalDeviceRobustness2FeaturesEXT</a>, <a href=\"#VkPhysicalDeviceSamplerYcbcrConversionFeatures\">VkPhysicalDeviceSamplerYcbcrConversionFeatures</a>, <a href=\"#VkPhysicalDeviceScalarBlockLayoutFeatures\">VkPhysicalDeviceScalarBlockLayoutFeatures</a>, <a href=\"#VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures\">VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures</a>, <a href=\"#VkPhysicalDeviceShaderAtomicFloatFeaturesEXT\">VkPhysicalDeviceShaderAtomicFloatFeaturesEXT</a>, <a href=\"#VkPhysicalDeviceShaderAtomicInt64Features\">VkPhysicalDeviceShaderAtomicInt64Features</a>, <a href=\"#VkPhysicalDeviceShaderClockFeaturesKHR\">VkPhysicalDeviceShaderClockFeaturesKHR</a>, <a href=\"#VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures\">VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures</a>, <a href=\"#VkPhysicalDeviceShaderDrawParametersFeatures\">VkPhysicalDeviceShaderDrawParametersFeatures</a>, <a href=\"#VkPhysicalDeviceShaderFloat16Int8Features\">VkPhysicalDeviceShaderFloat16Int8Features</a>, <a href=\"#VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT\">VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT</a>, <a href=\"#VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures\">VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures</a>, <a href=\"#VkPhysicalDeviceShaderTerminateInvocationFeatures\">VkPhysicalDeviceShaderTerminateInvocationFeatures</a>, <a href=\"#VkPhysicalDeviceSubgroupSizeControlFeatures\">VkPhysicalDeviceSubgroupSizeControlFeatures</a>, <a href=\"#VkPhysicalDeviceSynchronization2Features\">VkPhysicalDeviceSynchronization2Features</a>, <a href=\"#VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT\">VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT</a>, <a href=\"#VkPhysicalDeviceTextureCompressionASTCHDRFeatures\">VkPhysicalDeviceTextureCompressionASTCHDRFeatures</a>, <a href=\"#VkPhysicalDeviceTimelineSemaphoreFeatures\">VkPhysicalDeviceTimelineSemaphoreFeatures</a>, <a href=\"#VkPhysicalDeviceUniformBufferStandardLayoutFeatures\">VkPhysicalDeviceUniformBufferStandardLayoutFeatures</a>, <a href=\"#VkPhysicalDeviceVariablePointersFeatures\">VkPhysicalDeviceVariablePointersFeatures</a>, <a href=\"#VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT\">VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT</a>, <a href=\"#VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT\">VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT</a>, <a href=\"#VkPhysicalDeviceVulkan11Features\">VkPhysicalDeviceVulkan11Features</a>, <a href=\"#VkPhysicalDeviceVulkan12Features\">VkPhysicalDeviceVulkan12Features</a>, <a href=\"#VkPhysicalDeviceVulkanMemoryModelFeatures\">VkPhysicalDeviceVulkanMemoryModelFeatures</a>, <a href=\"#VkPhysicalDeviceVulkanSC10Features\">VkPhysicalDeviceVulkanSC10Features</a>, <a href=\"#VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT\">VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT</a>, or <a href=\"#VkPhysicalDeviceYcbcrImageArraysFeaturesEXT\">VkPhysicalDeviceYcbcrImageArraysFeaturesEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique, with the exception of structures of type <a href=\"#VkApplicationParametersEXT\">VkApplicationParametersEXT</a>, <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>, <a href=\"#VkDeviceSemaphoreSciSyncPoolReservationCreateInfoNV\">VkDeviceSemaphoreSciSyncPoolReservationCreateInfoNV</a>, or <a href=\"#VkPerformanceQueryReservationInfoKHR\">VkPerformanceQueryReservationInfoKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-pQueueCreateInfos-parameter",
          "text": "<code>pQueueCreateInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>queueCreateInfoCount</code> valid <a href=\"#VkDeviceQueueCreateInfo\">VkDeviceQueueCreateInfo</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-ppEnabledLayerNames-parameter",
          "text": "If <code>enabledLayerCount</code> is not <code>0</code>, <code>ppEnabledLayerNames</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>enabledLayerCount</code> null-terminated UTF-8 strings",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-ppEnabledExtensionNames-parameter",
          "text": "If <code>enabledExtensionCount</code> is not <code>0</code>, <code>ppEnabledExtensionNames</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>enabledExtensionCount</code> null-terminated UTF-8 strings",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-pEnabledFeatures-parameter",
          "text": "If <code>pEnabledFeatures</code> is not <code>NULL</code>, <code>pEnabledFeatures</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPhysicalDeviceFeatures\">VkPhysicalDeviceFeatures</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceCreateInfo-queueCreateInfoCount-arraylength",
          "text": "<code>queueCreateInfoCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceGroupDeviceCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkDeviceGroupDeviceCreateInfo-pPhysicalDevices-00375",
          "text": "Each element of <code>pPhysicalDevices</code> <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupDeviceCreateInfo-pPhysicalDevices-00376",
          "text": "All elements of <code>pPhysicalDevices</code> <strong class=\"purple\">must</strong> be in the same device group as enumerated by <a href=\"#vkEnumeratePhysicalDeviceGroups\">vkEnumeratePhysicalDeviceGroups</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupDeviceCreateInfo-physicalDeviceCount-00377",
          "text": "If <code>physicalDeviceCount</code> is not <code>0</code>, the <code>physicalDevice</code> parameter of <a href=\"#vkCreateDevice\">vkCreateDevice</a> <strong class=\"purple\">must</strong> be an element of <code>pPhysicalDevices</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupDeviceCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupDeviceCreateInfo-pPhysicalDevices-parameter",
          "text": "If <code>physicalDeviceCount</code> is not <code>0</code>, <code>pPhysicalDevices</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>physicalDeviceCount</code> valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handles",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceObjectReservationCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkDeviceObjectReservationCreateInfo-maxImageViewArrayLayers-05014",
          "text": "<code>maxImageViewArrayLayers</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>maxImageArrayLayers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceObjectReservationCreateInfo-maxImageViewMipLevels-05015",
          "text": "<code>maxImageViewMipLevels</code> <strong class=\"purple\">must</strong> be less than or equal to the number of levels in the complete mipmap chain based on the maximum of <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>maxImageDimension1D</code>, <code>maxImageDimension2D</code>, <code>maxImageDimension3D</code>, and <code>maxImageDimensionCube</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceObjectReservationCreateInfo-maxLayeredImageViewMipLevels-05016",
          "text": "<code>maxLayeredImageViewMipLevels</code> <strong class=\"purple\">must</strong> be less than or equal to the number of levels in the complete mipmap chain based on <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>maxImageDimension1D</code>, <code>maxImageDimension2D</code>, <code>maxImageDimension3D</code>, and <code>maxImageDimensionCube</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceObjectReservationCreateInfo-subpassDescriptionRequestCount-05017",
          "text": "<code>subpassDescriptionRequestCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>renderPassRequestCount</code> multiplied by <a href=\"#VkPhysicalDeviceVulkanSC10Properties\">VkPhysicalDeviceVulkanSC10Properties</a>::<code>maxRenderPassSubpasses</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceObjectReservationCreateInfo-attachmentDescriptionRequestCount-05018",
          "text": "<code>attachmentDescriptionRequestCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>renderPassRequestCount</code> multiplied by <a href=\"#VkPhysicalDeviceVulkanSC10Properties\">VkPhysicalDeviceVulkanSC10Properties</a>::<code>maxFramebufferAttachments</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceObjectReservationCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_OBJECT_RESERVATION_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceObjectReservationCreateInfo-pPipelineCacheCreateInfos-parameter",
          "text": "If <code>pipelineCacheCreateInfoCount</code> is not <code>0</code>, <code>pPipelineCacheCreateInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pipelineCacheCreateInfoCount</code> valid <a href=\"#VkPipelineCacheCreateInfo\">VkPipelineCacheCreateInfo</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceObjectReservationCreateInfo-pPipelinePoolSizes-parameter",
          "text": "If <code>pipelinePoolSizeCount</code> is not <code>0</code>, <code>pPipelinePoolSizes</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pipelinePoolSizeCount</code> valid <a href=\"#VkPipelinePoolSize\">VkPipelinePoolSize</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkPerformanceQueryReservationInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkPerformanceQueryReservationInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_RESERVATION_INFO_KHR</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceSemaphoreSciSyncPoolReservationCreateInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkDeviceSemaphoreSciSyncPoolReservationCreateInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_SEMAPHORE_SCI_SYNC_POOL_RESERVATION_CREATE_INFO_NV</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelinePoolSize": {
      "core": [
        {
          "vuid": "VUID-VkPipelinePoolSize-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_POOL_SIZE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelinePoolSize-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyDevice": {
      "core": [
        {
          "vuid": "VUID-vkDestroyDevice-device-05137",
          "text": "All child objects created on <code>device</code> , except those with no explicit <a href=\"#fundamentals-objectmodel-no-destroy\">free or destroy command</a>, <strong class=\"purple\">must</strong> have been destroyed prior to destroying <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyDevice-device-parameter",
          "text": "If <code>device</code> is not <code>NULL</code>, <code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyDevice-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceQueueCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkDeviceQueueCreateInfo-queueFamilyIndex-00381",
          "text": "<code>queueFamilyIndex</code> <strong class=\"purple\">must</strong> be less than <code>pQueueFamilyPropertyCount</code> returned by <code>vkGetPhysicalDeviceQueueFamilyProperties</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueCreateInfo-queueCount-00382",
          "text": "<code>queueCount</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>queueCount</code> member of the <code>VkQueueFamilyProperties</code> structure, as returned by <code>vkGetPhysicalDeviceQueueFamilyProperties</code> in the <code>pQueueFamilyProperties</code>[queueFamilyIndex]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueCreateInfo-pQueuePriorities-00383",
          "text": "Each element of <code>pQueuePriorities</code> <strong class=\"purple\">must</strong> be between <code>0.0</code> and <code>1.0</code> inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueCreateInfo-flags-02861",
          "text": "If the <a href=\"#features-protectedMemory\"><code>protectedMemory</code></a> feature is not enabled, the <code>VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT</code> bit of <code>flags</code> <strong class=\"purple\">must</strong> not be set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueCreateInfo-flags-06449",
          "text": "If <code>flags</code> includes <code>VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT</code>, <code>queueFamilyIndex</code> <strong class=\"purple\">must</strong> be the index of a queue family that includes the <code>VK_QUEUE_PROTECTED_BIT</code> capability",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkDeviceQueueGlobalPriorityCreateInfoKHR\">VkDeviceQueueGlobalPriorityCreateInfoKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkDeviceQueueCreateFlagBits\">VkDeviceQueueCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueCreateInfo-pQueuePriorities-parameter",
          "text": "<code>pQueuePriorities</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>queueCount</code> <code>float</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueCreateInfo-queueCount-arraylength",
          "text": "<code>queueCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceQueueGlobalPriorityCreateInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkDeviceQueueGlobalPriorityCreateInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueGlobalPriorityCreateInfoKHR-globalPriority-parameter",
          "text": "<code>globalPriority</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueueGlobalPriorityKHR\">VkQueueGlobalPriorityKHR</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDeviceQueue": {
      "core": [
        {
          "vuid": "VUID-vkGetDeviceQueue-queueFamilyIndex-00384",
          "text": "<code>queueFamilyIndex</code> <strong class=\"purple\">must</strong> be one of the queue family indices specified when <code>device</code> was created, via the <a href=\"#VkDeviceQueueCreateInfo\">VkDeviceQueueCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceQueue-queueIndex-00385",
          "text": "<code>queueIndex</code> <strong class=\"purple\">must</strong> be less than the value of <a href=\"#VkDeviceQueueCreateInfo\">VkDeviceQueueCreateInfo</a>::<code>queueCount</code> for the queue family indicated by <code>queueFamilyIndex</code> when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceQueue-flags-01841",
          "text": "<a href=\"#VkDeviceQueueCreateInfo\">VkDeviceQueueCreateInfo</a>::<code>flags</code> <strong class=\"purple\">must</strong> have been set to zero when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceQueue-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceQueue-pQueue-parameter",
          "text": "<code>pQueue</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkQueue\">VkQueue</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDeviceQueue2": {
      "core": [
        {
          "vuid": "VUID-vkGetDeviceQueue2-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceQueue2-pQueueInfo-parameter",
          "text": "<code>pQueueInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDeviceQueueInfo2\">VkDeviceQueueInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceQueue2-pQueue-parameter",
          "text": "<code>pQueue</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkQueue\">VkQueue</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceQueueInfo2": {
      "core": [
        {
          "vuid": "VUID-VkDeviceQueueInfo2-queueFamilyIndex-01842",
          "text": "<code>queueFamilyIndex</code> <strong class=\"purple\">must</strong> be one of the queue family indices specified when <code>device</code> was created, via the <a href=\"#VkDeviceQueueCreateInfo\">VkDeviceQueueCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueInfo2-flags-06225",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be equal to <a href=\"#VkDeviceQueueCreateInfo\">VkDeviceQueueCreateInfo</a>::<code>flags</code> for a <a href=\"#VkDeviceQueueCreateInfo\">VkDeviceQueueCreateInfo</a> structure for the queue family indicated by <code>queueFamilyIndex</code> when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueInfo2-queueIndex-01843",
          "text": "<code>queueIndex</code> <strong class=\"purple\">must</strong> be less than <a href=\"#VkDeviceQueueCreateInfo\">VkDeviceQueueCreateInfo</a>::<code>queueCount</code> for the corresponding queue family and flags indicated by <code>queueFamilyIndex</code> and <code>flags</code> when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueInfo2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueInfo2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceQueueInfo2-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkDeviceQueueCreateFlagBits\">VkDeviceQueueCreateFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateCommandPool": {
      "core": [
        {
          "vuid": "VUID-vkCreateCommandPool-queueFamilyIndex-01937",
          "text": "<code>pCreateInfo-&gt;queueFamilyIndex</code> <strong class=\"purple\">must</strong> be the index of a queue family available in the logical device <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateCommandPool-device-05068",
          "text": "The number of command pools currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of command pools requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>commandPoolRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateCommandPool-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateCommandPool-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkCommandPoolCreateInfo\">VkCommandPoolCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateCommandPool-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateCommandPool-pCommandPool-parameter",
          "text": "<code>pCommandPool</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkCommandPool\">VkCommandPool</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkCommandPoolCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkCommandPoolCreateInfo-flags-02860",
          "text": "If the <a href=\"#features-protectedMemory\"><code>protectedMemory</code></a> feature is not enabled, the <code>VK_COMMAND_POOL_CREATE_PROTECTED_BIT</code> bit of <code>flags</code> <strong class=\"purple\">must</strong> not be set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandPoolCreateInfo-pNext-05002",
          "text": "The <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkCommandPoolMemoryReservationCreateInfo\">VkCommandPoolMemoryReservationCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandPoolCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandPoolCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkCommandPoolMemoryReservationCreateInfo\">VkCommandPoolMemoryReservationCreateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandPoolCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandPoolCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkCommandPoolCreateFlagBits\">VkCommandPoolCreateFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkCommandPoolMemoryReservationCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkCommandPoolMemoryReservationCreateInfo-commandPoolReservedSize-05003",
          "text": "<code>commandPoolReservedSize</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandPoolMemoryReservationCreateInfo-commandPoolMaxCommandBuffers-05004",
          "text": "<code>commandPoolMaxCommandBuffers</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandPoolMemoryReservationCreateInfo-commandPoolMaxCommandBuffers-05090",
          "text": "<code>commandPoolMaxCommandBuffers</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceVulkanSC10Properties\">VkPhysicalDeviceVulkanSC10Properties</a>::<code>maxCommandPoolCommandBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandPoolMemoryReservationCreateInfo-commandPoolMaxCommandBuffers-05074",
          "text": "The number of command buffers reserved by all command pools plus <code>commandPoolMaxCommandBuffers</code> <strong class=\"purple\">must</strong> be less than or equal to the total number of command buffers requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>commandBufferRequestCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandPoolMemoryReservationCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COMMAND_POOL_MEMORY_RESERVATION_CREATE_INFO</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetCommandPoolMemoryConsumption": {
      "core": [
        {
          "vuid": "VUID-vkGetCommandPoolMemoryConsumption-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetCommandPoolMemoryConsumption-commandPool-parameter",
          "text": "<code>commandPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandPool\">VkCommandPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetCommandPoolMemoryConsumption-commandBuffer-parameter",
          "text": "If <code>commandBuffer</code> is not <code>NULL</code>, <code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetCommandPoolMemoryConsumption-pConsumption-parameter",
          "text": "<code>pConsumption</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkCommandPoolMemoryConsumption\">VkCommandPoolMemoryConsumption</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetCommandPoolMemoryConsumption-commandPool-parent",
          "text": "<code>commandPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetCommandPoolMemoryConsumption-commandBuffer-parent",
          "text": "If <code>commandBuffer</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>commandPool</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkCommandPoolMemoryConsumption": {
      "core": [
        {
          "vuid": "VUID-VkCommandPoolMemoryConsumption-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COMMAND_POOL_MEMORY_CONSUMPTION</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandPoolMemoryConsumption-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkResetCommandPool": {
      "core": [
        {
          "vuid": "VUID-vkResetCommandPool-commandPool-00040",
          "text": "All <code>VkCommandBuffer</code> objects allocated from <code>commandPool</code> <strong class=\"purple\">must</strong> not be in the <a href=\"#commandbuffers-lifecycle\">pending state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetCommandPool-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetCommandPool-commandPool-parameter",
          "text": "<code>commandPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandPool\">VkCommandPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetCommandPool-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetCommandPool-commandPool-parent",
          "text": "<code>commandPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkAllocateCommandBuffers": {
      "core": [
        {
          "vuid": "VUID-vkAllocateCommandBuffers-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateCommandBuffers-pAllocateInfo-parameter",
          "text": "<code>pAllocateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkCommandBufferAllocateInfo\">VkCommandBufferAllocateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateCommandBuffers-pCommandBuffers-parameter",
          "text": "<code>pCommandBuffers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pAllocateInfo-&gt;commandBufferCount</code> <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateCommandBuffers-pAllocateInfo::commandBufferCount-arraylength",
          "text": "<code>pAllocateInfo-&gt;commandBufferCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkCommandBufferAllocateInfo": {
      "core": [
        {
          "vuid": "VUID-VkCommandBufferAllocateInfo-commandPool-05006",
          "text": "The number of command buffers currently allocated from <code>commandPool</code> plus <code>commandBufferCount</code> <strong class=\"purple\">must</strong> be less than or equal to the value of <a href=\"#VkCommandPoolMemoryReservationCreateInfo\">VkCommandPoolMemoryReservationCreateInfo</a>::<code>commandPoolMaxCommandBuffers</code> specified when <code>commandPool</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferAllocateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferAllocateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferAllocateInfo-commandPool-parameter",
          "text": "<code>commandPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandPool\">VkCommandPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferAllocateInfo-level-parameter",
          "text": "<code>level</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBufferLevel\">VkCommandBufferLevel</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkResetCommandBuffer": {
      "core": [
        {
          "vuid": "VUID-vkResetCommandBuffer-commandBuffer-00045",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> not be in the <a href=\"#commandbuffers-lifecycle\">pending state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetCommandBuffer-commandBuffer-00046",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> have been allocated from a pool that was created with the <code>VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetCommandBuffer-commandPoolResetCommandBuffer-05135",
          "text": "<a href=\"#limits-commandPoolResetCommandBuffer\"><code>commandPoolResetCommandBuffer</code></a> <strong class=\"purple\">must</strong> be supported",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetCommandBuffer-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetCommandBuffer-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkCommandBufferResetFlagBits\">VkCommandBufferResetFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkFreeCommandBuffers": {
      "core": [
        {
          "vuid": "VUID-vkFreeCommandBuffers-pCommandBuffers-00047",
          "text": "All elements of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> not be in the <a href=\"#commandbuffers-lifecycle\">pending state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeCommandBuffers-pCommandBuffers-00048",
          "text": "<code>pCommandBuffers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>commandBufferCount</code> <code>VkCommandBuffer</code> handles, each element of which <strong class=\"purple\">must</strong> either be a valid handle or <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeCommandBuffers-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeCommandBuffers-commandPool-parameter",
          "text": "<code>commandPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandPool\">VkCommandPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeCommandBuffers-commandBufferCount-arraylength",
          "text": "<code>commandBufferCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeCommandBuffers-commandPool-parent",
          "text": "<code>commandPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeCommandBuffers-pCommandBuffers-parent",
          "text": "Each element of <code>pCommandBuffers</code> that is a valid handle <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>commandPool</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkBeginCommandBuffer": {
      "core": [
        {
          "vuid": "VUID-vkBeginCommandBuffer-commandBuffer-00049",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> not be in the <a href=\"#commandbuffers-lifecycle\">recording or pending state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBeginCommandBuffer-commandBuffer-00050",
          "text": "If <code>commandBuffer</code> was allocated from a <a href=\"#VkCommandPool\">VkCommandPool</a> which did not have the <code>VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT</code> flag set, <code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">initial state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBeginCommandBuffer-commandPoolResetCommandBuffer-05136",
          "text": "If <a href=\"#limits-commandPoolResetCommandBuffer\"><code>commandPoolResetCommandBuffer</code></a> is not supported, <code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">initial state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBeginCommandBuffer-commandBuffer-00051",
          "text": "If <code>commandBuffer</code> is a secondary command buffer, the <code>pInheritanceInfo</code> member of <code>pBeginInfo</code> <strong class=\"purple\">must</strong> be a valid <code>VkCommandBufferInheritanceInfo</code> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBeginCommandBuffer-commandBuffer-00052",
          "text": "If <code>commandBuffer</code> is a secondary command buffer and either the <code>occlusionQueryEnable</code> member of the <code>pInheritanceInfo</code> member of <code>pBeginInfo</code> is <code>VK_FALSE</code>, or the <a href=\"#features-occlusionQueryPrecise\"><code>occlusionQueryPrecise</code></a> feature is not enabled, then <code>pBeginInfo-&gt;pInheritanceInfo-&gt;queryFlags</code> <strong class=\"purple\">must</strong> not contain <code>VK_QUERY_CONTROL_PRECISE_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBeginCommandBuffer-commandBuffer-02840",
          "text": "If <code>commandBuffer</code> is a primary command buffer, then <code>pBeginInfo-&gt;flags</code> <strong class=\"purple\">must</strong> not set both the <code>VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT</code> and the <code>VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT</code> flags",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBeginCommandBuffer-commandPoolMultipleCommandBuffersRecording-05007",
          "text": "If <a href=\"#limits-commandPoolMultipleCommandBuffersRecording\"><code>commandPoolMultipleCommandBuffersRecording</code></a> is <code>VK_FALSE</code>, then the command pool that <code>commandBuffer</code> was created from <strong class=\"purple\">must</strong> have no other command buffers in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBeginCommandBuffer-commandBufferSimultaneousUse-05008",
          "text": "If <a href=\"#limits-commandBufferSimultaneousUse\"><code>commandBufferSimultaneousUse</code></a> is <code>VK_FALSE</code>, then <code>pBeginInfo-&gt;flags</code> <strong class=\"purple\">must</strong> not include <code>VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBeginCommandBuffer-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBeginCommandBuffer-pBeginInfo-parameter",
          "text": "<code>pBeginInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkCommandBufferBeginInfo\">VkCommandBufferBeginInfo</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkCommandBufferBeginInfo": {
      "core": [
        {
          "vuid": "VUID-VkCommandBufferBeginInfo-flags-09123",
          "text": "If <code>flags</code> contains <code>VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT</code>, the <a href=\"#VkCommandPool\">VkCommandPool</a> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferBeginInfo-flags-05009",
          "text": "If <code>flags</code> contains <code>VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT</code> and <code>secondaryCommandBufferNullOrImagelessFramebuffer</code> is <code>VK_TRUE</code>, the <code>framebuffer</code> member of <code>pInheritanceInfo</code> <strong class=\"purple\">must</strong> be either <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, or a valid <code>VkFramebuffer</code> that is compatible with the <code>renderPass</code> member of <code>pInheritanceInfo</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferBeginInfo-flags-05010",
          "text": "If <code>flags</code> contains <code>VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT</code> and <code>secondaryCommandBufferNullOrImagelessFramebuffer</code> is <code>VK_FALSE</code>, the <code>framebuffer</code> member of <code>pInheritanceInfo</code> <strong class=\"purple\">must</strong> be a valid <code>VkFramebuffer</code> that is compatible with the <code>renderPass</code> member of <code>pInheritanceInfo</code> and <strong class=\"purple\">must</strong> not have been created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferBeginInfo-flags-06000",
          "text": "If <code>flags</code> contains <code>VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT</code> the <code>renderPass</code> member of <code>pInheritanceInfo</code> <strong class=\"purple\">must</strong> be a valid <code>VkRenderPass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferBeginInfo-flags-06001",
          "text": "If <code>flags</code> contains <code>VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT</code> the <code>subpass</code> member of <code>pInheritanceInfo</code> <strong class=\"purple\">must</strong> be a valid subpass index within the <code>renderPass</code> member of <code>pInheritanceInfo</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferBeginInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferBeginInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkDeviceGroupCommandBufferBeginInfo\">VkDeviceGroupCommandBufferBeginInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferBeginInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferBeginInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkCommandBufferUsageFlagBits\">VkCommandBufferUsageFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkCommandBufferInheritanceInfo": {
      "core": [
        {
          "vuid": "VUID-VkCommandBufferInheritanceInfo-occlusionQueryEnable-00056",
          "text": "If the <a href=\"#features-inheritedQueries\"><code>inheritedQueries</code></a> feature is not enabled, <code>occlusionQueryEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferInheritanceInfo-queryFlags-00057",
          "text": "If the <a href=\"#features-inheritedQueries\"><code>inheritedQueries</code></a> feature is enabled, <code>queryFlags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkQueryControlFlagBits\">VkQueryControlFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferInheritanceInfo-queryFlags-02788",
          "text": "If the <a href=\"#features-inheritedQueries\"><code>inheritedQueries</code></a> feature is not enabled, <code>queryFlags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferInheritanceInfo-pipelineStatistics-02789",
          "text": "If the <a href=\"#features-pipelineStatisticsQuery\"><code>pipelineStatisticsQuery</code></a> feature is enabled, <code>pipelineStatistics</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkQueryPipelineStatisticFlagBits\">VkQueryPipelineStatisticFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferInheritanceInfo-pipelineStatistics-00058",
          "text": "If the <a href=\"#features-pipelineStatisticsQuery\"><code>pipelineStatisticsQuery</code></a> feature is not enabled, <code>pipelineStatistics</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferInheritanceInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferInheritanceInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferInheritanceInfo-commonparent",
          "text": "Both of <code>framebuffer</code>, and <code>renderPass</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkEndCommandBuffer": {
      "core": [
        {
          "vuid": "VUID-vkEndCommandBuffer-commandBuffer-00059",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEndCommandBuffer-commandBuffer-00060",
          "text": "If <code>commandBuffer</code> is a primary command buffer, there <strong class=\"purple\">must</strong> not be an active render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEndCommandBuffer-commandBuffer-00061",
          "text": "All queries made <a href=\"#queries-operation-active\">active</a> during the recording of <code>commandBuffer</code> <strong class=\"purple\">must</strong> have been made inactive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEndCommandBuffer-commandBuffer-01815",
          "text": "If <code>commandBuffer</code> is a secondary command buffer, there <strong class=\"purple\">must</strong> not be an outstanding <a href=\"#vkCmdBeginDebugUtilsLabelEXT\">vkCmdBeginDebugUtilsLabelEXT</a> command recorded to <code>commandBuffer</code> that has not previously been ended by a call to <a href=\"#vkCmdEndDebugUtilsLabelEXT\">vkCmdEndDebugUtilsLabelEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEndCommandBuffer-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkQueueSubmit2": {
      "core": [
        {
          "vuid": "VUID-vkQueueSubmit2-fence-04894",
          "text": "If <code>fence</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>fence</code> <strong class=\"purple\">must</strong> be unsignaled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-fence-04895",
          "text": "If <code>fence</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>fence</code> <strong class=\"purple\">must</strong> not be associated with any other queue command that has not yet completed execution on that queue",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-synchronization2-03866",
          "text": "The <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-commandBuffer-03867",
          "text": "If a command recorded into the <code>commandBuffer</code> member of any element of the <code>pCommandBufferInfos</code> member of any element of <code>pSubmits</code> referenced an <a href=\"#VkEvent\">VkEvent</a>, that event <strong class=\"purple\">must</strong> not be referenced by a command that has been submitted to another queue and is still in the <em>pending state</em>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-semaphore-03868",
          "text": "The <code>semaphore</code> member of any binary semaphore element of the <code>pSignalSemaphoreInfos</code> member of any element of <code>pSubmits</code> <strong class=\"purple\">must</strong> be unsignaled when the semaphore signal operation it defines is executed on the device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-stageMask-03869",
          "text": "The <code>stageMask</code> member of any element of the <code>pSignalSemaphoreInfos</code> member of any element of <code>pSubmits</code> <strong class=\"purple\">must</strong> only include pipeline stages that are supported by the queue family which <code>queue</code> belongs to",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-stageMask-03870",
          "text": "The <code>stageMask</code> member of any element of the <code>pWaitSemaphoreInfos</code> member of any element of <code>pSubmits</code> <strong class=\"purple\">must</strong> only include pipeline stages that are supported by the queue family which <code>queue</code> belongs to",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-semaphore-03871",
          "text": "When a semaphore wait operation for a binary semaphore is executed, as defined by the <code>semaphore</code> member of any element of the <code>pWaitSemaphoreInfos</code> member of any element of <code>pSubmits</code>, there <strong class=\"purple\">must</strong> be no other queues waiting on the same semaphore",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-semaphore-03873",
          "text": "The <code>semaphore</code> member of any element of the <code>pWaitSemaphoreInfos</code> member of any element of <code>pSubmits</code> that was created with a <code>VkSemaphoreTypeKHR</code> of <code>VK_SEMAPHORE_TYPE_BINARY_KHR</code> <strong class=\"purple\">must</strong> reference a semaphore signal operation that has been submitted for execution and any <a href=\"#synchronization-semaphores-signaling\">semaphore signal operations</a> on which it depends <strong class=\"purple\">must</strong> have also been submitted for execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-commandBuffer-03874",
          "text": "The <code>commandBuffer</code> member of any element of the <code>pCommandBufferInfos</code> member of any element of <code>pSubmits</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">pending or executable state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-commandBuffer-03875",
          "text": "If a command recorded into the <code>commandBuffer</code> member of any element of the <code>pCommandBufferInfos</code> member of any element of <code>pSubmits</code> was not recorded with the <code>VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT</code>, it <strong class=\"purple\">must</strong> not be in the <a href=\"#commandbuffers-lifecycle\">pending state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-commandBuffer-03876",
          "text": "Any <a href=\"#commandbuffers-secondary\">secondary command buffers recorded</a> into the <code>commandBuffer</code> member of any element of the <code>pCommandBufferInfos</code> member of any element of <code>pSubmits</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">pending or executable state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-commandBuffer-03877",
          "text": "If any <a href=\"#commandbuffers-secondary\">secondary command buffers recorded</a> into the <code>commandBuffer</code> member of any element of the <code>pCommandBufferInfos</code> member of any element of <code>pSubmits</code> was not recorded with the <code>VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT</code>, it <strong class=\"purple\">must</strong> not be in the <a href=\"#commandbuffers-lifecycle\">pending state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-commandBuffer-03878",
          "text": "The <code>commandBuffer</code> member of any element of the <code>pCommandBufferInfos</code> member of any element of <code>pSubmits</code> <strong class=\"purple\">must</strong> have been allocated from a <code>VkCommandPool</code> that was created for the same queue family <code>queue</code> belongs to",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-commandBuffer-03879",
          "text": "If a command recorded into the <code>commandBuffer</code> member of any element of the <code>pCommandBufferInfos</code> member of any element of <code>pSubmits</code> includes a <a href=\"#synchronization-queue-transfers-acquire\">Queue Family Transfer Acquire Operation</a>, there <strong class=\"purple\">must</strong> exist a previously submitted <a href=\"#synchronization-queue-transfers-release\">Queue Family Transfer Release Operation</a> on a queue in the queue family identified by the acquire operation, with parameters matching the acquire operation as defined in the definition of such <a href=\"#synchronization-queue-transfers-acquire\">acquire operations</a>, and which happens before the acquire operation",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-commandBuffer-03880",
          "text": "If a command recorded into the <code>commandBuffer</code> member of any element of the <code>pCommandBufferInfos</code> member of any element of <code>pSubmits</code> was a <a href=\"#vkCmdBeginQuery\">vkCmdBeginQuery</a> whose <code>queryPool</code> was created with a <code>queryType</code> of <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, the <a href=\"#profiling-lock\">profiling lock</a> <strong class=\"purple\">must</strong> have been held continuously on the <code>VkDevice</code> that <code>queue</code> was retrieved from, throughout recording of those command buffers",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-queue-06447",
          "text": "If <code>queue</code> was not created with <code>VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT</code>, the <code>flags</code> member of any element of <code>pSubmits</code> <strong class=\"purple\">must</strong> not include <code>VK_SUBMIT_PROTECTED_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-queue-parameter",
          "text": "<code>queue</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueue\">VkQueue</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-pSubmits-parameter",
          "text": "If <code>submitCount</code> is not <code>0</code>, <code>pSubmits</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>submitCount</code> valid <a href=\"#VkSubmitInfo2\">VkSubmitInfo2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-fence-parameter",
          "text": "If <code>fence</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>fence</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit2-commonparent",
          "text": "Both of <code>fence</code>, and <code>queue</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkSubmitInfo2": {
      "core": [
        {
          "vuid": "VUID-VkSubmitInfo2-flags-03886",
          "text": "If <code>flags</code> includes <code>VK_SUBMIT_PROTECTED_BIT</code>, all elements of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> be protected command buffers",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo2-flags-03887",
          "text": "If <code>flags</code> does not include <code>VK_SUBMIT_PROTECTED_BIT</code>, each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> not be a protected command buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SUBMIT_INFO_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkPerformanceQuerySubmitInfoKHR\">VkPerformanceQuerySubmitInfoKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo2-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkSubmitFlagBits\">VkSubmitFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo2-pWaitSemaphoreInfos-parameter",
          "text": "If <code>waitSemaphoreInfoCount</code> is not <code>0</code>, <code>pWaitSemaphoreInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>waitSemaphoreInfoCount</code> valid <a href=\"#VkSemaphoreSubmitInfo\">VkSemaphoreSubmitInfo</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo2-pCommandBufferInfos-parameter",
          "text": "If <code>commandBufferInfoCount</code> is not <code>0</code>, <code>pCommandBufferInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>commandBufferInfoCount</code> valid <a href=\"#VkCommandBufferSubmitInfo\">VkCommandBufferSubmitInfo</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo2-pSignalSemaphoreInfos-parameter",
          "text": "If <code>signalSemaphoreInfoCount</code> is not <code>0</code>, <code>pSignalSemaphoreInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>signalSemaphoreInfoCount</code> valid <a href=\"#VkSemaphoreSubmitInfo\">VkSemaphoreSubmitInfo</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkSemaphoreSubmitInfo": {
      "core": [
        {
          "vuid": "VUID-VkSemaphoreSubmitInfo-stageMask-03929",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSubmitInfo-stageMask-03930",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSubmitInfo-stageMask-07317",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSubmitInfo-device-03888",
          "text": "If the <code>device</code> that <code>semaphore</code> was created on is not a device group, <code>deviceIndex</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSubmitInfo-device-03889",
          "text": "If the <code>device</code> that <code>semaphore</code> was created on is a device group, <code>deviceIndex</code> <strong class=\"purple\">must</strong> be a valid device index",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSubmitInfoKHR-semaphore-05094",
          "text": "If <code>semaphore</code> has a payload of <code>NvSciSyncObj</code>, <code>value</code> <strong class=\"purple\">must</strong> be calculated by application via <a href=\"#NvSciSync-extension-page\">NvSciSync APIs</a>.",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSubmitInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSubmitInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSubmitInfo-semaphore-parameter",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSemaphore\">VkSemaphore</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSubmitInfo-stageMask-parameter",
          "text": "<code>stageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits2\">VkPipelineStageFlagBits2</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkCommandBufferSubmitInfo": {
      "core": [
        {
          "vuid": "VUID-VkCommandBufferSubmitInfo-commandBuffer-03890",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> not have been allocated with <code>VK_COMMAND_BUFFER_LEVEL_SECONDARY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferSubmitInfo-deviceMask-03891",
          "text": "If <code>deviceMask</code> is not <code>0</code>, it <strong class=\"purple\">must</strong> be a valid device mask",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferSubmitInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferSubmitInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCommandBufferSubmitInfo-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkQueueSubmit": {
      "core": [
        {
          "vuid": "VUID-vkQueueSubmit-fence-00063",
          "text": "If <code>fence</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>fence</code> <strong class=\"purple\">must</strong> be unsignaled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-fence-00064",
          "text": "If <code>fence</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>fence</code> <strong class=\"purple\">must</strong> not be associated with any other queue command that has not yet completed execution on that queue",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pCommandBuffers-00065",
          "text": "Any calls to <a href=\"#vkCmdSetEvent\">vkCmdSetEvent</a>, <a href=\"#vkCmdResetEvent\">vkCmdResetEvent</a> or <a href=\"#vkCmdWaitEvents\">vkCmdWaitEvents</a> that have been recorded into any of the command buffer elements of the <code>pCommandBuffers</code> member of any element of <code>pSubmits</code>, <strong class=\"purple\">must</strong> not reference any <a href=\"#VkEvent\">VkEvent</a> that is referenced by any of those commands in a command buffer that has been submitted to another queue and is still in the <em>pending state</em>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pWaitDstStageMask-00066",
          "text": "Any stage flag included in any element of the <code>pWaitDstStageMask</code> member of any element of <code>pSubmits</code> <strong class=\"purple\">must</strong> be a pipeline stage supported by one of the capabilities of <code>queue</code>, as specified in the <a href=\"#synchronization-pipeline-stages-supported\">table of supported pipeline stages</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pSignalSemaphores-00067",
          "text": "Each binary semaphore element of the <code>pSignalSemaphores</code> member of any element of <code>pSubmits</code> <strong class=\"purple\">must</strong> be unsignaled when the semaphore signal operation it defines is executed on the device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pWaitSemaphores-00068",
          "text": "When a semaphore wait operation referring to a binary semaphore defined by any element of the <code>pWaitSemaphores</code> member of any element of <code>pSubmits</code> executes on <code>queue</code>, there <strong class=\"purple\">must</strong> be no other queues waiting on the same semaphore",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pWaitSemaphores-03238",
          "text": "All elements of the <code>pWaitSemaphores</code> member of all elements of <code>pSubmits</code> created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_BINARY</code> <strong class=\"purple\">must</strong> reference a semaphore signal operation that has been submitted for execution and any <a href=\"#synchronization-semaphores-signaling\">semaphore signal operations</a> on which it depends <strong class=\"purple\">must</strong> have also been submitted for execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pCommandBuffers-00070",
          "text": "Each element of the <code>pCommandBuffers</code> member of each element of <code>pSubmits</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">pending or executable state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pCommandBuffers-00071",
          "text": "If any element of the <code>pCommandBuffers</code> member of any element of <code>pSubmits</code> was not recorded with the <code>VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT</code>, it <strong class=\"purple\">must</strong> not be in the <a href=\"#commandbuffers-lifecycle\">pending state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pCommandBuffers-00072",
          "text": "Any <a href=\"#commandbuffers-secondary\">secondary command buffers recorded</a> into any element of the <code>pCommandBuffers</code> member of any element of <code>pSubmits</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">pending or executable state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pCommandBuffers-00073",
          "text": "If any <a href=\"#commandbuffers-secondary\">secondary command buffers recorded</a> into any element of the <code>pCommandBuffers</code> member of any element of <code>pSubmits</code> was not recorded with the <code>VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT</code>, it <strong class=\"purple\">must</strong> not be in the <a href=\"#commandbuffers-lifecycle\">pending state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pCommandBuffers-00074",
          "text": "Each element of the <code>pCommandBuffers</code> member of each element of <code>pSubmits</code> <strong class=\"purple\">must</strong> have been allocated from a <code>VkCommandPool</code> that was created for the same queue family <code>queue</code> belongs to",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pSubmits-02207",
          "text": "If any element of <code>pSubmits-&gt;pCommandBuffers</code> includes a <a href=\"#synchronization-queue-transfers-acquire\">Queue Family Transfer Acquire Operation</a>, there <strong class=\"purple\">must</strong> exist a previously submitted <a href=\"#synchronization-queue-transfers-release\">Queue Family Transfer Release Operation</a> on a queue in the queue family identified by the acquire operation, with parameters matching the acquire operation as defined in the definition of such <a href=\"#synchronization-queue-transfers-acquire\">acquire operations</a>, and which happens-before the acquire operation",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pCommandBuffers-03220",
          "text": "If a command recorded into any element of <code>pCommandBuffers</code> was a <a href=\"#vkCmdBeginQuery\">vkCmdBeginQuery</a> whose <code>queryPool</code> was created with a <code>queryType</code> of <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, the <a href=\"#profiling-lock\">profiling lock</a> <strong class=\"purple\">must</strong> have been held continuously on the <code>VkDevice</code> that <code>queue</code> was retrieved from, throughout recording of those command buffers",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pSubmits-02808",
          "text": "Any resource created with <code>VK_SHARING_MODE_EXCLUSIVE</code> that is read by an operation specified by <code>pSubmits</code> <strong class=\"purple\">must</strong> not be owned by any queue family other than the one which <code>queue</code> belongs to, at the time it is executed",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pSubmits-04626",
          "text": "Any resource created with <code>VK_SHARING_MODE_CONCURRENT</code> that is accessed by an operation specified by <code>pSubmits</code> <strong class=\"purple\">must</strong> have included the queue family of <code>queue</code> at resource creation time",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-queue-06448",
          "text": "If <code>queue</code> was not created with <code>VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT</code>, there <strong class=\"purple\">must</strong> be no element of <code>pSubmits</code> that includes an <a href=\"#VkProtectedSubmitInfo\">VkProtectedSubmitInfo</a> structure in its <code>pNext</code> chain with <code>protectedSubmit</code> equal to <code>VK_TRUE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-queue-parameter",
          "text": "<code>queue</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueue\">VkQueue</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-pSubmits-parameter",
          "text": "If <code>submitCount</code> is not <code>0</code>, <code>pSubmits</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>submitCount</code> valid <a href=\"#VkSubmitInfo\">VkSubmitInfo</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-fence-parameter",
          "text": "If <code>fence</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>fence</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueSubmit-commonparent",
          "text": "Both of <code>fence</code>, and <code>queue</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkSubmitInfo": {
      "core": [
        {
          "vuid": "VUID-VkSubmitInfo-pWaitDstStageMask-04090",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>pWaitDstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pWaitDstStageMask-04091",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>pWaitDstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pWaitDstStageMask-07319",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>pWaitDstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pWaitDstStageMask-03937",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>pWaitDstStageMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pCommandBuffers-00075",
          "text": "Each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> not have been allocated with <code>VK_COMMAND_BUFFER_LEVEL_SECONDARY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pWaitDstStageMask-00078",
          "text": "Each element of <code>pWaitDstStageMask</code> <strong class=\"purple\">must</strong> not include <code>VK_PIPELINE_STAGE_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pWaitSemaphores-03239",
          "text": "If any element of <code>pWaitSemaphores</code> or <code>pSignalSemaphores</code> was created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code>, then the <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkTimelineSemaphoreSubmitInfo\">VkTimelineSemaphoreSubmitInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pNext-03240",
          "text": "If the <code>pNext</code> chain of this structure includes a <a href=\"#VkTimelineSemaphoreSubmitInfo\">VkTimelineSemaphoreSubmitInfo</a> structure and any element of <code>pWaitSemaphores</code> was created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code>, then its <code>waitSemaphoreValueCount</code> member <strong class=\"purple\">must</strong> equal <code>waitSemaphoreCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pNext-03241",
          "text": "If the <code>pNext</code> chain of this structure includes a <a href=\"#VkTimelineSemaphoreSubmitInfo\">VkTimelineSemaphoreSubmitInfo</a> structure and any element of <code>pSignalSemaphores</code> was created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code>, then its <code>signalSemaphoreValueCount</code> member <strong class=\"purple\">must</strong> equal <code>signalSemaphoreCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pSignalSemaphores-03242",
          "text": "For each element of <code>pSignalSemaphores</code> created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code> the corresponding element of <a href=\"#VkTimelineSemaphoreSubmitInfo\">VkTimelineSemaphoreSubmitInfo</a>::<code>pSignalSemaphoreValues</code> <strong class=\"purple\">must</strong> have a value greater than the current value of the semaphore when the <a href=\"#synchronization-semaphores-signaling\">semaphore signal operation</a> is executed",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pWaitSemaphores-03243",
          "text": "For each element of <code>pWaitSemaphores</code> created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code> the corresponding element of <a href=\"#VkTimelineSemaphoreSubmitInfo\">VkTimelineSemaphoreSubmitInfo</a>::<code>pWaitSemaphoreValues</code> <strong class=\"purple\">must</strong> have a value which does not differ from the current value of the semaphore or the value of any outstanding semaphore wait or signal operation on that semaphore by more than <a href=\"#limits-maxTimelineSemaphoreValueDifference\"><code>maxTimelineSemaphoreValueDifference</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pSignalSemaphores-03244",
          "text": "For each element of <code>pSignalSemaphores</code> created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code> the corresponding element of <a href=\"#VkTimelineSemaphoreSubmitInfo\">VkTimelineSemaphoreSubmitInfo</a>::<code>pSignalSemaphoreValues</code> <strong class=\"purple\">must</strong> have a value which does not differ from the current value of the semaphore or the value of any outstanding semaphore wait or signal operation on that semaphore by more than <a href=\"#limits-maxTimelineSemaphoreValueDifference\"><code>maxTimelineSemaphoreValueDifference</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pNext-04120",
          "text": "If the <code>pNext</code> chain of this structure does not include a <code>VkProtectedSubmitInfo</code> structure with <code>protectedSubmit</code> set to <code>VK_TRUE</code>, then each element of the <code>pCommandBuffers</code> array <strong class=\"purple\">must</strong> be an unprotected command buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pNext-04148",
          "text": "If the <code>pNext</code> chain of this structure includes a <code>VkProtectedSubmitInfo</code> structure with <code>protectedSubmit</code> set to <code>VK_TRUE</code>, then each element of the <code>pCommandBuffers</code> array <strong class=\"purple\">must</strong> be a protected command buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SUBMIT_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkDeviceGroupSubmitInfo\">VkDeviceGroupSubmitInfo</a>, <a href=\"#VkPerformanceQuerySubmitInfoKHR\">VkPerformanceQuerySubmitInfoKHR</a>, <a href=\"#VkProtectedSubmitInfo\">VkProtectedSubmitInfo</a>, or <a href=\"#VkTimelineSemaphoreSubmitInfo\">VkTimelineSemaphoreSubmitInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pWaitSemaphores-parameter",
          "text": "If <code>waitSemaphoreCount</code> is not <code>0</code>, <code>pWaitSemaphores</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>waitSemaphoreCount</code> valid <a href=\"#VkSemaphore\">VkSemaphore</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pWaitDstStageMask-parameter",
          "text": "If <code>waitSemaphoreCount</code> is not <code>0</code>, <code>pWaitDstStageMask</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>waitSemaphoreCount</code> valid combinations of <a href=\"#VkPipelineStageFlagBits\">VkPipelineStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pCommandBuffers-parameter",
          "text": "If <code>commandBufferCount</code> is not <code>0</code>, <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>commandBufferCount</code> valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-pSignalSemaphores-parameter",
          "text": "If <code>signalSemaphoreCount</code> is not <code>0</code>, <code>pSignalSemaphores</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>signalSemaphoreCount</code> valid <a href=\"#VkSemaphore\">VkSemaphore</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubmitInfo-commonparent",
          "text": "Each of the elements of <code>pCommandBuffers</code>, the elements of <code>pSignalSemaphores</code>, and the elements of <code>pWaitSemaphores</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkTimelineSemaphoreSubmitInfo": {
      "core": [
        {
          "vuid": "VUID-VkTimelineSemaphoreSubmitInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkTimelineSemaphoreSubmitInfo-pWaitSemaphoreValues-parameter",
          "text": "If <code>waitSemaphoreValueCount</code> is not <code>0</code>, and <code>pWaitSemaphoreValues</code> is not <code>NULL</code>, <code>pWaitSemaphoreValues</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>waitSemaphoreValueCount</code> <code>uint64_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkTimelineSemaphoreSubmitInfo-pSignalSemaphoreValues-parameter",
          "text": "If <code>signalSemaphoreValueCount</code> is not <code>0</code>, and <code>pSignalSemaphoreValues</code> is not <code>NULL</code>, <code>pSignalSemaphoreValues</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>signalSemaphoreValueCount</code> <code>uint64_t</code> values",
          "page": "vkspec"
        }
      ]
    },
    "VkProtectedSubmitInfo": {
      "core": [
        {
          "vuid": "VUID-VkProtectedSubmitInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceGroupSubmitInfo": {
      "core": [
        {
          "vuid": "VUID-VkDeviceGroupSubmitInfo-waitSemaphoreCount-00082",
          "text": "<code>waitSemaphoreCount</code> <strong class=\"purple\">must</strong> equal <a href=\"#VkSubmitInfo\">VkSubmitInfo</a>::<code>waitSemaphoreCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupSubmitInfo-commandBufferCount-00083",
          "text": "<code>commandBufferCount</code> <strong class=\"purple\">must</strong> equal <a href=\"#VkSubmitInfo\">VkSubmitInfo</a>::<code>commandBufferCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupSubmitInfo-signalSemaphoreCount-00084",
          "text": "<code>signalSemaphoreCount</code> <strong class=\"purple\">must</strong> equal <a href=\"#VkSubmitInfo\">VkSubmitInfo</a>::<code>signalSemaphoreCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupSubmitInfo-pWaitSemaphoreDeviceIndices-00085",
          "text": "All elements of <code>pWaitSemaphoreDeviceIndices</code> and <code>pSignalSemaphoreDeviceIndices</code> <strong class=\"purple\">must</strong> be valid device indices",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupSubmitInfo-pCommandBufferDeviceMasks-00086",
          "text": "All elements of <code>pCommandBufferDeviceMasks</code> <strong class=\"purple\">must</strong> be valid device masks",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupSubmitInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupSubmitInfo-pWaitSemaphoreDeviceIndices-parameter",
          "text": "If <code>waitSemaphoreCount</code> is not <code>0</code>, <code>pWaitSemaphoreDeviceIndices</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>waitSemaphoreCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupSubmitInfo-pCommandBufferDeviceMasks-parameter",
          "text": "If <code>commandBufferCount</code> is not <code>0</code>, <code>pCommandBufferDeviceMasks</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>commandBufferCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupSubmitInfo-pSignalSemaphoreDeviceIndices-parameter",
          "text": "If <code>signalSemaphoreCount</code> is not <code>0</code>, <code>pSignalSemaphoreDeviceIndices</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>signalSemaphoreCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        }
      ]
    },
    "VkPerformanceQuerySubmitInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkPerformanceQuerySubmitInfoKHR-counterPassIndex-03221",
          "text": "<code>counterPassIndex</code> <strong class=\"purple\">must</strong> be less than the number of counter passes required by any queries within the batch. The required number of counter passes for a performance query is obtained by calling <a href=\"#vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR\">vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPerformanceQuerySubmitInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdExecuteCommands": {
      "core": [
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-00088",
          "text": "Each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> have been allocated with a <code>level</code> of <code>VK_COMMAND_BUFFER_LEVEL_SECONDARY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-00089",
          "text": "Each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">pending or executable state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-00091",
          "text": "If any element of <code>pCommandBuffers</code> was not recorded with the <code>VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT</code> flag, it <strong class=\"purple\">must</strong> not be in the <a href=\"#commandbuffers-lifecycle\">pending state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-00092",
          "text": "If any element of <code>pCommandBuffers</code> was not recorded with the <code>VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT</code> flag, it <strong class=\"purple\">must</strong> not have already been recorded to <code>commandBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-00093",
          "text": "If any element of <code>pCommandBuffers</code> was not recorded with the <code>VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT</code> flag, it <strong class=\"purple\">must</strong> not appear more than once in <code>pCommandBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-00094",
          "text": "Each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> have been allocated from a <code>VkCommandPool</code> that was created for the same queue family as the <code>VkCommandPool</code> from which <code>commandBuffer</code> was allocated",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-00096",
          "text": "If <code>vkCmdExecuteCommands</code> is being called within a render pass instance, each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> have been recorded with the <code>VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-00099",
          "text": "If <code>vkCmdExecuteCommands</code> is being called within a render pass instance, and any element of <code>pCommandBuffers</code> was recorded with <a href=\"#VkCommandBufferInheritanceInfo\">VkCommandBufferInheritanceInfo</a>::<code>framebuffer</code> not equal to <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, that <code>VkFramebuffer</code> <strong class=\"purple\">must</strong> match the <code>VkFramebuffer</code> used in the current render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-contents-06018",
          "text": "If <code>vkCmdExecuteCommands</code> is being called within a render pass instance begun with <a href=\"#vkCmdBeginRenderPass\">vkCmdBeginRenderPass</a>, its <code>contents</code> parameter <strong class=\"purple\">must</strong> have been set to <code>VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-06019",
          "text": "If <code>vkCmdExecuteCommands</code> is being called within a render pass instance begun with <a href=\"#vkCmdBeginRenderPass\">vkCmdBeginRenderPass</a>, each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> have been recorded with <a href=\"#VkCommandBufferInheritanceInfo\">VkCommandBufferInheritanceInfo</a>::<code>subpass</code> set to the index of the subpass which the given command buffer will be executed in",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pBeginInfo-06020",
          "text": "If <code>vkCmdExecuteCommands</code> is being called within a render pass instance begun with <a href=\"#vkCmdBeginRenderPass\">vkCmdBeginRenderPass</a>, the render passes specified in the <code>pBeginInfo-&gt;pInheritanceInfo-&gt;renderPass</code> members of the <a href=\"#vkBeginCommandBuffer\">vkBeginCommandBuffer</a> commands used to begin recording each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> be <a href=\"#renderpass-compatibility\">compatible</a> with the current render pass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-00100",
          "text": "If <code>vkCmdExecuteCommands</code> is not being called within a render pass instance, each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> not have been recorded with the <code>VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-00101",
          "text": "If the <a href=\"#features-inheritedQueries\"><code>inheritedQueries</code></a> feature is not enabled, <code>commandBuffer</code> <strong class=\"purple\">must</strong> not have any queries <a href=\"#queries-operation-active\">active</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-00102",
          "text": "If <code>commandBuffer</code> has a <code>VK_QUERY_TYPE_OCCLUSION</code> query <a href=\"#queries-operation-active\">active</a>, then each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> have been recorded with <code>VkCommandBufferInheritanceInfo</code>::<code>occlusionQueryEnable</code> set to <code>VK_TRUE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-00103",
          "text": "If <code>commandBuffer</code> has a <code>VK_QUERY_TYPE_OCCLUSION</code> query <a href=\"#queries-operation-active\">active</a>, then each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> have been recorded with <code>VkCommandBufferInheritanceInfo</code>::<code>queryFlags</code> having all bits set that are set for the query",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-00104",
          "text": "If <code>commandBuffer</code> has a <code>VK_QUERY_TYPE_PIPELINE_STATISTICS</code> query <a href=\"#queries-operation-active\">active</a>, then each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> have been recorded with <code>VkCommandBufferInheritanceInfo</code>::<code>pipelineStatistics</code> having all bits set that are set in the <code>VkQueryPool</code> the query uses",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-00105",
          "text": "Each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> not begin any query types that are <a href=\"#queries-operation-active\">active</a> in <code>commandBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-07594",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> not have any queries other than <code>VK_QUERY_TYPE_OCCLUSION</code> and <code>VK_QUERY_TYPE_PIPELINE_STATISTICS</code> <a href=\"#queries-operation-active\">active</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-01820",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> be a protected command buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-01821",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, each element of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> be an unprotected command buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-06533",
          "text": "If <code>vkCmdExecuteCommands</code> is being called within a render pass instance and any recorded command in <code>commandBuffer</code> in the current subpass will write to an image subresource as an attachment, commands recorded in elements of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> not read from the memory backing that image subresource in any other way",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-06534",
          "text": "If <code>vkCmdExecuteCommands</code> is being called within a render pass instance and any recorded command in <code>commandBuffer</code> in the current subpass will read from an image subresource used as an attachment in any way other than as an attachment, commands recorded in elements of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> not write to that image subresource as an attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-06535",
          "text": "If <code>vkCmdExecuteCommands</code> is being called within a render pass instance and any recorded command in a given element of <code>pCommandBuffers</code> will write to an image subresource as an attachment, commands recorded in elements of <code>pCommandBuffers</code> at a higher index <strong class=\"purple\">must</strong> not read from the memory backing that image subresource in any other way",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-06536",
          "text": "If <code>vkCmdExecuteCommands</code> is being called within a render pass instance and any recorded command in a given element of <code>pCommandBuffers</code> will read from an image subresource used as an attachment in any way other than as an attachment, commands recorded in elements of <code>pCommandBuffers</code> at a higher index <strong class=\"purple\">must</strong> not write to that image subresource as an attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-09375",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> not be a <a href=\"#glossary\">secondary command buffer</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-pCommandBuffers-parameter",
          "text": "<code>pCommandBuffers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>commandBufferCount</code> valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commandBufferCount-arraylength",
          "text": "<code>commandBufferCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdExecuteCommands-commonparent",
          "text": "Both of <code>commandBuffer</code>, and the elements of <code>pCommandBuffers</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceGroupCommandBufferBeginInfo": {
      "core": [
        {
          "vuid": "VUID-VkDeviceGroupCommandBufferBeginInfo-deviceMask-00106",
          "text": "<code>deviceMask</code> <strong class=\"purple\">must</strong> be a valid device mask value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupCommandBufferBeginInfo-deviceMask-00107",
          "text": "<code>deviceMask</code> <strong class=\"purple\">must</strong> not be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupCommandBufferBeginInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetDeviceMask": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetDeviceMask-deviceMask-00108",
          "text": "<code>deviceMask</code> <strong class=\"purple\">must</strong> be a valid device mask value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDeviceMask-deviceMask-00109",
          "text": "<code>deviceMask</code> <strong class=\"purple\">must</strong> not be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDeviceMask-deviceMask-00110",
          "text": "<code>deviceMask</code> <strong class=\"purple\">must</strong> not include any set bits that were not in the <a href=\"#VkDeviceGroupCommandBufferBeginInfo\">VkDeviceGroupCommandBufferBeginInfo</a>::<code>deviceMask</code> value when the command buffer began recording",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDeviceMask-deviceMask-00111",
          "text": "If <code>vkCmdSetDeviceMask</code> is called inside a render pass instance, <code>deviceMask</code> <strong class=\"purple\">must</strong> not include any set bits that were not in the <a href=\"#VkDeviceGroupRenderPassBeginInfo\">VkDeviceGroupRenderPassBeginInfo</a>::<code>deviceMask</code> value when the render pass instance began recording",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDeviceMask-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDeviceMask-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDeviceMask-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, compute, or transfer operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateFence": {
      "core": [
        {
          "vuid": "VUID-vkCreateFence-device-05068",
          "text": "The number of fences currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of fences requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>fenceRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateFence-pNext-05106",
          "text": "If the <code>pNext</code> chain of <a href=\"#VkFenceCreateInfo\">VkFenceCreateInfo</a> includes <a href=\"#VkExportFenceSciSyncInfoNV\">VkExportFenceSciSyncInfoNV</a>, then <a href=\"#VkFenceCreateInfo\">VkFenceCreateInfo</a>::<code>flags</code> <strong class=\"purple\">must</strong> not include <code>VK_FENCE_CREATE_SIGNALED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateFence-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateFence-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkFenceCreateInfo\">VkFenceCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateFence-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateFence-pFence-parameter",
          "text": "<code>pFence</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkFenceCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkFenceCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_FENCE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkExportFenceCreateInfo\">VkExportFenceCreateInfo</a> or <a href=\"#VkExportFenceSciSyncInfoNV\">VkExportFenceSciSyncInfoNV</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkFenceCreateFlagBits\">VkFenceCreateFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkExportFenceCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkExportFenceCreateInfo-handleTypes-01446",
          "text": "The bits in <code>handleTypes</code> <strong class=\"purple\">must</strong> be supported and compatible, as reported by <a href=\"#VkExternalFenceProperties\">VkExternalFenceProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExportFenceCreateInfo-pNext-05107",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkExportFenceSciSyncInfoNV\">VkExportFenceSciSyncInfoNV</a> structure, <a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncFence</code> and <a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncExport</code>, or <a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>::<code>sciSyncFence</code> and <a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>::<code>sciSyncExport</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExportFenceCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExportFenceCreateInfo-handleTypes-parameter",
          "text": "<code>handleTypes</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkExternalFenceHandleTypeFlagBits\">VkExternalFenceHandleTypeFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkGetFenceFdKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetFenceFdKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFenceFdKHR-pGetFdInfo-parameter",
          "text": "<code>pGetFdInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkFenceGetFdInfoKHR\">VkFenceGetFdInfoKHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFenceFdKHR-pFd-parameter",
          "text": "<code>pFd</code> <strong class=\"purple\">must</strong> be a valid pointer to an <code>int</code> value",
          "page": "vkspec"
        }
      ]
    },
    "VkFenceGetFdInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkFenceGetFdInfoKHR-handleType-01453",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> have been included in <a href=\"#VkExportFenceCreateInfo\">VkExportFenceCreateInfo</a>::<code>handleTypes</code> when <code>fence</code>&#8217;s current payload was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceGetFdInfoKHR-handleType-01454",
          "text": "If <code>handleType</code> refers to a handle type with copy payload transference semantics, <code>fence</code> <strong class=\"purple\">must</strong> be signaled, or have an associated <a href=\"#synchronization-fences-signaling\">fence signal operation</a> pending execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceGetFdInfoKHR-fence-01455",
          "text": "<code>fence</code> <strong class=\"purple\">must</strong> not currently have its payload replaced by an imported payload as described below in <a href=\"#synchronization-fences-importing\">Importing Fence Payloads</a> unless that imported payload&#8217;s handle type was included in <a href=\"#VkExternalFenceProperties\">VkExternalFenceProperties</a>::<code>exportFromImportedHandleTypes</code> for <code>handleType</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceGetFdInfoKHR-handleType-01456",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be defined as a POSIX file descriptor handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceGetFdInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceGetFdInfoKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceGetFdInfoKHR-fence-parameter",
          "text": "<code>fence</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceGetFdInfoKHR-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalFenceHandleTypeFlagBits\">VkExternalFenceHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkExportFenceSciSyncInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkExportFenceSciSyncInfoNV-pAttributes-05108",
          "text": "<code>pAttributes</code> <strong class=\"purple\">must</strong> be a reconciled <code>NvSciSyncAttrList</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExportFenceSciSyncInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXPORT_FENCE_SCI_SYNC_INFO_NV</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceSciSyncAttributesNV": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceSciSyncAttributesNV-pSciSyncAttributesInfo-05109",
          "text": "If <code>pSciSyncAttributesInfo-&gt;primitiveType</code> is <code>VK_SCI_SYNC_PRIMITIVE_TYPE_FENCE_NV</code> then <a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncFence</code> or <a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>::<code>sciSyncFence</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSciSyncAttributesNV-pSciSyncAttributesInfo-05110",
          "text": "If <code>pSciSyncAttributesInfo-&gt;primitiveType</code> is <code>VK_SCI_SYNC_PRIMITIVE_TYPE_SEMAPHORE_NV</code> then <a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncSemaphore</code> or <a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>::<code>sciSyncSemaphore2</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSciSyncAttributesNV-pAttributes-05111",
          "text": "<code>pAttributes</code> <strong class=\"purple\">must</strong> be a valid <code>NvSciSyncAttrList</code> and <strong class=\"purple\">must</strong> not be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSciSyncAttributesNV-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSciSyncAttributesNV-pSciSyncAttributesInfo-parameter",
          "text": "<code>pSciSyncAttributesInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSciSyncAttributesInfoNV\">VkSciSyncAttributesInfoNV</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkSciSyncAttributesInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkSciSyncAttributesInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SCI_SYNC_ATTRIBUTES_INFO_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSciSyncAttributesInfoNV-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSciSyncAttributesInfoNV-clientType-parameter",
          "text": "<code>clientType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSciSyncClientTypeNV\">VkSciSyncClientTypeNV</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSciSyncAttributesInfoNV-primitiveType-parameter",
          "text": "<code>primitiveType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSciSyncPrimitiveTypeNV\">VkSciSyncPrimitiveTypeNV</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkGetFenceSciSyncFenceNV": {
      "core": [
        {
          "vuid": "VUID-vkGetFenceSciSyncFenceNV-pGetSciSyncHandleInfo-05112",
          "text": "<code>pGetSciSyncHandleInfo-&gt;handleType</code> <strong class=\"purple\">must</strong> be <code>VK_EXTERNAL_FENCE_HANDLE_TYPE_SCI_SYNC_FENCE_BIT_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFenceSciSyncFenceNV-sciSyncFence-05113",
          "text": "<a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncFence</code> or <a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>::<code>sciSyncFence</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFenceSciSyncFenceNV-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFenceSciSyncFenceNV-pGetSciSyncHandleInfo-parameter",
          "text": "<code>pGetSciSyncHandleInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkFenceGetSciSyncInfoNV\">VkFenceGetSciSyncInfoNV</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFenceSciSyncFenceNV-pHandle-parameter",
          "text": "<code>pHandle</code> <strong class=\"purple\">must</strong> be a pointer value",
          "page": "vkspec"
        }
      ]
    },
    "vkGetFenceSciSyncObjNV": {
      "core": [
        {
          "vuid": "VUID-vkGetFenceSciSyncObjNV-pGetSciSyncHandleInfo-05114",
          "text": "<code>pGetSciSyncHandleInfo-&gt;handleType</code> <strong class=\"purple\">must</strong> be <code>VK_EXTERNAL_FENCE_HANDLE_TYPE_SCI_SYNC_OBJ_BIT_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFenceSciSyncObjNV-sciSyncFence-05115",
          "text": "<a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncFence</code> or <a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>::<code>sciSyncFence</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFenceSciSyncObjNV-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFenceSciSyncObjNV-pGetSciSyncHandleInfo-parameter",
          "text": "<code>pGetSciSyncHandleInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkFenceGetSciSyncInfoNV\">VkFenceGetSciSyncInfoNV</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFenceSciSyncObjNV-pHandle-parameter",
          "text": "<code>pHandle</code> <strong class=\"purple\">must</strong> be a pointer value",
          "page": "vkspec"
        }
      ]
    },
    "VkFenceGetSciSyncInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkFenceGetSciSyncInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_FENCE_GET_SCI_SYNC_INFO_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceGetSciSyncInfoNV-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceGetSciSyncInfoNV-fence-parameter",
          "text": "<code>fence</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFenceGetSciSyncInfoNV-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalFenceHandleTypeFlagBits\">VkExternalFenceHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyFence": {
      "core": [
        {
          "vuid": "VUID-vkDestroyFence-fence-01120",
          "text": "All <a href=\"#devsandqueues-submission\">queue submission</a> commands that refer to <code>fence</code> <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyFence-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyFence-fence-parameter",
          "text": "If <code>fence</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>fence</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyFence-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyFence-fence-parent",
          "text": "If <code>fence</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetFenceStatus": {
      "core": [
        {
          "vuid": "VUID-vkGetFenceStatus-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFenceStatus-fence-parameter",
          "text": "<code>fence</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFenceStatus-fence-parent",
          "text": "<code>fence</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkResetFences": {
      "core": [
        {
          "vuid": "VUID-vkResetFences-pFences-01123",
          "text": "Each element of <code>pFences</code> <strong class=\"purple\">must</strong> not be currently associated with any queue command that has not yet completed execution on that queue",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetFences-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetFences-pFences-parameter",
          "text": "<code>pFences</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>fenceCount</code> valid <a href=\"#VkFence\">VkFence</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetFences-fenceCount-arraylength",
          "text": "<code>fenceCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetFences-pFences-parent",
          "text": "Each element of <code>pFences</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkWaitForFences": {
      "core": [
        {
          "vuid": "VUID-vkWaitForFences-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkWaitForFences-pFences-parameter",
          "text": "<code>pFences</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>fenceCount</code> valid <a href=\"#VkFence\">VkFence</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkWaitForFences-fenceCount-arraylength",
          "text": "<code>fenceCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkWaitForFences-pFences-parent",
          "text": "Each element of <code>pFences</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkRegisterDeviceEventEXT": {
      "core": [
        {
          "vuid": "VUID-vkRegisterDeviceEventEXT-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkRegisterDeviceEventEXT-pDeviceEventInfo-parameter",
          "text": "<code>pDeviceEventInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDeviceEventInfoEXT\">VkDeviceEventInfoEXT</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkRegisterDeviceEventEXT-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkRegisterDeviceEventEXT-pFence-parameter",
          "text": "<code>pFence</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceEventInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkDeviceEventInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceEventInfoEXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceEventInfoEXT-deviceEvent-parameter",
          "text": "<code>deviceEvent</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceEventTypeEXT\">VkDeviceEventTypeEXT</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkRegisterDisplayEventEXT": {
      "core": [
        {
          "vuid": "VUID-vkRegisterDisplayEventEXT-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkRegisterDisplayEventEXT-display-parameter",
          "text": "<code>display</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayKHR\">VkDisplayKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkRegisterDisplayEventEXT-pDisplayEventInfo-parameter",
          "text": "<code>pDisplayEventInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDisplayEventInfoEXT\">VkDisplayEventInfoEXT</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkRegisterDisplayEventEXT-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkRegisterDisplayEventEXT-pFence-parameter",
          "text": "<code>pFence</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkRegisterDisplayEventEXT-commonparent",
          "text": "Both of <code>device</code>, and <code>display</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkDisplayEventInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkDisplayEventInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayEventInfoEXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayEventInfoEXT-displayEvent-parameter",
          "text": "<code>displayEvent</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayEventTypeEXT\">VkDisplayEventTypeEXT</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkImportFenceFdKHR": {
      "core": [
        {
          "vuid": "VUID-vkImportFenceFdKHR-fence-01463",
          "text": "<code>fence</code> <strong class=\"purple\">must</strong> not be associated with any queue command that has not yet completed execution on that queue",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportFenceFdKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportFenceFdKHR-pImportFenceFdInfo-parameter",
          "text": "<code>pImportFenceFdInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkImportFenceFdInfoKHR\">VkImportFenceFdInfoKHR</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkImportFenceFdInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkImportFenceFdInfoKHR-handleType-01464",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a value included in the <a href=\"#synchronization-fence-handletypes-fd\">Handle Types Supported by <code>VkImportFenceFdInfoKHR</code></a> table",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportFenceFdInfoKHR-fd-01541",
          "text": "<code>fd</code> <strong class=\"purple\">must</strong> obey any requirements listed for <code>handleType</code> in <a href=\"#external-fence-handle-types-compatibility\">external fence handle types compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportFenceFdInfoKHR-handleType-07306",
          "text": "If <code>handleType</code> refers to a handle type with copy payload transference semantics, <code>flags</code> <strong class=\"purple\">must</strong> contain <code>VK_FENCE_IMPORT_TEMPORARY_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportFenceFdInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportFenceFdInfoKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportFenceFdInfoKHR-fence-parameter",
          "text": "<code>fence</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportFenceFdInfoKHR-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkFenceImportFlagBits\">VkFenceImportFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportFenceFdInfoKHR-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalFenceHandleTypeFlagBits\">VkExternalFenceHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkImportFenceSciSyncFenceNV": {
      "core": [
        {
          "vuid": "VUID-vkImportFenceSciSyncFenceNV-sciSyncImport-05140",
          "text": "<a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncImport</code> and <a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncFence</code>, or <a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>::<code>sciSyncImport</code> and <a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>::<code>sciSyncFence</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportFenceSciSyncFenceNV-fence-05141",
          "text": "<code>fence</code> <strong class=\"purple\">must</strong> not be associated with any queue command that has not yet completed execution on that queue",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportFenceSciSyncFenceNV-pImportFenceSciSyncInfo-05142",
          "text": "<code>pImportFenceSciSyncInfo-&gt;handleType</code> <strong class=\"purple\">must</strong> be <code>VK_EXTERNAL_FENCE_HANDLE_TYPE_SCI_SYNC_FENCE_BIT_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportFenceSciSyncFenceNV-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportFenceSciSyncFenceNV-pImportFenceSciSyncInfo-parameter",
          "text": "<code>pImportFenceSciSyncInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkImportFenceSciSyncInfoNV\">VkImportFenceSciSyncInfoNV</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkImportFenceSciSyncObjNV": {
      "core": [
        {
          "vuid": "VUID-vkImportFenceSciSyncObjNV-sciSyncImport-05143",
          "text": "<a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncImport</code> and <a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncFence</code>, or <a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>::<code>sciSyncImport</code> and <a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>::<code>sciSyncFence</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportFenceSciSyncObjNV-fence-05144",
          "text": "<code>fence</code> <strong class=\"purple\">must</strong> not be associated with any queue command that has not yet completed execution on that queue",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportFenceSciSyncObjNV-pImportFenceSciSyncInfo-05145",
          "text": "<code>pImportFenceSciSyncInfo-&gt;handleType</code> <strong class=\"purple\">must</strong> be <code>VK_EXTERNAL_FENCE_HANDLE_TYPE_SCI_SYNC_OBJ_BIT_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportFenceSciSyncObjNV-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportFenceSciSyncObjNV-pImportFenceSciSyncInfo-parameter",
          "text": "<code>pImportFenceSciSyncInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkImportFenceSciSyncInfoNV\">VkImportFenceSciSyncInfoNV</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkImportFenceSciSyncInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkImportFenceSciSyncInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMPORT_FENCE_SCI_SYNC_INFO_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportFenceSciSyncInfoNV-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportFenceSciSyncInfoNV-fence-parameter",
          "text": "<code>fence</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportFenceSciSyncInfoNV-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalFenceHandleTypeFlagBits\">VkExternalFenceHandleTypeFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportFenceSciSyncInfoNV-handle-parameter",
          "text": "<code>handle</code> <strong class=\"purple\">must</strong> be a pointer value",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateSemaphore": {
      "core": [
        {
          "vuid": "VUID-vkCreateSemaphore-device-05068",
          "text": "The number of semaphores currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of semaphores requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>semaphoreRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSemaphore-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSemaphore-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSemaphoreCreateInfo\">VkSemaphoreCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSemaphore-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSemaphore-pSemaphore-parameter",
          "text": "<code>pSemaphore</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkSemaphore\">VkSemaphore</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkSemaphoreCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkSemaphoreCreateInfo-pNext-05118",
          "text": "If the <code>pNext</code> chain includes <a href=\"#VkExportSemaphoreSciSyncInfoNV\">VkExportSemaphoreSciSyncInfoNV</a>, it <strong class=\"purple\">must</strong> also include <a href=\"#VkSemaphoreTypeCreateInfo\">VkSemaphoreTypeCreateInfo</a> with a <a href=\"#VkSemaphoreTypeCreateInfo\">VkSemaphoreTypeCreateInfo</a>::<code>semaphoreType</code> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreCreateInfo-pNext-05146",
          "text": "If the <code>pNext</code> chain includes <a href=\"#VkSemaphoreSciSyncCreateInfoNV\">VkSemaphoreSciSyncCreateInfoNV</a>, it <strong class=\"purple\">must</strong> also include <a href=\"#VkSemaphoreTypeCreateInfo\">VkSemaphoreTypeCreateInfo</a> with a <a href=\"#VkSemaphoreTypeCreateInfo\">VkSemaphoreTypeCreateInfo</a>::<code>semaphoreType</code> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkExportSemaphoreCreateInfo\">VkExportSemaphoreCreateInfo</a>, <a href=\"#VkExportSemaphoreSciSyncInfoNV\">VkExportSemaphoreSciSyncInfoNV</a>, <a href=\"#VkSemaphoreSciSyncCreateInfoNV\">VkSemaphoreSciSyncCreateInfoNV</a>, or <a href=\"#VkSemaphoreTypeCreateInfo\">VkSemaphoreTypeCreateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkSemaphoreTypeCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkSemaphoreTypeCreateInfo-timelineSemaphore-03252",
          "text": "If the <a href=\"#features-timelineSemaphore\"><code>timelineSemaphore</code></a> feature is not enabled, <code>semaphoreType</code> <strong class=\"purple\">must</strong> not equal <code>VK_SEMAPHORE_TYPE_TIMELINE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreTypeCreateInfo-semaphoreType-03279",
          "text": "If <code>semaphoreType</code> is <code>VK_SEMAPHORE_TYPE_BINARY</code>, <code>initialValue</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreTypeCreateInfo-pNext-05119",
          "text": "If the <code>pNext</code> chain includes <a href=\"#VkExportSemaphoreSciSyncInfoNV\">VkExportSemaphoreSciSyncInfoNV</a>, <code>initialValue</code> <strong class=\"purple\">must</strong> be zero.",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreTypeCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreTypeCreateInfo-semaphoreType-parameter",
          "text": "<code>semaphoreType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkExportSemaphoreCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkExportSemaphoreCreateInfo-handleTypes-01124",
          "text": "The bits in <code>handleTypes</code> <strong class=\"purple\">must</strong> be supported and compatible, as reported by <a href=\"#VkExternalSemaphoreProperties\">VkExternalSemaphoreProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExportSemaphoreCreateInfo-pNext-05120",
          "text": "If the <code>pNext</code> chain includes a <code>VkExportSemaphoreSciSyncInfoNV</code> structure, <a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncSemapore</code> and <a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncExport</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExportSemaphoreCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExportSemaphoreCreateInfo-handleTypes-parameter",
          "text": "<code>handleTypes</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkExternalSemaphoreHandleTypeFlagBits\">VkExternalSemaphoreHandleTypeFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkGetSemaphoreFdKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetSemaphoreFdKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSemaphoreFdKHR-pGetFdInfo-parameter",
          "text": "<code>pGetFdInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSemaphoreGetFdInfoKHR\">VkSemaphoreGetFdInfoKHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSemaphoreFdKHR-pFd-parameter",
          "text": "<code>pFd</code> <strong class=\"purple\">must</strong> be a valid pointer to an <code>int</code> value",
          "page": "vkspec"
        }
      ]
    },
    "VkSemaphoreGetFdInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkSemaphoreGetFdInfoKHR-handleType-01132",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> have been included in <a href=\"#VkExportSemaphoreCreateInfo\">VkExportSemaphoreCreateInfo</a>::<code>handleTypes</code> when <code>semaphore</code>&#8217;s current payload was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetFdInfoKHR-semaphore-01133",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> not currently have its payload replaced by an imported payload as described below in <a href=\"#synchronization-semaphores-importing\">Importing Semaphore Payloads</a> unless that imported payload&#8217;s handle type was included in <a href=\"#VkExternalSemaphoreProperties\">VkExternalSemaphoreProperties</a>::<code>exportFromImportedHandleTypes</code> for <code>handleType</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetFdInfoKHR-handleType-01134",
          "text": "If <code>handleType</code> refers to a handle type with copy payload transference semantics, as defined below in <a href=\"#synchronization-semaphores-importing\">Importing Semaphore Payloads</a>, there <strong class=\"purple\">must</strong> be no queue waiting on <code>semaphore</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetFdInfoKHR-handleType-01135",
          "text": "If <code>handleType</code> refers to a handle type with copy payload transference semantics, <code>semaphore</code> <strong class=\"purple\">must</strong> be signaled, or have an associated <a href=\"#synchronization-semaphores-signaling\">semaphore signal operation</a> pending execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetFdInfoKHR-handleType-01136",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be defined as a POSIX file descriptor handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetFdInfoKHR-handleType-03253",
          "text": "If <code>handleType</code> refers to a handle type with copy payload transference semantics, <code>semaphore</code> <strong class=\"purple\">must</strong> have been created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_BINARY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetFdInfoKHR-handleType-03254",
          "text": "If <code>handleType</code> refers to a handle type with copy payload transference semantics, <code>semaphore</code> <strong class=\"purple\">must</strong> have an associated semaphore signal operation that has been submitted for execution and any semaphore signal operations on which it depends <strong class=\"purple\">must</strong> have also been submitted for execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetFdInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetFdInfoKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetFdInfoKHR-semaphore-parameter",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSemaphore\">VkSemaphore</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetFdInfoKHR-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalSemaphoreHandleTypeFlagBits\">VkExternalSemaphoreHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkExportSemaphoreSciSyncInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkExportSemaphoreSciSyncInfoNV-pAttributes-05121",
          "text": "<code>pAttributes</code> <strong class=\"purple\">must</strong> be a reconciled <code>NvSciSyncAttrList</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExportSemaphoreSciSyncInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_SCI_SYNC_INFO_NV</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetSemaphoreSciSyncObjNV": {
      "core": [
        {
          "vuid": "VUID-vkGetSemaphoreSciSyncObjNV-sciSyncSemaphore-05147",
          "text": "<a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncSemaphore</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSemaphoreSciSyncObjNV-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSemaphoreSciSyncObjNV-pGetSciSyncInfo-parameter",
          "text": "<code>pGetSciSyncInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSemaphoreGetSciSyncInfoNV\">VkSemaphoreGetSciSyncInfoNV</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSemaphoreSciSyncObjNV-pHandle-parameter",
          "text": "<code>pHandle</code> <strong class=\"purple\">must</strong> be a pointer value",
          "page": "vkspec"
        }
      ]
    },
    "VkSemaphoreGetSciSyncInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkSemaphoreGetSciSyncInfoNV-handleType-05122",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be <code>VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SCI_SYNC_OBJ_BIT_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetSciSyncInfoNV-semaphore-05123",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> have been created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetSciSyncInfoNV-semaphore-05129",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> have been created with <a href=\"#VkExportSemaphoreSciSyncInfoNV\">VkExportSemaphoreSciSyncInfoNV</a> included <code>pNext</code> chain of <a href=\"#VkSemaphoreCreateInfo\">VkSemaphoreCreateInfo</a>, or previously imported by <a href=\"#vkImportSemaphoreSciSyncObjNV\">vkImportSemaphoreSciSyncObjNV</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetSciSyncInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SEMAPHORE_GET_SCI_SYNC_INFO_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetSciSyncInfoNV-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetSciSyncInfoNV-semaphore-parameter",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSemaphore\">VkSemaphore</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreGetSciSyncInfoNV-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalSemaphoreHandleTypeFlagBits\">VkExternalSemaphoreHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkSemaphoreSciSyncCreateInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkSemaphoreSciSyncCreateInfoNV-sciSyncSemaphore2-05148",
          "text": "The <a href=\"#features-sciSyncSemaphore2\"><a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>::<code>sciSyncSemaphore2</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSciSyncCreateInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SEMAPHORE_SCI_SYNC_CREATE_INFO_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSciSyncCreateInfoNV-semaphorePool-parameter",
          "text": "<code>semaphorePool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSemaphoreSciSyncPoolNV\">VkSemaphoreSciSyncPoolNV</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSciSyncCreateInfoNV-pFence-parameter",
          "text": "<code>pFence</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <code>NvSciSyncFence</code> value",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroySemaphore": {
      "core": [
        {
          "vuid": "VUID-vkDestroySemaphore-semaphore-05149",
          "text": "If <code>semaphore</code> was not created with <a href=\"#VkSemaphoreSciSyncCreateInfoNV\">VkSemaphoreSciSyncCreateInfoNV</a> present in the <a href=\"#VkSemaphoreCreateInfo\">VkSemaphoreCreateInfo</a>::<code>pNext</code> chain when it was created, all submitted batches that refer to <code>semaphore</code> <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySemaphore-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySemaphore-semaphore-parameter",
          "text": "If <code>semaphore</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>semaphore</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSemaphore\">VkSemaphore</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySemaphore-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySemaphore-semaphore-parent",
          "text": "If <code>semaphore</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateSemaphoreSciSyncPoolNV": {
      "core": [
        {
          "vuid": "VUID-vkCreateSemaphoreSciSyncPoolNV-device-05150",
          "text": "The number of semaphore pools currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of semaphore pools requested via <a href=\"#VkDeviceSemaphoreSciSyncPoolReservationCreateInfoNV\">VkDeviceSemaphoreSciSyncPoolReservationCreateInfoNV</a>::<code>semaphoreSciSyncPoolRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSemaphoreSciSyncPoolNV-sciSyncSemaphore2-05151",
          "text": "The <a href=\"#features-sciSyncSemaphore2\"><a href=\"#VkPhysicalDeviceExternalSciSync2FeaturesNV\">VkPhysicalDeviceExternalSciSync2FeaturesNV</a>::<code>sciSyncSemaphore2</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSemaphoreSciSyncPoolNV-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSemaphoreSciSyncPoolNV-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSemaphoreSciSyncPoolCreateInfoNV\">VkSemaphoreSciSyncPoolCreateInfoNV</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSemaphoreSciSyncPoolNV-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSemaphoreSciSyncPoolNV-pSemaphorePool-parameter",
          "text": "<code>pSemaphorePool</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkSemaphoreSciSyncPoolNV\">VkSemaphoreSciSyncPoolNV</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkSemaphoreSciSyncPoolCreateInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkSemaphoreSciSyncPoolCreateInfoNV-handle-05152",
          "text": "<code>handle</code> <strong class=\"purple\">must</strong> be a valid <code>NvSciSyncObj</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSciSyncPoolCreateInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SEMAPHORE_SCI_SYNC_POOL_CREATE_INFO_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSciSyncPoolCreateInfoNV-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetSemaphoreCounterValue": {
      "core": [
        {
          "vuid": "VUID-vkGetSemaphoreCounterValue-semaphore-03255",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> have been created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSemaphoreCounterValue-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSemaphoreCounterValue-semaphore-parameter",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSemaphore\">VkSemaphore</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSemaphoreCounterValue-pValue-parameter",
          "text": "<code>pValue</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint64_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSemaphoreCounterValue-semaphore-parent",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkWaitSemaphores": {
      "core": [
        {
          "vuid": "VUID-vkWaitSemaphores-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkWaitSemaphores-pWaitInfo-parameter",
          "text": "<code>pWaitInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSemaphoreWaitInfo\">VkSemaphoreWaitInfo</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkSemaphoreWaitInfo": {
      "core": [
        {
          "vuid": "VUID-VkSemaphoreWaitInfo-pSemaphores-03256",
          "text": "All of the elements of <code>pSemaphores</code> <strong class=\"purple\">must</strong> reference a semaphore that was created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreWaitInfo-pSemaphores-05124",
          "text": "If any of the semaphores in <code>pSemaphores</code> have <code>NvSciSyncObj</code> as payload, application <strong class=\"purple\">must</strong> calculate the corresponding timeline semaphore values in <code>pValues</code> by calling <a href=\"#NvSciSync2-extension-page\">NvSciSync APIs</a>.",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreWaitInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreWaitInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreWaitInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkSemaphoreWaitFlagBits\">VkSemaphoreWaitFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreWaitInfo-pSemaphores-parameter",
          "text": "<code>pSemaphores</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>semaphoreCount</code> valid <a href=\"#VkSemaphore\">VkSemaphore</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreWaitInfo-pValues-parameter",
          "text": "<code>pValues</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>semaphoreCount</code> <code>uint64_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreWaitInfo-semaphoreCount-arraylength",
          "text": "<code>semaphoreCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkSignalSemaphore": {
      "core": [
        {
          "vuid": "VUID-vkSignalSemaphore-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSignalSemaphore-pSignalInfo-parameter",
          "text": "<code>pSignalInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSemaphoreSignalInfo\">VkSemaphoreSignalInfo</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkSemaphoreSignalInfo": {
      "core": [
        {
          "vuid": "VUID-VkSemaphoreSignalInfo-semaphore-03257",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> have been created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSignalInfo-value-03258",
          "text": "<code>value</code> <strong class=\"purple\">must</strong> have a value greater than the current value of the semaphore",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSignalInfo-value-03259",
          "text": "<code>value</code> <strong class=\"purple\">must</strong> be less than the value of any pending semaphore signal operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSignalInfo-value-03260",
          "text": "<code>value</code> <strong class=\"purple\">must</strong> have a value which does not differ from the current value of the semaphore or the value of any outstanding semaphore wait or signal operation on <code>semaphore</code> by more than <a href=\"#limits-maxTimelineSemaphoreValueDifference\"><code>maxTimelineSemaphoreValueDifference</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSignalInfo-semaphores-05125",
          "text": "If <code>semaphores</code> has <code>NvSciSyncObj</code> as payload, application <strong class=\"purple\">must</strong> calculate the corresponding timeline semaphore value in <code>value</code> by calling <a href=\"#NvSciSync2-extension-page\">NvSciSync APIs</a>.",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSignalInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSignalInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSemaphoreSignalInfo-semaphore-parameter",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSemaphore\">VkSemaphore</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkImportSemaphoreFdKHR": {
      "core": [
        {
          "vuid": "VUID-vkImportSemaphoreFdKHR-semaphore-01142",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> not be associated with any queue command that has not yet completed execution on that queue",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportSemaphoreFdKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportSemaphoreFdKHR-pImportSemaphoreFdInfo-parameter",
          "text": "<code>pImportSemaphoreFdInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkImportSemaphoreFdInfoKHR\">VkImportSemaphoreFdInfoKHR</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkImportSemaphoreFdInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkImportSemaphoreFdInfoKHR-handleType-01143",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a value included in the <a href=\"#synchronization-semaphore-handletypes-fd\">Handle Types Supported by <code>VkImportSemaphoreFdInfoKHR</code></a> table",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreFdInfoKHR-fd-01544",
          "text": "<code>fd</code> <strong class=\"purple\">must</strong> obey any requirements listed for <code>handleType</code> in <a href=\"#external-semaphore-handle-types-compatibility\">external semaphore handle types compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreFdInfoKHR-handleType-03263",
          "text": "If <code>handleType</code> is <code>VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT</code>, the <a href=\"#VkSemaphoreCreateInfo\">VkSemaphoreCreateInfo</a>::<code>flags</code> field <strong class=\"purple\">must</strong> match that of the semaphore from which <code>fd</code> was exported",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreFdInfoKHR-handleType-07307",
          "text": "If <code>handleType</code> refers to a handle type with copy payload transference semantics, <code>flags</code> <strong class=\"purple\">must</strong> contain <code>VK_SEMAPHORE_IMPORT_TEMPORARY_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreFdInfoKHR-handleType-03264",
          "text": "If <code>handleType</code> is <code>VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT</code>, the <a href=\"#VkSemaphoreTypeCreateInfo\">VkSemaphoreTypeCreateInfo</a>::<code>semaphoreType</code> field <strong class=\"purple\">must</strong> match that of the semaphore from which <code>fd</code> was exported",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreFdInfoKHR-flags-03323",
          "text": "If <code>flags</code> contains <code>VK_SEMAPHORE_IMPORT_TEMPORARY_BIT</code>, the <a href=\"#VkSemaphoreTypeCreateInfo\">VkSemaphoreTypeCreateInfo</a>::<code>semaphoreType</code> field of the semaphore from which <code>fd</code> was exported <strong class=\"purple\">must</strong> not be <code>VK_SEMAPHORE_TYPE_TIMELINE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreFdInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreFdInfoKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreFdInfoKHR-semaphore-parameter",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSemaphore\">VkSemaphore</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreFdInfoKHR-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkSemaphoreImportFlagBits\">VkSemaphoreImportFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreFdInfoKHR-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalSemaphoreHandleTypeFlagBits\">VkExternalSemaphoreHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkImportSemaphoreSciSyncObjNV": {
      "core": [
        {
          "vuid": "VUID-vkImportSemaphoreSciSyncObjNV-sciSyncImport-05155",
          "text": "<a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncImport</code> and <a href=\"#VkPhysicalDeviceExternalSciSyncFeaturesNV\">VkPhysicalDeviceExternalSciSyncFeaturesNV</a>::<code>sciSyncSemaphore</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportSemaphoreSciSyncObjNV-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkImportSemaphoreSciSyncObjNV-pImportSemaphoreSciSyncInfo-parameter",
          "text": "<code>pImportSemaphoreSciSyncInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkImportSemaphoreSciSyncInfoNV\">VkImportSemaphoreSciSyncInfoNV</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkImportSemaphoreSciSyncInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkImportSemaphoreSciSyncInfoNV-handleType-05126",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a value included in the <a href=\"#synchronization-semaphore-handletypes-sci-sync\">Handle Types Supported by <code>VkImportSemaphoreSciSyncInfoNV</code></a> table",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreSciSyncInfoNV-semaphore-05127",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> have been created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_TIMELINE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreSciSyncInfoNV-semaphore-05128",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> not be associated with any queue command that has not yet completed execution on that queue",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreSciSyncInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_SCI_SYNC_INFO_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreSciSyncInfoNV-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreSciSyncInfoNV-semaphore-parameter",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSemaphore\">VkSemaphore</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreSciSyncInfoNV-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalSemaphoreHandleTypeFlagBits\">VkExternalSemaphoreHandleTypeFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportSemaphoreSciSyncInfoNV-handle-parameter",
          "text": "<code>handle</code> <strong class=\"purple\">must</strong> be a pointer value",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateEvent": {
      "core": [
        {
          "vuid": "VUID-vkCreateEvent-device-05068",
          "text": "The number of events currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of events requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>eventRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateEvent-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateEvent-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkEventCreateInfo\">VkEventCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateEvent-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateEvent-pEvent-parameter",
          "text": "<code>pEvent</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkEvent\">VkEvent</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkEventCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkEventCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EVENT_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkEventCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkEventCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkEventCreateFlagBits\">VkEventCreateFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyEvent": {
      "core": [
        {
          "vuid": "VUID-vkDestroyEvent-event-01145",
          "text": "All submitted commands that refer to <code>event</code> <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyEvent-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyEvent-event-parameter",
          "text": "If <code>event</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>event</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkEvent\">VkEvent</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyEvent-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyEvent-event-parent",
          "text": "If <code>event</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetEventStatus": {
      "core": [
        {
          "vuid": "VUID-vkGetEventStatus-event-03940",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> not have been created with <code>VK_EVENT_CREATE_DEVICE_ONLY_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetEventStatus-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetEventStatus-event-parameter",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkEvent\">VkEvent</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetEventStatus-event-parent",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkSetEvent": {
      "core": [
        {
          "vuid": "VUID-vkSetEvent-event-03941",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> not have been created with <code>VK_EVENT_CREATE_DEVICE_ONLY_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetEvent-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetEvent-event-parameter",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkEvent\">VkEvent</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetEvent-event-parent",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkResetEvent": {
      "core": [
        {
          "vuid": "VUID-vkResetEvent-event-03821",
          "text": "There <strong class=\"purple\">must</strong> be an execution dependency between <code>vkResetEvent</code> and the execution of any <a href=\"#vkCmdWaitEvents\">vkCmdWaitEvents</a> that includes <code>event</code> in its <code>pEvents</code> parameter",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetEvent-event-03822",
          "text": "There <strong class=\"purple\">must</strong> be an execution dependency between <code>vkResetEvent</code> and the execution of any <a href=\"#vkCmdWaitEvents2KHR\">vkCmdWaitEvents2KHR</a> that includes <code>event</code> in its <code>pEvents</code> parameter",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetEvent-event-03823",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> not have been created with <code>VK_EVENT_CREATE_DEVICE_ONLY_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetEvent-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetEvent-event-parameter",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkEvent\">VkEvent</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetEvent-event-parent",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetEvent2": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetEvent2-synchronization2-03824",
          "text": "The <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-dependencyFlags-03825",
          "text": "The <code>dependencyFlags</code> member of <code>pDependencyInfo</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-srcStageMask-09391",
          "text": "The <code>srcStageMask</code> member of any element of the <code>pMemoryBarriers</code>, <code>pBufferMemoryBarriers</code>, or <code>pImageMemoryBarriers</code> members of <code>pDependencyInfo</code> <strong class=\"purple\">must</strong> not include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-dstStageMask-09392",
          "text": "The <code>dstStageMask</code> member of any element of the <code>pMemoryBarriers</code>, <code>pBufferMemoryBarriers</code>, or <code>pImageMemoryBarriers</code> members of <code>pDependencyInfo</code> <strong class=\"purple\">must</strong> not include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-commandBuffer-03826",
          "text": "The current device mask of <code>commandBuffer</code> <strong class=\"purple\">must</strong> include exactly one physical device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-srcStageMask-03827",
          "text": "The <code>srcStageMask</code> member of any element of the <code>pMemoryBarriers</code>, <code>pBufferMemoryBarriers</code>, or <code>pImageMemoryBarriers</code> members of <code>pDependencyInfo</code> <strong class=\"purple\">must</strong> only include pipeline stages valid for the queue family that was used to create the command pool that <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-dstStageMask-03828",
          "text": "The <code>dstStageMask</code> member of any element of the <code>pMemoryBarriers</code>, <code>pBufferMemoryBarriers</code>, or <code>pImageMemoryBarriers</code> members of <code>pDependencyInfo</code> <strong class=\"purple\">must</strong> only include pipeline stages valid for the queue family that was used to create the command pool that <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-event-parameter",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkEvent\">VkEvent</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-pDependencyInfo-parameter",
          "text": "<code>pDependencyInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDependencyInfo\">VkDependencyInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent2-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>event</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkDependencyInfo": {
      "core": [
        {
          "vuid": "VUID-VkDependencyInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEPENDENCY_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDependencyInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDependencyInfo-dependencyFlags-parameter",
          "text": "<code>dependencyFlags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkDependencyFlagBits\">VkDependencyFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDependencyInfo-pMemoryBarriers-parameter",
          "text": "If <code>memoryBarrierCount</code> is not <code>0</code>, <code>pMemoryBarriers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>memoryBarrierCount</code> valid <a href=\"#VkMemoryBarrier2\">VkMemoryBarrier2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDependencyInfo-pBufferMemoryBarriers-parameter",
          "text": "If <code>bufferMemoryBarrierCount</code> is not <code>0</code>, <code>pBufferMemoryBarriers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bufferMemoryBarrierCount</code> valid <a href=\"#VkBufferMemoryBarrier2\">VkBufferMemoryBarrier2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDependencyInfo-pImageMemoryBarriers-parameter",
          "text": "If <code>imageMemoryBarrierCount</code> is not <code>0</code>, <code>pImageMemoryBarriers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>imageMemoryBarrierCount</code> valid <a href=\"#VkImageMemoryBarrier2\">VkImageMemoryBarrier2</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetEvent": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetEvent-stageMask-04090",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-stageMask-04091",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-stageMask-07319",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-stageMask-03937",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-stageMask-06457",
          "text": "Any pipeline stage included in <code>stageMask</code> <strong class=\"purple\">must</strong> be supported by the capabilities of the queue family specified by the <code>queueFamilyIndex</code> member of the <a href=\"#VkCommandPoolCreateInfo\">VkCommandPoolCreateInfo</a> structure that was used to create the <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from, as specified in the <a href=\"#synchronization-pipeline-stages-supported\">table of supported pipeline stages</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-stageMask-01149",
          "text": "<code>stageMask</code> <strong class=\"purple\">must</strong> not include <code>VK_PIPELINE_STAGE_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-commandBuffer-01152",
          "text": "The current device mask of <code>commandBuffer</code> <strong class=\"purple\">must</strong> include exactly one physical device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-event-parameter",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkEvent\">VkEvent</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-stageMask-parameter",
          "text": "<code>stageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits\">VkPipelineStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetEvent-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>event</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdResetEvent2": {
      "core": [
        {
          "vuid": "VUID-vkCmdResetEvent2-stageMask-03929",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-stageMask-03930",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-stageMask-07317",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-synchronization2-03829",
          "text": "The <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-stageMask-03830",
          "text": "<code>stageMask</code> <strong class=\"purple\">must</strong> not include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-event-03831",
          "text": "There <strong class=\"purple\">must</strong> be an execution dependency between <code>vkCmdResetEvent2KHR</code> and the execution of any <a href=\"#vkCmdWaitEvents\">vkCmdWaitEvents</a> that includes <code>event</code> in its <code>pEvents</code> parameter",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-event-03832",
          "text": "There <strong class=\"purple\">must</strong> be an execution dependency between <code>vkCmdResetEvent2KHR</code> and the execution of any <a href=\"#vkCmdWaitEvents2KHR\">vkCmdWaitEvents2KHR</a> that includes <code>event</code> in its <code>pEvents</code> parameter",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-commandBuffer-03833",
          "text": "<code>commandBuffer</code>&#8217;s current device mask <strong class=\"purple\">must</strong> include exactly one physical device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-event-parameter",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkEvent\">VkEvent</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-stageMask-parameter",
          "text": "<code>stageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits2\">VkPipelineStageFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent2-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>event</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdResetEvent": {
      "core": [
        {
          "vuid": "VUID-vkCmdResetEvent-stageMask-04090",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-stageMask-04091",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-stageMask-07319",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-stageMask-03937",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>stageMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-stageMask-06458",
          "text": "Any pipeline stage included in <code>stageMask</code> <strong class=\"purple\">must</strong> be supported by the capabilities of the queue family specified by the <code>queueFamilyIndex</code> member of the <a href=\"#VkCommandPoolCreateInfo\">VkCommandPoolCreateInfo</a> structure that was used to create the <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from, as specified in the <a href=\"#synchronization-pipeline-stages-supported\">table of supported pipeline stages</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-stageMask-01153",
          "text": "<code>stageMask</code> <strong class=\"purple\">must</strong> not include <code>VK_PIPELINE_STAGE_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-event-03834",
          "text": "There <strong class=\"purple\">must</strong> be an execution dependency between <code>vkCmdResetEvent</code> and the execution of any <a href=\"#vkCmdWaitEvents\">vkCmdWaitEvents</a> that includes <code>event</code> in its <code>pEvents</code> parameter",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-event-03835",
          "text": "There <strong class=\"purple\">must</strong> be an execution dependency between <code>vkCmdResetEvent</code> and the execution of any <a href=\"#vkCmdWaitEvents2KHR\">vkCmdWaitEvents2KHR</a> that includes <code>event</code> in its <code>pEvents</code> parameter",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-commandBuffer-01157",
          "text": "<code>commandBuffer</code>&#8217;s current device mask <strong class=\"purple\">must</strong> include exactly one physical device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-event-parameter",
          "text": "<code>event</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkEvent\">VkEvent</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-stageMask-parameter",
          "text": "<code>stageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits\">VkPipelineStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetEvent-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>event</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdWaitEvents2": {
      "core": [
        {
          "vuid": "VUID-vkCmdWaitEvents2-synchronization2-03836",
          "text": "The <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-pEvents-03837",
          "text": "Members of <code>pEvents</code> <strong class=\"purple\">must</strong> not have been signaled by <a href=\"#vkCmdSetEvent\">vkCmdSetEvent</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-pEvents-03838",
          "text": "For any element <span class=\"eq\">i</span> of <code>pEvents</code>, if that event is signaled by <a href=\"#vkCmdSetEvent2KHR\">vkCmdSetEvent2KHR</a>, that command&#8217;s <code>dependencyInfo</code> parameter <strong class=\"purple\">must</strong> be exactly equal to the <span class=\"eq\">i</span>th element of <code>pDependencyInfos</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-pEvents-03839",
          "text": "For any element <span class=\"eq\">i</span> of <code>pEvents</code>, if that event is signaled by <a href=\"#vkSetEvent\">vkSetEvent</a>, barriers in the <span class=\"eq\">i</span>th element of <code>pDependencyInfos</code> <strong class=\"purple\">must</strong> include only host operations in their first <a href=\"#synchronization-dependencies-scopes\">synchronization scope</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-pEvents-03840",
          "text": "For any element <span class=\"eq\">i</span> of <code>pEvents</code>, if barriers in the <span class=\"eq\">i</span>th element of <code>pDependencyInfos</code> include only host operations, the <span class=\"eq\">i</span>th element of <code>pEvents</code> <strong class=\"purple\">must</strong> be signaled before <a href=\"#vkCmdWaitEvents2KHR\">vkCmdWaitEvents2KHR</a> is executed",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-pEvents-03841",
          "text": "For any element <span class=\"eq\">i</span> of <code>pEvents</code>, if barriers in the <span class=\"eq\">i</span>th element of <code>pDependencyInfos</code> do not include host operations, the <span class=\"eq\">i</span>th element of <code>pEvents</code> <strong class=\"purple\">must</strong> be signaled by a corresponding <a href=\"#vkCmdSetEvent2KHR\">vkCmdSetEvent2KHR</a> that occurred earlier in <a href=\"#synchronization-submission-order\">submission order</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-srcStageMask-03842",
          "text": "The <code>srcStageMask</code> member of any element of the <code>pMemoryBarriers</code>, <code>pBufferMemoryBarriers</code>, or <code>pImageMemoryBarriers</code> members of <code>pDependencyInfos</code> <strong class=\"purple\">must</strong> either include only pipeline stages valid for the queue family that was used to create the command pool that <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-dstStageMask-03843",
          "text": "The <code>dstStageMask</code> member of any element of the <code>pMemoryBarriers</code>, <code>pBufferMemoryBarriers</code>, or <code>pImageMemoryBarriers</code> members of <code>pDependencyInfos</code> <strong class=\"purple\">must</strong> only include pipeline stages valid for the queue family that was used to create the command pool that <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-dependencyFlags-03844",
          "text": "If <code>vkCmdWaitEvents2KHR</code> is being called inside a render pass instance, the <code>srcStageMask</code> member of any element of the <code>pMemoryBarriers</code>, <code>pBufferMemoryBarriers</code>, or <code>pImageMemoryBarriers</code> members of <code>pDependencyInfos</code> <strong class=\"purple\">must</strong> not include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-commandBuffer-03846",
          "text": "<code>commandBuffer</code>&#8217;s current device mask <strong class=\"purple\">must</strong> include exactly one physical device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-pEvents-parameter",
          "text": "<code>pEvents</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>eventCount</code> valid <a href=\"#VkEvent\">VkEvent</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-pDependencyInfos-parameter",
          "text": "<code>pDependencyInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>eventCount</code> valid <a href=\"#VkDependencyInfo\">VkDependencyInfo</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-eventCount-arraylength",
          "text": "<code>eventCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents2-commonparent",
          "text": "Both of <code>commandBuffer</code>, and the elements of <code>pEvents</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdWaitEvents": {
      "core": [
        {
          "vuid": "VUID-vkCmdWaitEvents-srcStageMask-04090",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-srcStageMask-04091",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-srcStageMask-07319",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-srcStageMask-03937",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-dstStageMask-04090",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-dstStageMask-04091",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-dstStageMask-07319",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-dstStageMask-03937",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-srcAccessMask-02815",
          "text": "The <code>srcAccessMask</code> member of each element of <code>pMemoryBarriers</code> <strong class=\"purple\">must</strong> only include access flags that are supported by one or more of the pipeline stages in <code>srcStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-dstAccessMask-02816",
          "text": "The <code>dstAccessMask</code> member of each element of <code>pMemoryBarriers</code> <strong class=\"purple\">must</strong> only include access flags that are supported by one or more of the pipeline stages in <code>dstStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-pBufferMemoryBarriers-02817",
          "text": "For any element of <code>pBufferMemoryBarriers</code>, if its <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> members are equal, or if its <code>srcQueueFamilyIndex</code> is the queue family index that was used to create the command pool that <code>commandBuffer</code> was allocated from, then its <code>srcAccessMask</code> member <strong class=\"purple\">must</strong> only contain access flags that are supported by one or more of the pipeline stages in <code>srcStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-pBufferMemoryBarriers-02818",
          "text": "For any element of <code>pBufferMemoryBarriers</code>, if its <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> members are equal, or if its <code>dstQueueFamilyIndex</code> is the queue family index that was used to create the command pool that <code>commandBuffer</code> was allocated from, then its <code>dstAccessMask</code> member <strong class=\"purple\">must</strong> only contain access flags that are supported by one or more of the pipeline stages in <code>dstStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-pImageMemoryBarriers-02819",
          "text": "For any element of <code>pImageMemoryBarriers</code>, if its <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> members are equal, or if its <code>srcQueueFamilyIndex</code> is the queue family index that was used to create the command pool that <code>commandBuffer</code> was allocated from, then its <code>srcAccessMask</code> member <strong class=\"purple\">must</strong> only contain access flags that are supported by one or more of the pipeline stages in <code>srcStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-pImageMemoryBarriers-02820",
          "text": "For any element of <code>pImageMemoryBarriers</code>, if its <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> members are equal, or if its <code>dstQueueFamilyIndex</code> is the queue family index that was used to create the command pool that <code>commandBuffer</code> was allocated from, then its <code>dstAccessMask</code> member <strong class=\"purple\">must</strong> only contain access flags that are supported by one or more of the pipeline stages in <code>dstStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-srcStageMask-06459",
          "text": "Any pipeline stage included in <code>srcStageMask</code> <strong class=\"purple\">must</strong> be supported by the capabilities of the queue family specified by the <code>queueFamilyIndex</code> member of the <a href=\"#VkCommandPoolCreateInfo\">VkCommandPoolCreateInfo</a> structure that was used to create the <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from, as specified in the <a href=\"#synchronization-pipeline-stages-supported\">table of supported pipeline stages</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-dstStageMask-06460",
          "text": "Any pipeline stage included in <code>dstStageMask</code> <strong class=\"purple\">must</strong> be supported by the capabilities of the queue family specified by the <code>queueFamilyIndex</code> member of the <a href=\"#VkCommandPoolCreateInfo\">VkCommandPoolCreateInfo</a> structure that was used to create the <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from, as specified in the <a href=\"#synchronization-pipeline-stages-supported\">table of supported pipeline stages</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-srcStageMask-01158",
          "text": "<code>srcStageMask</code> <strong class=\"purple\">must</strong> be the bitwise OR of the <code>stageMask</code> parameter used in previous calls to <code>vkCmdSetEvent</code> with any of the elements of <code>pEvents</code> and <code>VK_PIPELINE_STAGE_HOST_BIT</code> if any of the elements of <code>pEvents</code> was set using <code>vkSetEvent</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-srcStageMask-07308",
          "text": "If <code>vkCmdWaitEvents</code> is being called inside a render pass instance, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not include <code>VK_PIPELINE_STAGE_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-srcQueueFamilyIndex-02803",
          "text": "The <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> members of any element of <code>pBufferMemoryBarriers</code> or <code>pImageMemoryBarriers</code> <strong class=\"purple\">must</strong> be equal",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-commandBuffer-01167",
          "text": "<code>commandBuffer</code>&#8217;s current device mask <strong class=\"purple\">must</strong> include exactly one physical device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-pEvents-03847",
          "text": "Elements of <code>pEvents</code> <strong class=\"purple\">must</strong> not have been signaled by <a href=\"#vkCmdSetEvent2KHR\">vkCmdSetEvent2KHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-pEvents-parameter",
          "text": "<code>pEvents</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>eventCount</code> valid <a href=\"#VkEvent\">VkEvent</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-srcStageMask-parameter",
          "text": "<code>srcStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits\">VkPipelineStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-dstStageMask-parameter",
          "text": "<code>dstStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits\">VkPipelineStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-pMemoryBarriers-parameter",
          "text": "If <code>memoryBarrierCount</code> is not <code>0</code>, <code>pMemoryBarriers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>memoryBarrierCount</code> valid <a href=\"#VkMemoryBarrier\">VkMemoryBarrier</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-pBufferMemoryBarriers-parameter",
          "text": "If <code>bufferMemoryBarrierCount</code> is not <code>0</code>, <code>pBufferMemoryBarriers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bufferMemoryBarrierCount</code> valid <a href=\"#VkBufferMemoryBarrier\">VkBufferMemoryBarrier</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-pImageMemoryBarriers-parameter",
          "text": "If <code>imageMemoryBarrierCount</code> is not <code>0</code>, <code>pImageMemoryBarriers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>imageMemoryBarrierCount</code> valid <a href=\"#VkImageMemoryBarrier\">VkImageMemoryBarrier</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-eventCount-arraylength",
          "text": "<code>eventCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWaitEvents-commonparent",
          "text": "Both of <code>commandBuffer</code>, and the elements of <code>pEvents</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdPipelineBarrier2": {
      "core": [
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-None-07889",
          "text": "If <code>vkCmdPipelineBarrier2KHR</code> is called within a render pass instance using a <a href=\"#VkRenderPass\">VkRenderPass</a> object, the render pass <strong class=\"purple\">must</strong> have been created with at least one subpass dependency that expresses a dependency from the current subpass to itself, does not include <code>VK_DEPENDENCY_BY_REGION_BIT</code> if this command does not, does not include <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code> if this command does not, and has <a href=\"#synchronization-dependencies-scopes\">synchronization scopes</a> and <a href=\"#synchronization-dependencies-access-scopes\">access scopes</a> that are all supersets of the scopes defined in this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-bufferMemoryBarrierCount-01178",
          "text": "If <code>vkCmdPipelineBarrier2KHR</code> is called within a render pass instance using a <a href=\"#VkRenderPass\">VkRenderPass</a> object, it <strong class=\"purple\">must</strong> not include any buffer memory barriers",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-image-04073",
          "text": "If <code>vkCmdPipelineBarrier2KHR</code> is called within a render pass instance using a <a href=\"#VkRenderPass\">VkRenderPass</a> object, the <code>image</code> member of any image memory barrier included in this command <strong class=\"purple\">must</strong> be an attachment used in the current subpass both as an input attachment, and as either a color, or depth/stencil attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-oldLayout-01181",
          "text": "If <code>vkCmdPipelineBarrier2KHR</code> is called within a render pass instance, the <code>oldLayout</code> and <code>newLayout</code> members of any image memory barrier included in this command <strong class=\"purple\">must</strong> be equal",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-srcQueueFamilyIndex-01182",
          "text": "If <code>vkCmdPipelineBarrier2KHR</code> is called within a render pass instance, the <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> members of any memory barrier included in this command <strong class=\"purple\">must</strong> be equal",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-None-07890",
          "text": "If <code>vkCmdPipelineBarrier2KHR</code> is called within a render pass instance, and the source stage masks of any memory barriers include <a href=\"#synchronization-framebuffer-regions\">framebuffer-space stages</a>, destination stage masks of all memory barriers <strong class=\"purple\">must</strong> only include <a href=\"#synchronization-framebuffer-regions\">framebuffer-space stages</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-dependencyFlags-07891",
          "text": "If <code>vkCmdPipelineBarrier2KHR</code> is called within a render pass instance, and and the source stage masks of any memory barriers include <a href=\"#synchronization-framebuffer-regions\">framebuffer-space stages</a>, then <code>dependencyFlags</code> <strong class=\"purple\">must</strong> include <code>VK_DEPENDENCY_BY_REGION_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-None-07892",
          "text": "If <code>vkCmdPipelineBarrier2KHR</code> is called within a render pass instance, the source and destination stage masks of any memory barriers <strong class=\"purple\">must</strong> only include graphics pipeline stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-dependencyFlags-01186",
          "text": "If <code>vkCmdPipelineBarrier2KHR</code> is called outside of a render pass instance, the dependency flags <strong class=\"purple\">must</strong> not include <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-None-07893",
          "text": "If <code>vkCmdPipelineBarrier2KHR</code> is called inside a render pass instance, and there is more than one view in the current subpass, dependency flags <strong class=\"purple\">must</strong> include <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-synchronization2-03848",
          "text": "The <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-srcStageMask-03849",
          "text": "The <code>srcStageMask</code> member of any element of the <code>pMemoryBarriers</code>, <code>pBufferMemoryBarriers</code>, or <code>pImageMemoryBarriers</code> members of <code>pDependencyInfo</code> <strong class=\"purple\">must</strong> only include pipeline stages valid for the queue family that was used to create the command pool that <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-dstStageMask-03850",
          "text": "The <code>dstStageMask</code> member of any element of the <code>pMemoryBarriers</code>, <code>pBufferMemoryBarriers</code>, or <code>pImageMemoryBarriers</code> members of <code>pDependencyInfo</code> <strong class=\"purple\">must</strong> only include pipeline stages valid for the queue family that was used to create the command pool that <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-pDependencyInfo-parameter",
          "text": "<code>pDependencyInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDependencyInfo\">VkDependencyInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdPipelineBarrier": {
      "core": [
        {
          "vuid": "VUID-vkCmdPipelineBarrier-srcStageMask-04090",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-srcStageMask-04091",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-srcStageMask-07319",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-srcStageMask-03937",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-dstStageMask-04090",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-dstStageMask-04091",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-dstStageMask-07319",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-dstStageMask-03937",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-srcAccessMask-02815",
          "text": "The <code>srcAccessMask</code> member of each element of <code>pMemoryBarriers</code> <strong class=\"purple\">must</strong> only include access flags that are supported by one or more of the pipeline stages in <code>srcStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-dstAccessMask-02816",
          "text": "The <code>dstAccessMask</code> member of each element of <code>pMemoryBarriers</code> <strong class=\"purple\">must</strong> only include access flags that are supported by one or more of the pipeline stages in <code>dstStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-pBufferMemoryBarriers-02817",
          "text": "For any element of <code>pBufferMemoryBarriers</code>, if its <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> members are equal, or if its <code>srcQueueFamilyIndex</code> is the queue family index that was used to create the command pool that <code>commandBuffer</code> was allocated from, then its <code>srcAccessMask</code> member <strong class=\"purple\">must</strong> only contain access flags that are supported by one or more of the pipeline stages in <code>srcStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-pBufferMemoryBarriers-02818",
          "text": "For any element of <code>pBufferMemoryBarriers</code>, if its <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> members are equal, or if its <code>dstQueueFamilyIndex</code> is the queue family index that was used to create the command pool that <code>commandBuffer</code> was allocated from, then its <code>dstAccessMask</code> member <strong class=\"purple\">must</strong> only contain access flags that are supported by one or more of the pipeline stages in <code>dstStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-pImageMemoryBarriers-02819",
          "text": "For any element of <code>pImageMemoryBarriers</code>, if its <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> members are equal, or if its <code>srcQueueFamilyIndex</code> is the queue family index that was used to create the command pool that <code>commandBuffer</code> was allocated from, then its <code>srcAccessMask</code> member <strong class=\"purple\">must</strong> only contain access flags that are supported by one or more of the pipeline stages in <code>srcStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-pImageMemoryBarriers-02820",
          "text": "For any element of <code>pImageMemoryBarriers</code>, if its <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> members are equal, or if its <code>dstQueueFamilyIndex</code> is the queue family index that was used to create the command pool that <code>commandBuffer</code> was allocated from, then its <code>dstAccessMask</code> member <strong class=\"purple\">must</strong> only contain access flags that are supported by one or more of the pipeline stages in <code>dstStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-None-07889",
          "text": "If <code>vkCmdPipelineBarrier</code> is called within a render pass instance using a <a href=\"#VkRenderPass\">VkRenderPass</a> object, the render pass <strong class=\"purple\">must</strong> have been created with at least one subpass dependency that expresses a dependency from the current subpass to itself, does not include <code>VK_DEPENDENCY_BY_REGION_BIT</code> if this command does not, does not include <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code> if this command does not, and has <a href=\"#synchronization-dependencies-scopes\">synchronization scopes</a> and <a href=\"#synchronization-dependencies-access-scopes\">access scopes</a> that are all supersets of the scopes defined in this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-bufferMemoryBarrierCount-01178",
          "text": "If <code>vkCmdPipelineBarrier</code> is called within a render pass instance using a <a href=\"#VkRenderPass\">VkRenderPass</a> object, it <strong class=\"purple\">must</strong> not include any buffer memory barriers",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-image-04073",
          "text": "If <code>vkCmdPipelineBarrier</code> is called within a render pass instance using a <a href=\"#VkRenderPass\">VkRenderPass</a> object, the <code>image</code> member of any image memory barrier included in this command <strong class=\"purple\">must</strong> be an attachment used in the current subpass both as an input attachment, and as either a color, or depth/stencil attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-oldLayout-01181",
          "text": "If <code>vkCmdPipelineBarrier</code> is called within a render pass instance, the <code>oldLayout</code> and <code>newLayout</code> members of any image memory barrier included in this command <strong class=\"purple\">must</strong> be equal",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-srcQueueFamilyIndex-01182",
          "text": "If <code>vkCmdPipelineBarrier</code> is called within a render pass instance, the <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> members of any memory barrier included in this command <strong class=\"purple\">must</strong> be equal",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-None-07890",
          "text": "If <code>vkCmdPipelineBarrier</code> is called within a render pass instance, and the source stage masks of any memory barriers include <a href=\"#synchronization-framebuffer-regions\">framebuffer-space stages</a>, destination stage masks of all memory barriers <strong class=\"purple\">must</strong> only include <a href=\"#synchronization-framebuffer-regions\">framebuffer-space stages</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-dependencyFlags-07891",
          "text": "If <code>vkCmdPipelineBarrier</code> is called within a render pass instance, and and the source stage masks of any memory barriers include <a href=\"#synchronization-framebuffer-regions\">framebuffer-space stages</a>, then <code>dependencyFlags</code> <strong class=\"purple\">must</strong> include <code>VK_DEPENDENCY_BY_REGION_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-None-07892",
          "text": "If <code>vkCmdPipelineBarrier</code> is called within a render pass instance, the source and destination stage masks of any memory barriers <strong class=\"purple\">must</strong> only include graphics pipeline stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-dependencyFlags-01186",
          "text": "If <code>vkCmdPipelineBarrier</code> is called outside of a render pass instance, the dependency flags <strong class=\"purple\">must</strong> not include <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-None-07893",
          "text": "If <code>vkCmdPipelineBarrier</code> is called inside a render pass instance, and there is more than one view in the current subpass, dependency flags <strong class=\"purple\">must</strong> include <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-srcStageMask-06461",
          "text": "Any pipeline stage included in <code>srcStageMask</code> <strong class=\"purple\">must</strong> be supported by the capabilities of the queue family specified by the <code>queueFamilyIndex</code> member of the <a href=\"#VkCommandPoolCreateInfo\">VkCommandPoolCreateInfo</a> structure that was used to create the <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from, as specified in the <a href=\"#synchronization-pipeline-stages-supported\">table of supported pipeline stages</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-dstStageMask-06462",
          "text": "Any pipeline stage included in <code>dstStageMask</code> <strong class=\"purple\">must</strong> be supported by the capabilities of the queue family specified by the <code>queueFamilyIndex</code> member of the <a href=\"#VkCommandPoolCreateInfo\">VkCommandPoolCreateInfo</a> structure that was used to create the <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from, as specified in the <a href=\"#synchronization-pipeline-stages-supported\">table of supported pipeline stages</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-srcStageMask-parameter",
          "text": "<code>srcStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits\">VkPipelineStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-dstStageMask-parameter",
          "text": "<code>dstStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits\">VkPipelineStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-dependencyFlags-parameter",
          "text": "<code>dependencyFlags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkDependencyFlagBits\">VkDependencyFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-pMemoryBarriers-parameter",
          "text": "If <code>memoryBarrierCount</code> is not <code>0</code>, <code>pMemoryBarriers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>memoryBarrierCount</code> valid <a href=\"#VkMemoryBarrier\">VkMemoryBarrier</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-pBufferMemoryBarriers-parameter",
          "text": "If <code>bufferMemoryBarrierCount</code> is not <code>0</code>, <code>pBufferMemoryBarriers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bufferMemoryBarrierCount</code> valid <a href=\"#VkBufferMemoryBarrier\">VkBufferMemoryBarrier</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-pImageMemoryBarriers-parameter",
          "text": "If <code>imageMemoryBarrierCount</code> is not <code>0</code>, <code>pImageMemoryBarriers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>imageMemoryBarrierCount</code> valid <a href=\"#VkImageMemoryBarrier\">VkImageMemoryBarrier</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPipelineBarrier-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        }
      ]
    },
    "VkMemoryBarrier2": {
      "core": [
        {
          "vuid": "VUID-VkMemoryBarrier2-srcStageMask-03929",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcStageMask-03930",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcStageMask-07317",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03900",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03901",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_INDEX_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03902",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03903",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT</code>, <code>VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03904",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_UNIFORM_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03905",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_SAMPLED_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03906",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_STORAGE_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03907",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-07454",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03909",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03910",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03911",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03912",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03913",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03914",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_TRANSFER_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COPY_BIT</code>, <code>VK_PIPELINE_STAGE_2_BLIT_BIT</code>, <code>VK_PIPELINE_STAGE_2_RESOLVE_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03915",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_TRANSFER_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COPY_BIT</code>, <code>VK_PIPELINE_STAGE_2_BLIT_BIT</code>, <code>VK_PIPELINE_STAGE_2_RESOLVE_BIT</code>, <code>VK_PIPELINE_STAGE_2_CLEAR_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03916",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_HOST_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03917",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_HOST_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-03926",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstStageMask-03929",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstStageMask-03930",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstStageMask-07317",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03900",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03901",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_INDEX_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03902",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03903",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT</code>, <code>VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03904",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_UNIFORM_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03905",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_SAMPLED_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03906",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_STORAGE_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03907",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-07454",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03909",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03910",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03911",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03912",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03913",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03914",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_TRANSFER_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COPY_BIT</code>, <code>VK_PIPELINE_STAGE_2_BLIT_BIT</code>, <code>VK_PIPELINE_STAGE_2_RESOLVE_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03915",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_TRANSFER_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COPY_BIT</code>, <code>VK_PIPELINE_STAGE_2_BLIT_BIT</code>, <code>VK_PIPELINE_STAGE_2_RESOLVE_BIT</code>, <code>VK_PIPELINE_STAGE_2_CLEAR_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03916",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_HOST_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03917",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_HOST_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-03926",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_BARRIER_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcStageMask-parameter",
          "text": "<code>srcStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits2\">VkPipelineStageFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-srcAccessMask-parameter",
          "text": "<code>srcAccessMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAccessFlagBits2\">VkAccessFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstStageMask-parameter",
          "text": "<code>dstStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits2\">VkPipelineStageFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier2-dstAccessMask-parameter",
          "text": "<code>dstAccessMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAccessFlagBits2\">VkAccessFlagBits2</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkMemoryBarrier": {
      "core": [
        {
          "vuid": "VUID-VkMemoryBarrier-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_BARRIER</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier-srcAccessMask-parameter",
          "text": "<code>srcAccessMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAccessFlagBits\">VkAccessFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryBarrier-dstAccessMask-parameter",
          "text": "<code>dstAccessMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAccessFlagBits\">VkAccessFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkBufferMemoryBarrier2": {
      "core": [
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcStageMask-03929",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcStageMask-03930",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcStageMask-07317",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03900",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03901",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_INDEX_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03902",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03903",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT</code>, <code>VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03904",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_UNIFORM_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03905",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_SAMPLED_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03906",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_STORAGE_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03907",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-07454",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03909",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03910",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03911",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03912",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03913",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03914",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_TRANSFER_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COPY_BIT</code>, <code>VK_PIPELINE_STAGE_2_BLIT_BIT</code>, <code>VK_PIPELINE_STAGE_2_RESOLVE_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03915",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_TRANSFER_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COPY_BIT</code>, <code>VK_PIPELINE_STAGE_2_BLIT_BIT</code>, <code>VK_PIPELINE_STAGE_2_RESOLVE_BIT</code>, <code>VK_PIPELINE_STAGE_2_CLEAR_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03916",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_HOST_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03917",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_HOST_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-03926",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstStageMask-03929",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstStageMask-03930",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstStageMask-07317",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03900",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03901",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_INDEX_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03902",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03903",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT</code>, <code>VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03904",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_UNIFORM_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03905",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_SAMPLED_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03906",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_STORAGE_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03907",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-07454",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03909",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03910",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03911",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03912",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03913",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03914",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_TRANSFER_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COPY_BIT</code>, <code>VK_PIPELINE_STAGE_2_BLIT_BIT</code>, <code>VK_PIPELINE_STAGE_2_RESOLVE_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03915",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_TRANSFER_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COPY_BIT</code>, <code>VK_PIPELINE_STAGE_2_BLIT_BIT</code>, <code>VK_PIPELINE_STAGE_2_RESOLVE_BIT</code>, <code>VK_PIPELINE_STAGE_2_CLEAR_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03916",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_HOST_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03917",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_HOST_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-03926",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-offset-01187",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be less than the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-size-01188",
          "text": "If <code>size</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>size</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-size-01189",
          "text": "If <code>size</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>size</code> <strong class=\"purple\">must</strong> be less than or equal to than the size of <code>buffer</code> minus <code>offset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-buffer-01931",
          "text": "If <code>buffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-buffer-09095",
          "text": "If <code>buffer</code> was created with a sharing mode of <code>VK_SHARING_MODE_EXCLUSIVE</code>, and <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> are not equal, <code>srcQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_EXTERNAL</code>, <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>, or a valid queue family",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-buffer-09096",
          "text": "If <code>buffer</code> was created with a sharing mode of <code>VK_SHARING_MODE_EXCLUSIVE</code>, and <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> are not equal, <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_EXTERNAL</code>, <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>, or a valid queue family",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcQueueFamilyIndex-04087",
          "text": "If <code>srcQueueFamilyIndex</code> is not equal to <code>dstQueueFamilyIndex</code>, at least one of <code>srcQueueFamilyIndex</code> or <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> not be <code>VK_QUEUE_FAMILY_EXTERNAL</code> or <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcQueueFamilyIndex-09099",
          "text": "If the <a href=\"#VK_EXT_queue_family_foreign\">VK_EXT_queue_family_foreign</a> extension is not enabled <code>srcQueueFamilyIndex</code> <strong class=\"purple\">must</strong> not be <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstQueueFamilyIndex-09100",
          "text": "If the <a href=\"#VK_EXT_queue_family_foreign\">VK_EXT_queue_family_foreign</a> extension is not enabled <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> not be <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcStageMask-03851",
          "text": "If either <code>srcStageMask</code> or <code>dstStageMask</code> includes <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>, <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be equal",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcStageMask-parameter",
          "text": "<code>srcStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits2\">VkPipelineStageFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-srcAccessMask-parameter",
          "text": "<code>srcAccessMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAccessFlagBits2\">VkAccessFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstStageMask-parameter",
          "text": "<code>dstStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits2\">VkPipelineStageFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-dstAccessMask-parameter",
          "text": "<code>dstAccessMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAccessFlagBits2\">VkAccessFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier2-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkBufferMemoryBarrier": {
      "core": [
        {
          "vuid": "VUID-VkBufferMemoryBarrier-offset-01187",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be less than the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-size-01188",
          "text": "If <code>size</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>size</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-size-01189",
          "text": "If <code>size</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>size</code> <strong class=\"purple\">must</strong> be less than or equal to than the size of <code>buffer</code> minus <code>offset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-buffer-01931",
          "text": "If <code>buffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-buffer-09095",
          "text": "If <code>buffer</code> was created with a sharing mode of <code>VK_SHARING_MODE_EXCLUSIVE</code>, and <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> are not equal, <code>srcQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_EXTERNAL</code>, <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>, or a valid queue family",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-buffer-09096",
          "text": "If <code>buffer</code> was created with a sharing mode of <code>VK_SHARING_MODE_EXCLUSIVE</code>, and <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> are not equal, <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_EXTERNAL</code>, <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>, or a valid queue family",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-srcQueueFamilyIndex-04087",
          "text": "If <code>srcQueueFamilyIndex</code> is not equal to <code>dstQueueFamilyIndex</code>, at least one of <code>srcQueueFamilyIndex</code> or <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> not be <code>VK_QUEUE_FAMILY_EXTERNAL</code> or <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-srcQueueFamilyIndex-09099",
          "text": "If the <a href=\"#VK_EXT_queue_family_foreign\">VK_EXT_queue_family_foreign</a> extension is not enabled <code>srcQueueFamilyIndex</code> <strong class=\"purple\">must</strong> not be <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-dstQueueFamilyIndex-09100",
          "text": "If the <a href=\"#VK_EXT_queue_family_foreign\">VK_EXT_queue_family_foreign</a> extension is not enabled <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> not be <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-None-09049",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, and <code>buffer</code> was created with a sharing mode of <code>VK_SHARING_MODE_CONCURRENT</code>, at least one of <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_IGNORED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-None-09050",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, and <code>buffer</code> was created with a sharing mode of <code>VK_SHARING_MODE_CONCURRENT</code>, <code>srcQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_IGNORED</code> or <code>VK_QUEUE_FAMILY_EXTERNAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-None-09051",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, and <code>buffer</code> was created with a sharing mode of <code>VK_SHARING_MODE_CONCURRENT</code>, <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_IGNORED</code> or <code>VK_QUEUE_FAMILY_EXTERNAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryBarrier-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkImageMemoryBarrier2": {
      "core": [
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcStageMask-03929",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcStageMask-03930",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcStageMask-07317",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03900",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03901",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_INDEX_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03902",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03903",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT</code>, <code>VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03904",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_UNIFORM_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03905",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_SAMPLED_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03906",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_STORAGE_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03907",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-07454",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03909",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_SHADER_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03910",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03911",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03912",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03913",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03914",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_TRANSFER_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COPY_BIT</code>, <code>VK_PIPELINE_STAGE_2_BLIT_BIT</code>, <code>VK_PIPELINE_STAGE_2_RESOLVE_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03915",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_TRANSFER_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COPY_BIT</code>, <code>VK_PIPELINE_STAGE_2_BLIT_BIT</code>, <code>VK_PIPELINE_STAGE_2_RESOLVE_BIT</code>, <code>VK_PIPELINE_STAGE_2_CLEAR_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03916",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_HOST_READ_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03917",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_HOST_WRITE_BIT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-03926",
          "text": "If <code>srcAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT</code>, <code>srcStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstStageMask-03929",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstStageMask-03930",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstStageMask-07317",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03900",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03901",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_INDEX_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03902",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03903",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT</code>, <code>VK_PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03904",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_UNIFORM_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03905",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_SAMPLED_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03906",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_STORAGE_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03907",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-07454",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03909",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_SHADER_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>, or one of the <code>VK_PIPELINE_STAGE_*_SHADER_BIT</code> stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03910",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03911",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03912",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03913",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03914",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_TRANSFER_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COPY_BIT</code>, <code>VK_PIPELINE_STAGE_2_BLIT_BIT</code>, <code>VK_PIPELINE_STAGE_2_RESOLVE_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03915",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_TRANSFER_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COPY_BIT</code>, <code>VK_PIPELINE_STAGE_2_BLIT_BIT</code>, <code>VK_PIPELINE_STAGE_2_RESOLVE_BIT</code>, <code>VK_PIPELINE_STAGE_2_CLEAR_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT</code>, <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03916",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_HOST_READ_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03917",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_HOST_WRITE_BIT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-03926",
          "text": "If <code>dstAccessMask</code> includes <code>VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT</code>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT</code> <code>VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT</code>, or <code>VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-oldLayout-01208",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-oldLayout-01209",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-oldLayout-01210",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-oldLayout-01211",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_SAMPLED_BIT</code> or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-oldLayout-01212",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-oldLayout-01213",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-oldLayout-01197",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, <code>oldLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_UNDEFINED</code> or the current layout of the image subresources affected by the barrier",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-newLayout-01198",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, <code>newLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code> or <code>VK_IMAGE_LAYOUT_PREINITIALIZED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-oldLayout-01658",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-oldLayout-01659",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcQueueFamilyIndex-04065",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with at least one of <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, <code>VK_IMAGE_USAGE_SAMPLED_BIT</code>, or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcQueueFamilyIndex-04066",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcQueueFamilyIndex-04067",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with at least one of <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, <code>VK_IMAGE_USAGE_SAMPLED_BIT</code>, or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcQueueFamilyIndex-04068",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-synchronization2-07793",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>oldLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR</code> or <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-synchronization2-07794",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>newLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR</code> or <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcQueueFamilyIndex-03938",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL</code>, <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code> or <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcQueueFamilyIndex-03939",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL</code>, <code>image</code> <strong class=\"purple\">must</strong> have been created with at least one of <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, <code>VK_IMAGE_USAGE_SAMPLED_BIT</code>, or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-oldLayout-02088",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-image-09117",
          "text": "If <code>image</code> was created with a sharing mode of <code>VK_SHARING_MODE_EXCLUSIVE</code>, and <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> are not equal, <code>srcQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_EXTERNAL</code>, <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>, or a valid queue family",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-image-09118",
          "text": "If <code>image</code> was created with a sharing mode of <code>VK_SHARING_MODE_EXCLUSIVE</code>, and <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> are not equal, <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_EXTERNAL</code>, <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>, or a valid queue family",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcQueueFamilyIndex-04070",
          "text": "If <code>srcQueueFamilyIndex</code> is not equal to <code>dstQueueFamilyIndex</code>, at least one of <code>srcQueueFamilyIndex</code> or <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> not be <code>VK_QUEUE_FAMILY_EXTERNAL</code> or <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcQueueFamilyIndex-09121",
          "text": "If the <a href=\"#VK_EXT_queue_family_foreign\">VK_EXT_queue_family_foreign</a> extension is not enabled <code>srcQueueFamilyIndex</code> <strong class=\"purple\">must</strong> not be <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstQueueFamilyIndex-09122",
          "text": "If the <a href=\"#VK_EXT_queue_family_foreign\">VK_EXT_queue_family_foreign</a> extension is not enabled <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> not be <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-subresourceRange-01486",
          "text": "<code>subresourceRange.baseMipLevel</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-subresourceRange-01724",
          "text": "If <code>subresourceRange.levelCount</code> is not <code>VK_REMAINING_MIP_LEVELS</code>, <span class=\"eq\"><code>subresourceRange.baseMipLevel</code> +  <code>subresourceRange.levelCount</code></span> <strong class=\"purple\">must</strong> be less than or equal to the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-subresourceRange-01488",
          "text": "<code>subresourceRange.baseArrayLayer</code> <strong class=\"purple\">must</strong> be less than the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-subresourceRange-01725",
          "text": "If <code>subresourceRange.layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code>, <span class=\"eq\"><code>subresourceRange.baseArrayLayer</code> +  <code>subresourceRange.layerCount</code></span> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-image-01932",
          "text": "If <code>image</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-image-09241",
          "text": "If <code>image</code> has a color format that is single-plane, then the <code>aspectMask</code> member of <code>subresourceRange</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-image-09242",
          "text": "If <code>image</code> has a color format and is not <em>disjoint</em>, then the <code>aspectMask</code> member of <code>subresourceRange</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-image-01672",
          "text": "If <code>image</code> has a multi-planar format and the image is <em>disjoint</em>, then the <code>aspectMask</code> member of <code>subresourceRange</code> <strong class=\"purple\">must</strong> include at least one <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit or <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-image-03320",
          "text": "If <code>image</code> has a depth/stencil format with both depth and stencil and the <a href=\"#features-separateDepthStencilLayouts\"><code>separateDepthStencilLayouts</code></a> feature is not enabled, then the <code>aspectMask</code> member of <code>subresourceRange</code> <strong class=\"purple\">must</strong> include both <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> and <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-image-03319",
          "text": "If <code>image</code> has a depth/stencil format with both depth and stencil and the <a href=\"#features-separateDepthStencilLayouts\"><code>separateDepthStencilLayouts</code></a> feature is enabled, then the <code>aspectMask</code> member of <code>subresourceRange</code> <strong class=\"purple\">must</strong> include either or both <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> and <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-aspectMask-08702",
          "text": "If the <code>aspectMask</code> member of <code>subresourceRange</code> includes <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>, <code>oldLayout</code> and <code>newLayout</code> <strong class=\"purple\">must</strong> not be one of <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-aspectMask-08703",
          "text": "If the <code>aspectMask</code> member of <code>subresourceRange</code> includes <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>, <code>oldLayout</code> and <code>newLayout</code> <strong class=\"purple\">must</strong> not be one of <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcStageMask-03854",
          "text": "If either <code>srcStageMask</code> or <code>dstStageMask</code> includes <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>, <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be equal",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcStageMask-03855",
          "text": "If <code>srcStageMask</code> includes <code>VK_PIPELINE_STAGE_2_HOST_BIT</code>, and <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, <code>oldLayout</code> <strong class=\"purple\">must</strong> be one of <code>VK_IMAGE_LAYOUT_PREINITIALIZED</code>, <code>VK_IMAGE_LAYOUT_UNDEFINED</code>, or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkSampleLocationsInfoEXT\">VkSampleLocationsInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcStageMask-parameter",
          "text": "<code>srcStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits2\">VkPipelineStageFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-srcAccessMask-parameter",
          "text": "<code>srcAccessMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAccessFlagBits2\">VkAccessFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstStageMask-parameter",
          "text": "<code>dstStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits2\">VkPipelineStageFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-dstAccessMask-parameter",
          "text": "<code>dstAccessMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAccessFlagBits2\">VkAccessFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-oldLayout-parameter",
          "text": "<code>oldLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-newLayout-parameter",
          "text": "<code>newLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-image-parameter",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier2-subresourceRange-parameter",
          "text": "<code>subresourceRange</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkImageMemoryBarrier": {
      "core": [
        {
          "vuid": "VUID-VkImageMemoryBarrier-oldLayout-01208",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-oldLayout-01209",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-oldLayout-01210",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-oldLayout-01211",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_SAMPLED_BIT</code> or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-oldLayout-01212",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-oldLayout-01213",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-oldLayout-01197",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, <code>oldLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_UNDEFINED</code> or the current layout of the image subresources affected by the barrier",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-newLayout-01198",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, <code>newLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code> or <code>VK_IMAGE_LAYOUT_PREINITIALIZED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-oldLayout-01658",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-oldLayout-01659",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-srcQueueFamilyIndex-04065",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with at least one of <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, <code>VK_IMAGE_USAGE_SAMPLED_BIT</code>, or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-srcQueueFamilyIndex-04066",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-srcQueueFamilyIndex-04067",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with at least one of <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, <code>VK_IMAGE_USAGE_SAMPLED_BIT</code>, or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-srcQueueFamilyIndex-04068",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-synchronization2-07793",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>oldLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR</code> or <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-synchronization2-07794",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>newLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR</code> or <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-srcQueueFamilyIndex-03938",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL</code>, <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code> or <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-srcQueueFamilyIndex-03939",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL</code>, <code>image</code> <strong class=\"purple\">must</strong> have been created with at least one of <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, <code>VK_IMAGE_USAGE_SAMPLED_BIT</code>, or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-oldLayout-02088",
          "text": "If <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> define a <a href=\"#synchronization-queue-transfers\">queue family ownership transfer</a> or <code>oldLayout</code> and <code>newLayout</code> define an <a href=\"#synchronization-image-layout-transitions\">image layout transition</a>, and <code>oldLayout</code> or <code>newLayout</code> is <code>VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR</code> then <code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-image-09117",
          "text": "If <code>image</code> was created with a sharing mode of <code>VK_SHARING_MODE_EXCLUSIVE</code>, and <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> are not equal, <code>srcQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_EXTERNAL</code>, <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>, or a valid queue family",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-image-09118",
          "text": "If <code>image</code> was created with a sharing mode of <code>VK_SHARING_MODE_EXCLUSIVE</code>, and <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> are not equal, <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_EXTERNAL</code>, <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>, or a valid queue family",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-srcQueueFamilyIndex-04070",
          "text": "If <code>srcQueueFamilyIndex</code> is not equal to <code>dstQueueFamilyIndex</code>, at least one of <code>srcQueueFamilyIndex</code> or <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> not be <code>VK_QUEUE_FAMILY_EXTERNAL</code> or <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-srcQueueFamilyIndex-09121",
          "text": "If the <a href=\"#VK_EXT_queue_family_foreign\">VK_EXT_queue_family_foreign</a> extension is not enabled <code>srcQueueFamilyIndex</code> <strong class=\"purple\">must</strong> not be <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-dstQueueFamilyIndex-09122",
          "text": "If the <a href=\"#VK_EXT_queue_family_foreign\">VK_EXT_queue_family_foreign</a> extension is not enabled <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> not be <code>VK_QUEUE_FAMILY_FOREIGN_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-subresourceRange-01486",
          "text": "<code>subresourceRange.baseMipLevel</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-subresourceRange-01724",
          "text": "If <code>subresourceRange.levelCount</code> is not <code>VK_REMAINING_MIP_LEVELS</code>, <span class=\"eq\"><code>subresourceRange.baseMipLevel</code> +  <code>subresourceRange.levelCount</code></span> <strong class=\"purple\">must</strong> be less than or equal to the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-subresourceRange-01488",
          "text": "<code>subresourceRange.baseArrayLayer</code> <strong class=\"purple\">must</strong> be less than the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-subresourceRange-01725",
          "text": "If <code>subresourceRange.layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code>, <span class=\"eq\"><code>subresourceRange.baseArrayLayer</code> +  <code>subresourceRange.layerCount</code></span> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-image-01932",
          "text": "If <code>image</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-image-09241",
          "text": "If <code>image</code> has a color format that is single-plane, then the <code>aspectMask</code> member of <code>subresourceRange</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-image-09242",
          "text": "If <code>image</code> has a color format and is not <em>disjoint</em>, then the <code>aspectMask</code> member of <code>subresourceRange</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-image-01672",
          "text": "If <code>image</code> has a multi-planar format and the image is <em>disjoint</em>, then the <code>aspectMask</code> member of <code>subresourceRange</code> <strong class=\"purple\">must</strong> include at least one <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit or <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-image-03320",
          "text": "If <code>image</code> has a depth/stencil format with both depth and stencil and the <a href=\"#features-separateDepthStencilLayouts\"><code>separateDepthStencilLayouts</code></a> feature is not enabled, then the <code>aspectMask</code> member of <code>subresourceRange</code> <strong class=\"purple\">must</strong> include both <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> and <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-image-03319",
          "text": "If <code>image</code> has a depth/stencil format with both depth and stencil and the <a href=\"#features-separateDepthStencilLayouts\"><code>separateDepthStencilLayouts</code></a> feature is enabled, then the <code>aspectMask</code> member of <code>subresourceRange</code> <strong class=\"purple\">must</strong> include either or both <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> and <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-aspectMask-08702",
          "text": "If the <code>aspectMask</code> member of <code>subresourceRange</code> includes <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>, <code>oldLayout</code> and <code>newLayout</code> <strong class=\"purple\">must</strong> not be one of <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-aspectMask-08703",
          "text": "If the <code>aspectMask</code> member of <code>subresourceRange</code> includes <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>, <code>oldLayout</code> and <code>newLayout</code> <strong class=\"purple\">must</strong> not be one of <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-None-09052",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, and <code>image</code> was created with a sharing mode of <code>VK_SHARING_MODE_CONCURRENT</code>, at least one of <code>srcQueueFamilyIndex</code> and <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_IGNORED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-None-09053",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, and <code>image</code> was created with a sharing mode of <code>VK_SHARING_MODE_CONCURRENT</code>, <code>srcQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_IGNORED</code> or <code>VK_QUEUE_FAMILY_EXTERNAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-None-09054",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, and <code>image</code> was created with a sharing mode of <code>VK_SHARING_MODE_CONCURRENT</code>, <code>dstQueueFamilyIndex</code> <strong class=\"purple\">must</strong> be <code>VK_QUEUE_FAMILY_IGNORED</code> or <code>VK_QUEUE_FAMILY_EXTERNAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkSampleLocationsInfoEXT\">VkSampleLocationsInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-oldLayout-parameter",
          "text": "<code>oldLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-newLayout-parameter",
          "text": "<code>newLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-image-parameter",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryBarrier-subresourceRange-parameter",
          "text": "<code>subresourceRange</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkQueueWaitIdle": {
      "core": [
        {
          "vuid": "VUID-vkQueueWaitIdle-queue-parameter",
          "text": "<code>queue</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueue\">VkQueue</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkDeviceWaitIdle": {
      "core": [
        {
          "vuid": "VUID-vkDeviceWaitIdle-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkGetCalibratedTimestampsEXT": {
      "core": [
        {
          "vuid": "VUID-vkGetCalibratedTimestampsEXT-timeDomain-09246",
          "text": "The <code>timeDomain</code> value of each <a href=\"#VkCalibratedTimestampInfoEXT\">VkCalibratedTimestampInfoEXT</a> in <code>pTimestampInfos</code> <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetCalibratedTimestampsEXT-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetCalibratedTimestampsEXT-pTimestampInfos-parameter",
          "text": "<code>pTimestampInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>timestampCount</code> valid <a href=\"#VkCalibratedTimestampInfoEXT\">VkCalibratedTimestampInfoEXT</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetCalibratedTimestampsEXT-pTimestamps-parameter",
          "text": "<code>pTimestamps</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>timestampCount</code> <code>uint64_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetCalibratedTimestampsEXT-pMaxDeviation-parameter",
          "text": "<code>pMaxDeviation</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint64_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetCalibratedTimestampsEXT-timestampCount-arraylength",
          "text": "<code>timestampCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkCalibratedTimestampInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkCalibratedTimestampInfoEXT-timeDomain-02354",
          "text": "<code>timeDomain</code> <strong class=\"purple\">must</strong> be one of the <a href=\"#VkTimeDomainEXT\">VkTimeDomainEXT</a> values returned by <a href=\"#vkGetPhysicalDeviceCalibrateableTimeDomainsEXT\">vkGetPhysicalDeviceCalibrateableTimeDomainsEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCalibratedTimestampInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCalibratedTimestampInfoEXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCalibratedTimestampInfoEXT-timeDomain-parameter",
          "text": "<code>timeDomain</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkTimeDomainEXT\">VkTimeDomainEXT</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateRenderPass": {
      "core": [
        {
          "vuid": "VUID-vkCreateRenderPass-device-05068",
          "text": "The number of render passes currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of render passes requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>renderPassRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateRenderPass-subpasses-device-05089",
          "text": "The number of subpasses currently allocated from <code>device</code> across all <a href=\"#VkRenderPass\">VkRenderPass</a> objects plus <code>pCreateInfo-&gt;subpassCount</code> <strong class=\"purple\">must</strong> be less than or equal to the total number of subpasses requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>subpassDescriptionRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateRenderPass-attachments-device-05089",
          "text": "The number of attachments currently allocated from <code>device</code> across all <a href=\"#VkRenderPass\">VkRenderPass</a> objects plus <code>pCreateInfo-&gt;attachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to the total number of attachments requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>attachmentDescriptionRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateRenderPass-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateRenderPass-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkRenderPassCreateInfo\">VkRenderPassCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateRenderPass-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateRenderPass-pRenderPass-parameter",
          "text": "<code>pRenderPass</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkRenderPass\">VkRenderPass</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkRenderPassCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkRenderPassCreateInfo-attachment-00834",
          "text": "If the <code>attachment</code> member of any element of <code>pInputAttachments</code>, <code>pColorAttachments</code>, <code>pResolveAttachments</code> or <code>pDepthStencilAttachment</code>, or any element of <code>pPreserveAttachments</code> in any element of <code>pSubpasses</code> is not <code>VK_ATTACHMENT_UNUSED</code>, then it <strong class=\"purple\">must</strong> be less than <code>attachmentCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pAttachments-00836",
          "text": "For any member of <code>pAttachments</code> with a <code>loadOp</code> equal to <code>VK_ATTACHMENT_LOAD_OP_CLEAR</code>, the first use of that attachment <strong class=\"purple\">must</strong> not specify a <code>layout</code> equal to <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pAttachments-02511",
          "text": "For any member of <code>pAttachments</code> with a <code>stencilLoadOp</code> equal to <code>VK_ATTACHMENT_LOAD_OP_CLEAR</code>, the first use of that attachment <strong class=\"purple\">must</strong> not specify a <code>layout</code> equal to <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pAttachments-01566",
          "text": "For any member of <code>pAttachments</code> with a <code>loadOp</code> equal to <code>VK_ATTACHMENT_LOAD_OP_CLEAR</code>, the first use of that attachment <strong class=\"purple\">must</strong> not specify a <code>layout</code> equal to <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pAttachments-01567",
          "text": "For any member of <code>pAttachments</code> with a <code>stencilLoadOp</code> equal to <code>VK_ATTACHMENT_LOAD_OP_CLEAR</code>, the first use of that attachment <strong class=\"purple\">must</strong> not specify a <code>layout</code> equal to <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pNext-01926",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkRenderPassInputAttachmentAspectCreateInfo\">VkRenderPassInputAttachmentAspectCreateInfo</a> structure, the <code>subpass</code> member of each element of its <code>pAspectReferences</code> member <strong class=\"purple\">must</strong> be less than <code>subpassCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pNext-01927",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkRenderPassInputAttachmentAspectCreateInfo\">VkRenderPassInputAttachmentAspectCreateInfo</a> structure, the <code>inputAttachmentIndex</code> member of each element of its <code>pAspectReferences</code> member <strong class=\"purple\">must</strong> be less than the value of <code>inputAttachmentCount</code> in the element of <code>pSubpasses</code> identified by its <code>subpass</code> member",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pNext-01963",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkRenderPassInputAttachmentAspectCreateInfo\">VkRenderPassInputAttachmentAspectCreateInfo</a> structure, for any element of the <code>pInputAttachments</code> member of any element of <code>pSubpasses</code> where the <code>attachment</code> member is not <code>VK_ATTACHMENT_UNUSED</code>, the <code>aspectMask</code> member of the corresponding element of <a href=\"#VkRenderPassInputAttachmentAspectCreateInfo\">VkRenderPassInputAttachmentAspectCreateInfo</a>::<code>pAspectReferences</code> <strong class=\"purple\">must</strong> only include aspects that are present in images of the format specified by the element of <code>pAttachments</code> at <code>attachment</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pNext-01928",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkRenderPassMultiviewCreateInfo\">VkRenderPassMultiviewCreateInfo</a> structure, and its <code>subpassCount</code> member is not zero, that member <strong class=\"purple\">must</strong> be equal to the value of <code>subpassCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pNext-01929",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkRenderPassMultiviewCreateInfo\">VkRenderPassMultiviewCreateInfo</a> structure, if its <code>dependencyCount</code> member is not zero, it <strong class=\"purple\">must</strong> be equal to <code>dependencyCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pNext-01930",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkRenderPassMultiviewCreateInfo\">VkRenderPassMultiviewCreateInfo</a> structure, for each non-zero element of <code>pViewOffsets</code>, the <code>srcSubpass</code> and <code>dstSubpass</code> members of <code>pDependencies</code> at the same index <strong class=\"purple\">must</strong> not be equal",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pNext-02512",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkRenderPassMultiviewCreateInfo\">VkRenderPassMultiviewCreateInfo</a> structure, for any element of <code>pDependencies</code> with a <code>dependencyFlags</code> member that does not include <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>, the corresponding element of the <code>pViewOffsets</code> member of that <a href=\"#VkRenderPassMultiviewCreateInfo\">VkRenderPassMultiviewCreateInfo</a> instance <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pNext-02513",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkRenderPassMultiviewCreateInfo\">VkRenderPassMultiviewCreateInfo</a> structure, elements of its <code>pViewMasks</code> member <strong class=\"purple\">must</strong> either all be <code>0</code>, or all not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pNext-02514",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkRenderPassMultiviewCreateInfo\">VkRenderPassMultiviewCreateInfo</a> structure, and each element of its <code>pViewMasks</code> member is <code>0</code>, the <code>dependencyFlags</code> member of each element of <code>pDependencies</code> <strong class=\"purple\">must</strong> not include <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pNext-02515",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkRenderPassMultiviewCreateInfo\">VkRenderPassMultiviewCreateInfo</a> structure, and each element of its <code>pViewMasks</code> member is <code>0</code>, its <code>correlationMaskCount</code> member <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pDependencies-00837",
          "text": "For any element of <code>pDependencies</code>, if the <code>srcSubpass</code> is not <code>VK_SUBPASS_EXTERNAL</code>, all stage flags included in the <code>srcStageMask</code> member of that dependency <strong class=\"purple\">must</strong> be a pipeline stage supported by the <a href=\"#synchronization-pipeline-stages-types\">pipeline</a> identified by the <code>pipelineBindPoint</code> member of the source subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pDependencies-00838",
          "text": "For any element of <code>pDependencies</code>, if the <code>dstSubpass</code> is not <code>VK_SUBPASS_EXTERNAL</code>, all stage flags included in the <code>dstStageMask</code> member of that dependency <strong class=\"purple\">must</strong> be a pipeline stage supported by the <a href=\"#synchronization-pipeline-stages-types\">pipeline</a> identified by the <code>pipelineBindPoint</code> member of the destination subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pDependencies-06866",
          "text": "For any element of <code>pDependencies</code>, if its <code>srcSubpass</code> is not <code>VK_SUBPASS_EXTERNAL</code>, it <strong class=\"purple\">must</strong> be less than <code>subpassCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pDependencies-06867",
          "text": "For any element of <code>pDependencies</code>, if its <code>dstSubpass</code> is not <code>VK_SUBPASS_EXTERNAL</code>, it <strong class=\"purple\">must</strong> be less than <code>subpassCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-subpassCount-05050",
          "text": "<code>subpassCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxRenderPassSubpasses\">maxRenderPassSubpasses</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-dependencyCount-05051",
          "text": "<code>dependencyCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxRenderPassDependencies\">maxRenderPassDependencies</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-attachmentCount-05052",
          "text": "<code>attachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFramebufferAttachments\">maxFramebufferAttachments</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkRenderPassInputAttachmentAspectCreateInfo\">VkRenderPassInputAttachmentAspectCreateInfo</a> or <a href=\"#VkRenderPassMultiviewCreateInfo\">VkRenderPassMultiviewCreateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pAttachments-parameter",
          "text": "If <code>attachmentCount</code> is not <code>0</code>, <code>pAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>attachmentCount</code> valid <a href=\"#VkAttachmentDescription\">VkAttachmentDescription</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pSubpasses-parameter",
          "text": "<code>pSubpasses</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>subpassCount</code> valid <a href=\"#VkSubpassDescription\">VkSubpassDescription</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-pDependencies-parameter",
          "text": "If <code>dependencyCount</code> is not <code>0</code>, <code>pDependencies</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>dependencyCount</code> valid <a href=\"#VkSubpassDependency\">VkSubpassDependency</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo-subpassCount-arraylength",
          "text": "<code>subpassCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkRenderPassMultiviewCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkRenderPassMultiviewCreateInfo-pCorrelationMasks-00841",
          "text": "Each view index <strong class=\"purple\">must</strong> not be set in more than one element of <code>pCorrelationMasks</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassMultiviewCreateInfo-multiview-06555",
          "text": "If the <a href=\"#features-multiview\"><code>multiview</code></a> feature is not enabled, each element of <code>pViewMasks</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassMultiviewCreateInfo-pViewMasks-06697",
          "text": "The index of the most significant bit in each element of <code>pViewMasks</code> <strong class=\"purple\">must</strong> be less than <a href=\"#limits-maxMultiviewViewCount\"><code>maxMultiviewViewCount</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassMultiviewCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassMultiviewCreateInfo-pViewMasks-parameter",
          "text": "If <code>subpassCount</code> is not <code>0</code>, <code>pViewMasks</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>subpassCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassMultiviewCreateInfo-pViewOffsets-parameter",
          "text": "If <code>dependencyCount</code> is not <code>0</code>, <code>pViewOffsets</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>dependencyCount</code> <code>int32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassMultiviewCreateInfo-pCorrelationMasks-parameter",
          "text": "If <code>correlationMaskCount</code> is not <code>0</code>, <code>pCorrelationMasks</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>correlationMaskCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        }
      ]
    },
    "VkAttachmentDescription": {
      "core": [
        {
          "vuid": "VUID-VkAttachmentDescription-format-06699",
          "text": "If <code>format</code> includes a color or depth component and <code>loadOp</code> is <code>VK_ATTACHMENT_LOAD_OP_LOAD</code>, then <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-finalLayout-00843",
          "text": "<code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code> or <code>VK_IMAGE_LAYOUT_PREINITIALIZED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-03280",
          "text": "If <code>format</code> is a color format, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-03281",
          "text": "If <code>format</code> is a depth/stencil format, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-03282",
          "text": "If <code>format</code> is a color format, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-03283",
          "text": "If <code>format</code> is a depth/stencil format, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-06487",
          "text": "If <code>format</code> is a color format, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-06488",
          "text": "If <code>format</code> is a color format, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-separateDepthStencilLayouts-03284",
          "text": "If the <a href=\"#features-separateDepthStencilLayouts\"><code>separateDepthStencilLayouts</code></a> feature is not enabled, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>,",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-separateDepthStencilLayouts-03285",
          "text": "If the <a href=\"#features-separateDepthStencilLayouts\"><code>separateDepthStencilLayouts</code></a> feature is not enabled, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>,",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-03286",
          "text": "If <code>format</code> is a color format, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-03287",
          "text": "If <code>format</code> is a color format, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-06906",
          "text": "If <code>format</code> is a depth/stencil format which includes both depth and stencil components, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-06907",
          "text": "If <code>format</code> is a depth/stencil format which includes both depth and stencil components, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-03290",
          "text": "If <code>format</code> is a depth/stencil format which includes only the depth component, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-03291",
          "text": "If <code>format</code> is a depth/stencil format which includes only the depth component, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-synchronization2-06908",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR</code> or <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-synchronization2-06909",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR</code> or <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-samples-08745",
          "text": "<code>samples</code> <strong class=\"purple\">must</strong> be a bit value that is set in <code>imageCreateSampleCounts</code> (as defined in <a href=\"#resources-image-creation-limits\">Image Creation Limits</a>) for the given <code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-06698",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> not be VK_FORMAT_UNDEFINED",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-06700",
          "text": "If <code>format</code> includes a stencil component and <code>stencilLoadOp</code> is <code>VK_ATTACHMENT_LOAD_OP_LOAD</code>, then <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-03292",
          "text": "If <code>format</code> is a depth/stencil format which includes only the stencil component, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-03293",
          "text": "If <code>format</code> is a depth/stencil format which includes only the stencil component, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-06242",
          "text": "If <code>format</code> is a depth/stencil format which includes both depth and stencil components, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-06243",
          "text": "If <code>format</code> is a depth/stencil format which includes both depth and stencil components, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAttachmentDescriptionFlagBits\">VkAttachmentDescriptionFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-samples-parameter",
          "text": "<code>samples</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSampleCountFlagBits\">VkSampleCountFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-loadOp-parameter",
          "text": "<code>loadOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkAttachmentLoadOp\">VkAttachmentLoadOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-storeOp-parameter",
          "text": "<code>storeOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkAttachmentStoreOp\">VkAttachmentStoreOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-stencilLoadOp-parameter",
          "text": "<code>stencilLoadOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkAttachmentLoadOp\">VkAttachmentLoadOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-stencilStoreOp-parameter",
          "text": "<code>stencilStoreOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkAttachmentStoreOp\">VkAttachmentStoreOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-initialLayout-parameter",
          "text": "<code>initialLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription-finalLayout-parameter",
          "text": "<code>finalLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkRenderPassInputAttachmentAspectCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkRenderPassInputAttachmentAspectCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassInputAttachmentAspectCreateInfo-pAspectReferences-parameter",
          "text": "<code>pAspectReferences</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>aspectReferenceCount</code> valid <a href=\"#VkInputAttachmentAspectReference\">VkInputAttachmentAspectReference</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassInputAttachmentAspectCreateInfo-aspectReferenceCount-arraylength",
          "text": "<code>aspectReferenceCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkInputAttachmentAspectReference": {
      "core": [
        {
          "vuid": "VUID-VkInputAttachmentAspectReference-aspectMask-01964",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> not include <code>VK_IMAGE_ASPECT_METADATA_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkInputAttachmentAspectReference-aspectMask-02250",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> not include <code>VK_IMAGE_ASPECT_MEMORY_PLANE<em>_i_</em>BIT_EXT</code> for any index <em>i</em>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkInputAttachmentAspectReference-aspectMask-parameter",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageAspectFlagBits\">VkImageAspectFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkInputAttachmentAspectReference-aspectMask-requiredbitmask",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkSubpassDescription": {
      "core": [
        {
          "vuid": "VUID-VkSubpassDescription-attachment-06912",
          "text": "If the <code>attachment</code> member of an element of <code>pInputAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-attachment-06913",
          "text": "If the <code>attachment</code> member of an element of <code>pColorAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-attachment-06914",
          "text": "If the <code>attachment</code> member of an element of <code>pResolveAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-attachment-06915",
          "text": "If the <code>attachment</code> member of <code>pDepthStencilAttachment</code> is not <code>VK_ATTACHMENT_UNUSED</code>, ts <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-attachment-06916",
          "text": "If the <code>attachment</code> member of an element of <code>pColorAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-attachment-06917",
          "text": "If the <code>attachment</code> member of an element of <code>pResolveAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-attachment-06918",
          "text": "If the <code>attachment</code> member of an element of <code>pInputAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-attachment-06919",
          "text": "If the <code>attachment</code> member of an element of <code>pColorAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-attachment-06920",
          "text": "If the <code>attachment</code> member of an element of <code>pResolveAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-attachment-06921",
          "text": "If the <code>attachment</code> member of an element of <code>pInputAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-attachment-06922",
          "text": "If the <code>attachment</code> member of an element of <code>pColorAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-attachment-06923",
          "text": "If the <code>attachment</code> member of an element of <code>pResolveAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pipelineBindPoint-04952",
          "text": "<code>pipelineBindPoint</code> <strong class=\"purple\">must</strong> be <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-colorAttachmentCount-00845",
          "text": "<code>colorAttachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxColorAttachments</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-loadOp-00846",
          "text": "If the first use of an attachment in this render pass is as an input attachment, and the attachment is not also used as a color or depth/stencil attachment in the same subpass, then <code>loadOp</code> <strong class=\"purple\">must</strong> not be <code>VK_ATTACHMENT_LOAD_OP_CLEAR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pResolveAttachments-00847",
          "text": "If <code>pResolveAttachments</code> is not <code>NULL</code>, for each resolve attachment that is not <code>VK_ATTACHMENT_UNUSED</code>, the corresponding color attachment <strong class=\"purple\">must</strong> not be <code>VK_ATTACHMENT_UNUSED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pResolveAttachments-00848",
          "text": "If <code>pResolveAttachments</code> is not <code>NULL</code>, for each resolve attachment that is not <code>VK_ATTACHMENT_UNUSED</code>, the corresponding color attachment <strong class=\"purple\">must</strong> not have a sample count of <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pResolveAttachments-00849",
          "text": "If <code>pResolveAttachments</code> is not <code>NULL</code>, each resolve attachment that is not <code>VK_ATTACHMENT_UNUSED</code> <strong class=\"purple\">must</strong> have a sample count of <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pResolveAttachments-00850",
          "text": "If <code>pResolveAttachments</code> is not <code>NULL</code>, each resolve attachment that is not <code>VK_ATTACHMENT_UNUSED</code> <strong class=\"purple\">must</strong> have the same <a href=\"#VkFormat\">VkFormat</a> as its corresponding color attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pColorAttachments-09430",
          "text": "All attachments in <code>pColorAttachments</code> that are not <code>VK_ATTACHMENT_UNUSED</code> <strong class=\"purple\">must</strong> have the same sample count",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pInputAttachments-02647",
          "text": "All attachments in <code>pInputAttachments</code> that are not <code>VK_ATTACHMENT_UNUSED</code> <strong class=\"purple\">must</strong> have image formats whose <a href=\"#potential-format-features\">potential format features</a> contain at least <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT</code> or <code>VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pColorAttachments-02648",
          "text": "All attachments in <code>pColorAttachments</code> that are not <code>VK_ATTACHMENT_UNUSED</code> <strong class=\"purple\">must</strong> have image formats whose <a href=\"#potential-format-features\">potential format features</a> contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pResolveAttachments-02649",
          "text": "All attachments in <code>pResolveAttachments</code> that are not <code>VK_ATTACHMENT_UNUSED</code> <strong class=\"purple\">must</strong> have image formats whose <a href=\"#potential-format-features\">potential format features</a> contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pDepthStencilAttachment-02650",
          "text": "If <code>pDepthStencilAttachment</code> is not <code>NULL</code> and the attachment is not <code>VK_ATTACHMENT_UNUSED</code> then it <strong class=\"purple\">must</strong> have an image format whose <a href=\"#potential-format-features\">potential format features</a> contain <code>VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pDepthStencilAttachment-01418",
          "text": "If <code>pDepthStencilAttachment</code> is not <code>VK_ATTACHMENT_UNUSED</code> and any attachments in <code>pColorAttachments</code> are not <code>VK_ATTACHMENT_UNUSED</code>, they <strong class=\"purple\">must</strong> have the same sample count",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-attachment-00853",
          "text": "Each element of <code>pPreserveAttachments</code> <strong class=\"purple\">must</strong> not be <code>VK_ATTACHMENT_UNUSED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pPreserveAttachments-00854",
          "text": "Each element of <code>pPreserveAttachments</code> <strong class=\"purple\">must</strong> not also be an element of any other member of the subpass description",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-layout-02519",
          "text": "If any attachment is used by more than one <a href=\"#VkAttachmentReference\">VkAttachmentReference</a> member, then each use <strong class=\"purple\">must</strong> use the same <code>layout</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pDepthStencilAttachment-04438",
          "text": "<code>pDepthStencilAttachment</code> and <code>pColorAttachments</code> must not contain references to the same attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-inputAttachmentCount-05053",
          "text": "<code>inputAttachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxSubpassInputAttachments\">maxSubpassInputAttachments</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-preserveAttachmentCount-05054",
          "text": "<code>preserveAttachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxSubpassPreserveAttachments\">maxSubpassPreserveAttachments</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pipelineBindPoint-parameter",
          "text": "<code>pipelineBindPoint</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineBindPoint\">VkPipelineBindPoint</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pInputAttachments-parameter",
          "text": "If <code>inputAttachmentCount</code> is not <code>0</code>, <code>pInputAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>inputAttachmentCount</code> valid <a href=\"#VkAttachmentReference\">VkAttachmentReference</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pColorAttachments-parameter",
          "text": "If <code>colorAttachmentCount</code> is not <code>0</code>, <code>pColorAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>colorAttachmentCount</code> valid <a href=\"#VkAttachmentReference\">VkAttachmentReference</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pResolveAttachments-parameter",
          "text": "If <code>colorAttachmentCount</code> is not <code>0</code>, and <code>pResolveAttachments</code> is not <code>NULL</code>, <code>pResolveAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>colorAttachmentCount</code> valid <a href=\"#VkAttachmentReference\">VkAttachmentReference</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pDepthStencilAttachment-parameter",
          "text": "If <code>pDepthStencilAttachment</code> is not <code>NULL</code>, <code>pDepthStencilAttachment</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkAttachmentReference\">VkAttachmentReference</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription-pPreserveAttachments-parameter",
          "text": "If <code>preserveAttachmentCount</code> is not <code>0</code>, <code>pPreserveAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>preserveAttachmentCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        }
      ]
    },
    "VkAttachmentReference": {
      "core": [
        {
          "vuid": "VUID-VkAttachmentReference-layout-03077",
          "text": "If <code>attachment</code> is not <code>VK_ATTACHMENT_UNUSED</code>, <code>layout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code>, <code>VK_IMAGE_LAYOUT_PREINITIALIZED</code>, or <code>VK_IMAGE_LAYOUT_PRESENT_SRC_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentReference-separateDepthStencilLayouts-03313",
          "text": "If the <a href=\"#features-separateDepthStencilLayouts\"><code>separateDepthStencilLayouts</code></a> feature is not enabled, and <code>attachment</code> is not <code>VK_ATTACHMENT_UNUSED</code>, <code>layout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>,",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentReference-synchronization2-06910",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>layout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR</code> or <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentReference-layout-parameter",
          "text": "<code>layout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkSubpassDependency": {
      "core": [
        {
          "vuid": "VUID-VkSubpassDependency-srcStageMask-04090",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-srcStageMask-04091",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-srcStageMask-07319",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-srcStageMask-03937",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-dstStageMask-04090",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-dstStageMask-04091",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-dstStageMask-07319",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-dstStageMask-03937",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-srcSubpass-00864",
          "text": "<code>srcSubpass</code> <strong class=\"purple\">must</strong> be less than or equal to <code>dstSubpass</code>, unless one of them is <code>VK_SUBPASS_EXTERNAL</code>, to avoid cyclic dependencies and ensure a valid execution order",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-srcSubpass-00865",
          "text": "<code>srcSubpass</code> and <code>dstSubpass</code> <strong class=\"purple\">must</strong> not both be equal to <code>VK_SUBPASS_EXTERNAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-srcSubpass-06809",
          "text": "If <code>srcSubpass</code> is equal to <code>dstSubpass</code> and <code>srcStageMask</code> includes a <a href=\"#synchronization-framebuffer-regions\">framebuffer-space stage</a>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> only contain <a href=\"#synchronization-framebuffer-regions\">framebuffer-space stages</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-srcAccessMask-00868",
          "text": "Any access flag included in <code>srcAccessMask</code> <strong class=\"purple\">must</strong> be supported by one of the pipeline stages in <code>srcStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-dstAccessMask-00869",
          "text": "Any access flag included in <code>dstAccessMask</code> <strong class=\"purple\">must</strong> be supported by one of the pipeline stages in <code>dstStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-srcSubpass-02243",
          "text": "If <code>srcSubpass</code> equals <code>dstSubpass</code>, and <code>srcStageMask</code> and <code>dstStageMask</code> both include a <a href=\"#synchronization-framebuffer-regions\">framebuffer-space stage</a>, then <code>dependencyFlags</code> <strong class=\"purple\">must</strong> include <code>VK_DEPENDENCY_BY_REGION_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-dependencyFlags-02520",
          "text": "If <code>dependencyFlags</code> includes <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>, <code>srcSubpass</code> <strong class=\"purple\">must</strong> not be equal to <code>VK_SUBPASS_EXTERNAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-dependencyFlags-02521",
          "text": "If <code>dependencyFlags</code> includes <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>, <code>dstSubpass</code> <strong class=\"purple\">must</strong> not be equal to <code>VK_SUBPASS_EXTERNAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-srcSubpass-00872",
          "text": "If <code>srcSubpass</code> equals <code>dstSubpass</code> and that subpass has more than one bit set in the view mask, then <code>dependencyFlags</code> <strong class=\"purple\">must</strong> include <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-srcStageMask-parameter",
          "text": "<code>srcStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits\">VkPipelineStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-dstStageMask-parameter",
          "text": "<code>dstStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits\">VkPipelineStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-srcAccessMask-parameter",
          "text": "<code>srcAccessMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAccessFlagBits\">VkAccessFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-dstAccessMask-parameter",
          "text": "<code>dstAccessMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAccessFlagBits\">VkAccessFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency-dependencyFlags-parameter",
          "text": "<code>dependencyFlags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkDependencyFlagBits\">VkDependencyFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateRenderPass2": {
      "core": [
        {
          "vuid": "VUID-vkCreateRenderPass2-device-05068",
          "text": "The number of render passes currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of render passes requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>renderPassRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateRenderPass2-subpasses-device-05089",
          "text": "The number of subpasses currently allocated from <code>device</code> across all <a href=\"#VkRenderPass\">VkRenderPass</a> objects plus <code>pCreateInfo-&gt;subpassCount</code> <strong class=\"purple\">must</strong> be less than or equal to the total number of subpasses requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>subpassDescriptionRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateRenderPass2-attachments-device-05089",
          "text": "The number of attachments currently allocated from <code>device</code> across all <a href=\"#VkRenderPass\">VkRenderPass</a> objects plus <code>pCreateInfo-&gt;attachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to the total number of attachments requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>attachmentDescriptionRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateRenderPass2-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateRenderPass2-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkRenderPassCreateInfo2\">VkRenderPassCreateInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateRenderPass2-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateRenderPass2-pRenderPass-parameter",
          "text": "<code>pRenderPass</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkRenderPass\">VkRenderPass</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkRenderPassCreateInfo2": {
      "core": [
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-None-03049",
          "text": "If any two subpasses operate on attachments with overlapping ranges of the same <code>VkDeviceMemory</code> object, and at least one subpass writes to that area of <code>VkDeviceMemory</code>, a subpass dependency <strong class=\"purple\">must</strong> be included (either directly or via some intermediate subpasses) between them",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-attachment-03050",
          "text": "If the <code>attachment</code> member of any element of <code>pInputAttachments</code>, <code>pColorAttachments</code>, <code>pResolveAttachments</code> or <code>pDepthStencilAttachment</code>, or the attachment indexed by any element of <code>pPreserveAttachments</code> in any element of <code>pSubpasses</code> is bound to a range of a <code>VkDeviceMemory</code> object that overlaps with any other attachment in any subpass (including the same subpass), the <code>VkAttachmentDescription2</code> structures describing them <strong class=\"purple\">must</strong> include <code>VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT</code> in <code>flags</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-attachment-03051",
          "text": "If the <code>attachment</code> member of any element of <code>pInputAttachments</code>, <code>pColorAttachments</code>, <code>pResolveAttachments</code> or <code>pDepthStencilAttachment</code>, or any element of <code>pPreserveAttachments</code> in any element of <code>pSubpasses</code> is not <code>VK_ATTACHMENT_UNUSED</code>, then it <strong class=\"purple\">must</strong> be less than <code>attachmentCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pSubpasses-06473",
          "text": "If the <code>pSubpasses</code> pNext chain includes a <a href=\"#VkSubpassDescriptionDepthStencilResolve\">VkSubpassDescriptionDepthStencilResolve</a> structure and the <code>pDepthStencilResolveAttachment</code> member is not <code>NULL</code> and does not have the value <code>VK_ATTACHMENT_UNUSED</code>, then <code>attachment</code> <strong class=\"purple\">must</strong> be less than <code>attachmentCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pAttachments-02522",
          "text": "For any member of <code>pAttachments</code> with a <code>loadOp</code> equal to <code>VK_ATTACHMENT_LOAD_OP_CLEAR</code>, the first use of that attachment <strong class=\"purple\">must</strong> not specify a <code>layout</code> equal to <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pAttachments-02523",
          "text": "For any member of <code>pAttachments</code> with a <code>stencilLoadOp</code> equal to <code>VK_ATTACHMENT_LOAD_OP_CLEAR</code>, the first use of that attachment <strong class=\"purple\">must</strong> not specify a <code>layout</code> equal to <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pDependencies-03054",
          "text": "For any element of <code>pDependencies</code>, if the <code>srcSubpass</code> is not <code>VK_SUBPASS_EXTERNAL</code>, all stage flags included in the <code>srcStageMask</code> member of that dependency <strong class=\"purple\">must</strong> be a pipeline stage supported by the <a href=\"#synchronization-pipeline-stages-types\">pipeline</a> identified by the <code>pipelineBindPoint</code> member of the source subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pDependencies-03055",
          "text": "For any element of <code>pDependencies</code>, if the <code>dstSubpass</code> is not <code>VK_SUBPASS_EXTERNAL</code>, all stage flags included in the <code>dstStageMask</code> member of that dependency <strong class=\"purple\">must</strong> be a pipeline stage supported by the <a href=\"#synchronization-pipeline-stages-types\">pipeline</a> identified by the <code>pipelineBindPoint</code> member of the destination subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pCorrelatedViewMasks-03056",
          "text": "The set of bits included in any element of <code>pCorrelatedViewMasks</code> <strong class=\"purple\">must</strong> not overlap with the set of bits included in any other element of <code>pCorrelatedViewMasks</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-viewMask-03057",
          "text": "If the <a href=\"#VkSubpassDescription2\">VkSubpassDescription2</a>::<code>viewMask</code> member of all elements of <code>pSubpasses</code> is <code>0</code>, <code>correlatedViewMaskCount</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-viewMask-03058",
          "text": "The <a href=\"#VkSubpassDescription2\">VkSubpassDescription2</a>::<code>viewMask</code> member of all elements of <code>pSubpasses</code> <strong class=\"purple\">must</strong> either all be <code>0</code>, or all not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-viewMask-03059",
          "text": "If the <a href=\"#VkSubpassDescription2\">VkSubpassDescription2</a>::<code>viewMask</code> member of all elements of <code>pSubpasses</code> is <code>0</code>, the <code>dependencyFlags</code> member of any element of <code>pDependencies</code> <strong class=\"purple\">must</strong> not include <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pDependencies-03060",
          "text": "For any element of <code>pDependencies</code> where its <code>srcSubpass</code> member equals its <code>dstSubpass</code> member, if the <code>viewMask</code> member of the corresponding element of <code>pSubpasses</code> includes more than one bit, its <code>dependencyFlags</code> member <strong class=\"purple\">must</strong> include <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-attachment-02525",
          "text": "If the <code>attachment</code> member of any element of the <code>pInputAttachments</code> member of any element of <code>pSubpasses</code> is not <code>VK_ATTACHMENT_UNUSED</code>, the <code>aspectMask</code> member of that element of <code>pInputAttachments</code> <strong class=\"purple\">must</strong> only include aspects that are present in images of the format specified by the element of <code>pAttachments</code> specified by <code>attachment</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-srcSubpass-02526",
          "text": "The <code>srcSubpass</code> member of each element of <code>pDependencies</code> <strong class=\"purple\">must</strong> be less than <code>subpassCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-dstSubpass-02527",
          "text": "The <code>dstSubpass</code> member of each element of <code>pDependencies</code> <strong class=\"purple\">must</strong> be less than <code>subpassCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pAttachments-04585",
          "text": "If any element of <code>pAttachments</code> is used as a fragment shading rate attachment in any subpass, it <strong class=\"purple\">must</strong> not be used as any other attachment in the render pass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pAttachments-09387",
          "text": "If any element of <code>pAttachments</code> is used as a fragment shading rate attachment, the <code>loadOp</code> for that attachment <strong class=\"purple\">must</strong> not be <code>VK_ATTACHMENT_LOAD_OP_CLEAR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pAttachments-04586",
          "text": "If any element of <code>pAttachments</code> is used as a fragment shading rate attachment in any subpass, it <strong class=\"purple\">must</strong> have an image format whose <a href=\"#potential-format-features\">potential format features</a> contain <code>VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-subpassCount-05055",
          "text": "<code>subpassCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxRenderPassSubpasses\">maxRenderPassSubpasses</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-dependencyCount-05056",
          "text": "<code>dependencyCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxRenderPassDependencies\">maxRenderPassDependencies</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-attachmentCount-05057",
          "text": "<code>attachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFramebufferAttachments\">maxFramebufferAttachments</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-attachment-06244",
          "text": "If the <code>attachment</code> member of the <code>pDepthStencilAttachment</code> member of an element of <code>pSubpasses</code> is not <code>VK_ATTACHMENT_UNUSED</code>, the <code>layout</code> member of that same structure is either <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, and the <code>pNext</code> chain of that structure does not include a <a href=\"#VkAttachmentReferenceStencilLayout\">VkAttachmentReferenceStencilLayout</a> structure, then the element of <code>pAttachments</code> with an index equal to <code>attachment</code> <strong class=\"purple\">must</strong> not have a <code>format</code> that includes both depth and stencil components",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-attachment-06245",
          "text": "If the <code>attachment</code> member of the <code>pDepthStencilAttachment</code> member of an element of <code>pSubpasses</code> is not <code>VK_ATTACHMENT_UNUSED</code> and the <code>layout</code> member of that same structure is either <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>, then the element of <code>pAttachments</code> with an index equal to <code>attachment</code> <strong class=\"purple\">must</strong> have a <code>format</code> that includes only a stencil component",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-attachment-06246",
          "text": "If the <code>attachment</code> member of the <code>pDepthStencilAttachment</code> member of an element of <code>pSubpasses</code> is not <code>VK_ATTACHMENT_UNUSED</code> and the <code>layout</code> member of that same structure is either <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, then the element of <code>pAttachments</code> with an index equal to <code>attachment</code> <strong class=\"purple\">must</strong> not have a <code>format</code> that includes only a stencil component",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pAttachments-parameter",
          "text": "If <code>attachmentCount</code> is not <code>0</code>, <code>pAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>attachmentCount</code> valid <a href=\"#VkAttachmentDescription2\">VkAttachmentDescription2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pSubpasses-parameter",
          "text": "<code>pSubpasses</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>subpassCount</code> valid <a href=\"#VkSubpassDescription2\">VkSubpassDescription2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pDependencies-parameter",
          "text": "If <code>dependencyCount</code> is not <code>0</code>, <code>pDependencies</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>dependencyCount</code> valid <a href=\"#VkSubpassDependency2\">VkSubpassDependency2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-pCorrelatedViewMasks-parameter",
          "text": "If <code>correlatedViewMaskCount</code> is not <code>0</code>, <code>pCorrelatedViewMasks</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>correlatedViewMaskCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassCreateInfo2-subpassCount-arraylength",
          "text": "<code>subpassCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkAttachmentDescription2": {
      "core": [
        {
          "vuid": "VUID-VkAttachmentDescription2-format-06699",
          "text": "If <code>format</code> includes a color or depth component and <code>loadOp</code> is <code>VK_ATTACHMENT_LOAD_OP_LOAD</code>, then <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-finalLayout-00843",
          "text": "<code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code> or <code>VK_IMAGE_LAYOUT_PREINITIALIZED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-03280",
          "text": "If <code>format</code> is a color format, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-03281",
          "text": "If <code>format</code> is a depth/stencil format, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-03282",
          "text": "If <code>format</code> is a color format, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-03283",
          "text": "If <code>format</code> is a depth/stencil format, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-06487",
          "text": "If <code>format</code> is a color format, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-06488",
          "text": "If <code>format</code> is a color format, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-separateDepthStencilLayouts-03284",
          "text": "If the <a href=\"#features-separateDepthStencilLayouts\"><code>separateDepthStencilLayouts</code></a> feature is not enabled, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>,",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-separateDepthStencilLayouts-03285",
          "text": "If the <a href=\"#features-separateDepthStencilLayouts\"><code>separateDepthStencilLayouts</code></a> feature is not enabled, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>,",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-03286",
          "text": "If <code>format</code> is a color format, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-03287",
          "text": "If <code>format</code> is a color format, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-06906",
          "text": "If <code>format</code> is a depth/stencil format which includes both depth and stencil components, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-06907",
          "text": "If <code>format</code> is a depth/stencil format which includes both depth and stencil components, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-03290",
          "text": "If <code>format</code> is a depth/stencil format which includes only the depth component, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-03291",
          "text": "If <code>format</code> is a depth/stencil format which includes only the depth component, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-synchronization2-06908",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR</code> or <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-synchronization2-06909",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR</code> or <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-samples-08745",
          "text": "<code>samples</code> <strong class=\"purple\">must</strong> be a bit value that is set in <code>imageCreateSampleCounts</code> (as defined in <a href=\"#resources-image-creation-limits\">Image Creation Limits</a>) for the given <code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-pNext-06704",
          "text": "If the <code>pNext</code> chain does not include a <a href=\"#VkAttachmentDescriptionStencilLayout\">VkAttachmentDescriptionStencilLayout</a> structure, <code>format</code> includes a stencil component, and <code>stencilLoadOp</code> is <code>VK_ATTACHMENT_LOAD_OP_LOAD</code>, then <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-pNext-06705",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkAttachmentDescriptionStencilLayout\">VkAttachmentDescriptionStencilLayout</a> structure, <code>format</code> includes a stencil component, and <code>stencilLoadOp</code> is <code>VK_ATTACHMENT_LOAD_OP_LOAD</code>, then <a href=\"#VkAttachmentDescriptionStencilLayout\">VkAttachmentDescriptionStencilLayout</a>::<code>stencilInitialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-06249",
          "text": "If <code>format</code> is a depth/stencil format which includes both depth and stencil components, and <code>initialLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, the <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkAttachmentDescriptionStencilLayout\">VkAttachmentDescriptionStencilLayout</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-06250",
          "text": "If <code>format</code> is a depth/stencil format which includes both depth and stencil components, and <code>finalLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, the <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkAttachmentDescriptionStencilLayout\">VkAttachmentDescriptionStencilLayout</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-06247",
          "text": "If the <code>pNext</code> chain does not include a <a href=\"#VkAttachmentDescriptionStencilLayout\">VkAttachmentDescriptionStencilLayout</a> structure and <code>format</code> only includes a stencil component, <code>initialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-06248",
          "text": "If the <code>pNext</code> chain does not include a <a href=\"#VkAttachmentDescriptionStencilLayout\">VkAttachmentDescriptionStencilLayout</a> structure and <code>format</code> only includes a stencil component, <code>finalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-09332",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> not be <code>VK_FORMAT_UNDEFINED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkAttachmentDescriptionStencilLayout\">VkAttachmentDescriptionStencilLayout</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAttachmentDescriptionFlagBits\">VkAttachmentDescriptionFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-samples-parameter",
          "text": "<code>samples</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSampleCountFlagBits\">VkSampleCountFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-loadOp-parameter",
          "text": "<code>loadOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkAttachmentLoadOp\">VkAttachmentLoadOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-storeOp-parameter",
          "text": "<code>storeOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkAttachmentStoreOp\">VkAttachmentStoreOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-stencilLoadOp-parameter",
          "text": "<code>stencilLoadOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkAttachmentLoadOp\">VkAttachmentLoadOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-stencilStoreOp-parameter",
          "text": "<code>stencilStoreOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkAttachmentStoreOp\">VkAttachmentStoreOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-initialLayout-parameter",
          "text": "<code>initialLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescription2-finalLayout-parameter",
          "text": "<code>finalLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkAttachmentDescriptionStencilLayout": {
      "core": [
        {
          "vuid": "VUID-VkAttachmentDescriptionStencilLayout-stencilInitialLayout-03308",
          "text": "<code>stencilInitialLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescriptionStencilLayout-stencilFinalLayout-03309",
          "text": "<code>stencilFinalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescriptionStencilLayout-stencilFinalLayout-03310",
          "text": "<code>stencilFinalLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code> or <code>VK_IMAGE_LAYOUT_PREINITIALIZED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescriptionStencilLayout-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescriptionStencilLayout-stencilInitialLayout-parameter",
          "text": "<code>stencilInitialLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentDescriptionStencilLayout-stencilFinalLayout-parameter",
          "text": "<code>stencilFinalLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkSubpassDescription2": {
      "core": [
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06912",
          "text": "If the <code>attachment</code> member of an element of <code>pInputAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06913",
          "text": "If the <code>attachment</code> member of an element of <code>pColorAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06914",
          "text": "If the <code>attachment</code> member of an element of <code>pResolveAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06915",
          "text": "If the <code>attachment</code> member of <code>pDepthStencilAttachment</code> is not <code>VK_ATTACHMENT_UNUSED</code>, ts <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06916",
          "text": "If the <code>attachment</code> member of an element of <code>pColorAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06917",
          "text": "If the <code>attachment</code> member of an element of <code>pResolveAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06918",
          "text": "If the <code>attachment</code> member of an element of <code>pInputAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06919",
          "text": "If the <code>attachment</code> member of an element of <code>pColorAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06920",
          "text": "If the <code>attachment</code> member of an element of <code>pResolveAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06921",
          "text": "If the <code>attachment</code> member of an element of <code>pInputAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06922",
          "text": "If the <code>attachment</code> member of an element of <code>pColorAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06923",
          "text": "If the <code>attachment</code> member of an element of <code>pResolveAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-06251",
          "text": "If the <code>attachment</code> member of <code>pDepthStencilAttachment</code> is not <code>VK_ATTACHMENT_UNUSED</code> and its <code>pNext</code> chain includes a <a href=\"#VkAttachmentReferenceStencilLayout\">VkAttachmentReferenceStencilLayout</a> structure, the <code>layout</code> member of <code>pDepthStencilAttachment</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pipelineBindPoint-04953",
          "text": "<code>pipelineBindPoint</code> <strong class=\"purple\">must</strong> be <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-colorAttachmentCount-03063",
          "text": "<code>colorAttachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxColorAttachments</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-loadOp-03064",
          "text": "If the first use of an attachment in this render pass is as an input attachment, and the attachment is not also used as a color or depth/stencil attachment in the same subpass, then <code>loadOp</code> <strong class=\"purple\">must</strong> not be <code>VK_ATTACHMENT_LOAD_OP_CLEAR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pResolveAttachments-03065",
          "text": "If <code>pResolveAttachments</code> is not <code>NULL</code>, for each resolve attachment that does not have the value <code>VK_ATTACHMENT_UNUSED</code>, the corresponding color attachment <strong class=\"purple\">must</strong> not have the value <code>VK_ATTACHMENT_UNUSED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pResolveAttachments-03066",
          "text": "If <code>pResolveAttachments</code> is not <code>NULL</code>, for each resolve attachment that is not <code>VK_ATTACHMENT_UNUSED</code>, the corresponding color attachment <strong class=\"purple\">must</strong> not have a sample count of <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pResolveAttachments-03068",
          "text": "Each element of <code>pResolveAttachments</code> <strong class=\"purple\">must</strong> have the same <a href=\"#VkFormat\">VkFormat</a> as its corresponding color attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pResolveAttachments-03067",
          "text": "If <code>pResolveAttachments</code> is not <code>NULL</code>, each resolve attachment that is not <code>VK_ATTACHMENT_UNUSED</code> <strong class=\"purple\">must</strong> have a sample count of <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pInputAttachments-02897",
          "text": "All attachments in <code>pInputAttachments</code> that are not <code>VK_ATTACHMENT_UNUSED</code><div class=\"paragraph\">\n<p><strong class=\"purple\">must</strong> have image formats whose <a href=\"#potential-format-features\">potential format\n    features</a> contain at least <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT</code>\n    or <code>VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT</code></p>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pColorAttachments-02898",
          "text": "All attachments in <code>pColorAttachments</code> that are not <code>VK_ATTACHMENT_UNUSED</code> <strong class=\"purple\">must</strong> have image formats whose <a href=\"#potential-format-features\">potential format features</a> contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pResolveAttachments-02899",
          "text": "All attachments in <code>pResolveAttachments</code> that are not <code>VK_ATTACHMENT_UNUSED</code> <strong class=\"purple\">must</strong> have image formats whose <a href=\"#potential-format-features\">potential format features</a> contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pDepthStencilAttachment-02900",
          "text": "If <code>pDepthStencilAttachment</code> is not <code>NULL</code> and the attachment is not <code>VK_ATTACHMENT_UNUSED</code> then it <strong class=\"purple\">must</strong> have an image format whose <a href=\"#potential-format-features\">potential format features</a> contain <code>VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-multisampledRenderToSingleSampled-06872",
          "text": "All attachments in <code>pDepthStencilAttachment</code> or <code>pColorAttachments</code> that are not <code>VK_ATTACHMENT_UNUSED</code> <strong class=\"purple\">must</strong> have the same sample count",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-03073",
          "text": "Each element of <code>pPreserveAttachments</code> <strong class=\"purple\">must</strong> not be <code>VK_ATTACHMENT_UNUSED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pPreserveAttachments-03074",
          "text": "Each element of <code>pPreserveAttachments</code> <strong class=\"purple\">must</strong> not also be an element of any other member of the subpass description",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-layout-02528",
          "text": "If any attachment is used by more than one <a href=\"#VkAttachmentReference2\">VkAttachmentReference2</a> member, then each use <strong class=\"purple\">must</strong> use the same <code>layout</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-02799",
          "text": "If the <code>attachment</code> member of any element of <code>pInputAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, then the <code>aspectMask</code> member <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageAspectFlagBits\">VkImageAspectFlagBits</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-02800",
          "text": "If the <code>attachment</code> member of any element of <code>pInputAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, then the <code>aspectMask</code> member <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-02801",
          "text": "If the <code>attachment</code> member of any element of <code>pInputAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, then the <code>aspectMask</code> member <strong class=\"purple\">must</strong> not include <code>VK_IMAGE_ASPECT_METADATA_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-attachment-04563",
          "text": "If the <code>attachment</code> member of any element of <code>pInputAttachments</code> is not <code>VK_ATTACHMENT_UNUSED</code>, then the <code>aspectMask</code> member <strong class=\"purple\">must</strong> not include <code>VK_IMAGE_ASPECT_MEMORY_PLANE<em>_i_</em>BIT_EXT</code> for any index <em>i</em>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pDepthStencilAttachment-04440",
          "text": "An attachment <strong class=\"purple\">must</strong> not be used in both <code>pDepthStencilAttachment</code> and <code>pColorAttachments</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-inputAttachmentCount-05058",
          "text": "<code>inputAttachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxSubpassInputAttachments\">maxSubpassInputAttachments</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-preserveAttachmentCount-05059",
          "text": "<code>preserveAttachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxSubpassPreserveAttachments\">maxSubpassPreserveAttachments</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-multiview-06558",
          "text": "If the <a href=\"#features-multiview\"><code>multiview</code></a> feature is not enabled, <code>viewMask</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-viewMask-06706",
          "text": "The index of the most significant bit in <code>viewMask</code> <strong class=\"purple\">must</strong> be less than <a href=\"#limits-maxMultiviewViewCount\"><code>maxMultiviewViewCount</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkFragmentShadingRateAttachmentInfoKHR\">VkFragmentShadingRateAttachmentInfoKHR</a> or <a href=\"#VkSubpassDescriptionDepthStencilResolve\">VkSubpassDescriptionDepthStencilResolve</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pipelineBindPoint-parameter",
          "text": "<code>pipelineBindPoint</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineBindPoint\">VkPipelineBindPoint</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pInputAttachments-parameter",
          "text": "If <code>inputAttachmentCount</code> is not <code>0</code>, <code>pInputAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>inputAttachmentCount</code> valid <a href=\"#VkAttachmentReference2\">VkAttachmentReference2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pColorAttachments-parameter",
          "text": "If <code>colorAttachmentCount</code> is not <code>0</code>, <code>pColorAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>colorAttachmentCount</code> valid <a href=\"#VkAttachmentReference2\">VkAttachmentReference2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pResolveAttachments-parameter",
          "text": "If <code>colorAttachmentCount</code> is not <code>0</code>, and <code>pResolveAttachments</code> is not <code>NULL</code>, <code>pResolveAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>colorAttachmentCount</code> valid <a href=\"#VkAttachmentReference2\">VkAttachmentReference2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pDepthStencilAttachment-parameter",
          "text": "If <code>pDepthStencilAttachment</code> is not <code>NULL</code>, <code>pDepthStencilAttachment</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkAttachmentReference2\">VkAttachmentReference2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescription2-pPreserveAttachments-parameter",
          "text": "If <code>preserveAttachmentCount</code> is not <code>0</code>, <code>pPreserveAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>preserveAttachmentCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        }
      ]
    },
    "VkSubpassDescriptionDepthStencilResolve": {
      "core": [
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-pDepthStencilResolveAttachment-03177",
          "text": "If <code>pDepthStencilResolveAttachment</code> is not <code>NULL</code> and does not have the value <code>VK_ATTACHMENT_UNUSED</code>, <code>pDepthStencilAttachment</code> <strong class=\"purple\">must</strong> not be <code>NULL</code> or have the value <code>VK_ATTACHMENT_UNUSED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-pDepthStencilResolveAttachment-03179",
          "text": "If <code>pDepthStencilResolveAttachment</code> is not <code>NULL</code> and does not have the value <code>VK_ATTACHMENT_UNUSED</code>, <code>pDepthStencilAttachment</code> <strong class=\"purple\">must</strong> not have a sample count of <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-pDepthStencilResolveAttachment-03180",
          "text": "If <code>pDepthStencilResolveAttachment</code> is not <code>NULL</code> and does not have the value <code>VK_ATTACHMENT_UNUSED</code>, <code>pDepthStencilResolveAttachment</code> <strong class=\"purple\">must</strong> have a sample count of <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-pDepthStencilResolveAttachment-02651",
          "text": "If <code>pDepthStencilResolveAttachment</code> is not <code>NULL</code> and does not have the value <code>VK_ATTACHMENT_UNUSED</code> then it <strong class=\"purple\">must</strong> have an image format whose <a href=\"#potential-format-features\">potential format features</a> contain <code>VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-pDepthStencilResolveAttachment-03181",
          "text": "If <code>pDepthStencilResolveAttachment</code> is not <code>NULL</code> and does not have the value <code>VK_ATTACHMENT_UNUSED</code> and <a href=\"#VkFormat\">VkFormat</a> of <code>pDepthStencilResolveAttachment</code> has a depth component, then the <a href=\"#VkFormat\">VkFormat</a> of <code>pDepthStencilAttachment</code> <strong class=\"purple\">must</strong> have a depth component with the same number of bits and <a href=\"#formats-numericformat\">numeric format</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-pDepthStencilResolveAttachment-03182",
          "text": "If <code>pDepthStencilResolveAttachment</code> is not <code>NULL</code> and does not have the value <code>VK_ATTACHMENT_UNUSED</code>, and <a href=\"#VkFormat\">VkFormat</a> of <code>pDepthStencilResolveAttachment</code> has a stencil component, then the <a href=\"#VkFormat\">VkFormat</a> of <code>pDepthStencilAttachment</code> <strong class=\"purple\">must</strong> have a stencil component with the same number of bits and <a href=\"#formats-numericformat\">numeric format</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-pDepthStencilResolveAttachment-03178",
          "text": "If <code>pDepthStencilResolveAttachment</code> is not <code>NULL</code> and does not have the value <code>VK_ATTACHMENT_UNUSED</code>, <code>depthResolveMode</code> and <code>stencilResolveMode</code> <strong class=\"purple\">must</strong> not both be <code>VK_RESOLVE_MODE_NONE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-depthResolveMode-03183",
          "text": "If <code>pDepthStencilResolveAttachment</code> is not <code>NULL</code> and does not have the value <code>VK_ATTACHMENT_UNUSED</code> and the <a href=\"#VkFormat\">VkFormat</a> of <code>pDepthStencilResolveAttachment</code> has a depth component, then the value of <code>depthResolveMode</code> <strong class=\"purple\">must</strong> be one of the bits set in <a href=\"#VkPhysicalDeviceDepthStencilResolveProperties\">VkPhysicalDeviceDepthStencilResolveProperties</a>::<code>supportedDepthResolveModes</code> or <code>VK_RESOLVE_MODE_NONE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-stencilResolveMode-03184",
          "text": "If <code>pDepthStencilResolveAttachment</code> is not <code>NULL</code> and does not have the value <code>VK_ATTACHMENT_UNUSED</code> and the <a href=\"#VkFormat\">VkFormat</a> of <code>pDepthStencilResolveAttachment</code> has a stencil component, then the value of <code>stencilResolveMode</code> <strong class=\"purple\">must</strong> be one of the bits set in <a href=\"#VkPhysicalDeviceDepthStencilResolveProperties\">VkPhysicalDeviceDepthStencilResolveProperties</a>::<code>supportedStencilResolveModes</code> or <code>VK_RESOLVE_MODE_NONE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-pDepthStencilResolveAttachment-03185",
          "text": "If <code>pDepthStencilResolveAttachment</code> is not <code>NULL</code> and does not have the value <code>VK_ATTACHMENT_UNUSED</code>, the <a href=\"#VkFormat\">VkFormat</a> of <code>pDepthStencilResolveAttachment</code> has both depth and stencil components, <a href=\"#VkPhysicalDeviceDepthStencilResolveProperties\">VkPhysicalDeviceDepthStencilResolveProperties</a>::<code>independentResolve</code> is <code>VK_FALSE</code>, and <a href=\"#VkPhysicalDeviceDepthStencilResolveProperties\">VkPhysicalDeviceDepthStencilResolveProperties</a>::<code>independentResolveNone</code> is <code>VK_FALSE</code>, then the values of <code>depthResolveMode</code> and <code>stencilResolveMode</code> <strong class=\"purple\">must</strong> be identical",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-pDepthStencilResolveAttachment-03186",
          "text": "If <code>pDepthStencilResolveAttachment</code> is not <code>NULL</code> and does not have the value <code>VK_ATTACHMENT_UNUSED</code>, the <a href=\"#VkFormat\">VkFormat</a> of <code>pDepthStencilResolveAttachment</code> has both depth and stencil components, <a href=\"#VkPhysicalDeviceDepthStencilResolveProperties\">VkPhysicalDeviceDepthStencilResolveProperties</a>::<code>independentResolve</code> is <code>VK_FALSE</code> and <a href=\"#VkPhysicalDeviceDepthStencilResolveProperties\">VkPhysicalDeviceDepthStencilResolveProperties</a>::<code>independentResolveNone</code> is <code>VK_TRUE</code>, then the values of <code>depthResolveMode</code> and <code>stencilResolveMode</code> <strong class=\"purple\">must</strong> be identical or one of them <strong class=\"purple\">must</strong> be <code>VK_RESOLVE_MODE_NONE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDescriptionDepthStencilResolve-pDepthStencilResolveAttachment-parameter",
          "text": "If <code>pDepthStencilResolveAttachment</code> is not <code>NULL</code>, <code>pDepthStencilResolveAttachment</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkAttachmentReference2\">VkAttachmentReference2</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkFragmentShadingRateAttachmentInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkFragmentShadingRateAttachmentInfoKHR-pFragmentShadingRateAttachment-04524",
          "text": "If <code>pFragmentShadingRateAttachment</code> is not <code>NULL</code> and its <code>attachment</code> member is not <code>VK_ATTACHMENT_UNUSED</code>, its <code>layout</code> member <strong class=\"purple\">must</strong> be equal to <code>VK_IMAGE_LAYOUT_GENERAL</code> or <code>VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFragmentShadingRateAttachmentInfoKHR-pFragmentShadingRateAttachment-04525",
          "text": "If <code>pFragmentShadingRateAttachment</code> is not <code>NULL</code> and its <code>attachment</code> member is not <code>VK_ATTACHMENT_UNUSED</code>, <code>shadingRateAttachmentTexelSize.width</code> <strong class=\"purple\">must</strong> be a power of two value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFragmentShadingRateAttachmentInfoKHR-pFragmentShadingRateAttachment-04526",
          "text": "If <code>pFragmentShadingRateAttachment</code> is not <code>NULL</code> and its <code>attachment</code> member is not <code>VK_ATTACHMENT_UNUSED</code>, <code>shadingRateAttachmentTexelSize.width</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFragmentShadingRateAttachmentTexelSize\"><code>maxFragmentShadingRateAttachmentTexelSize.width</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFragmentShadingRateAttachmentInfoKHR-pFragmentShadingRateAttachment-04527",
          "text": "If <code>pFragmentShadingRateAttachment</code> is not <code>NULL</code> and its <code>attachment</code> member is not <code>VK_ATTACHMENT_UNUSED</code>, <code>shadingRateAttachmentTexelSize.width</code> <strong class=\"purple\">must</strong> be greater than or equal to <a href=\"#limits-minFragmentShadingRateAttachmentTexelSize\"><code>minFragmentShadingRateAttachmentTexelSize.width</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFragmentShadingRateAttachmentInfoKHR-pFragmentShadingRateAttachment-04528",
          "text": "If <code>pFragmentShadingRateAttachment</code> is not <code>NULL</code> and its <code>attachment</code> member is not <code>VK_ATTACHMENT_UNUSED</code>, <code>shadingRateAttachmentTexelSize.height</code> <strong class=\"purple\">must</strong> be a power of two value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFragmentShadingRateAttachmentInfoKHR-pFragmentShadingRateAttachment-04529",
          "text": "If <code>pFragmentShadingRateAttachment</code> is not <code>NULL</code> and its <code>attachment</code> member is not <code>VK_ATTACHMENT_UNUSED</code>, <code>shadingRateAttachmentTexelSize.height</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFragmentShadingRateAttachmentTexelSize\"><code>maxFragmentShadingRateAttachmentTexelSize.height</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFragmentShadingRateAttachmentInfoKHR-pFragmentShadingRateAttachment-04530",
          "text": "If <code>pFragmentShadingRateAttachment</code> is not <code>NULL</code> and its <code>attachment</code> member is not <code>VK_ATTACHMENT_UNUSED</code>, <code>shadingRateAttachmentTexelSize.height</code> <strong class=\"purple\">must</strong> be greater than or equal to <a href=\"#limits-minFragmentShadingRateAttachmentTexelSize\"><code>minFragmentShadingRateAttachmentTexelSize.height</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFragmentShadingRateAttachmentInfoKHR-pFragmentShadingRateAttachment-04531",
          "text": "If <code>pFragmentShadingRateAttachment</code> is not <code>NULL</code> and its <code>attachment</code> member is not <code>VK_ATTACHMENT_UNUSED</code>, the quotient of <code>shadingRateAttachmentTexelSize.width</code> and <code>shadingRateAttachmentTexelSize.height</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFragmentShadingRateAttachmentTexelSizeAspectRatio\"><code>maxFragmentShadingRateAttachmentTexelSizeAspectRatio</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFragmentShadingRateAttachmentInfoKHR-pFragmentShadingRateAttachment-04532",
          "text": "If <code>pFragmentShadingRateAttachment</code> is not <code>NULL</code> and its <code>attachment</code> member is not <code>VK_ATTACHMENT_UNUSED</code>, the quotient of <code>shadingRateAttachmentTexelSize.height</code> and <code>shadingRateAttachmentTexelSize.width</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFragmentShadingRateAttachmentTexelSizeAspectRatio\"><code>maxFragmentShadingRateAttachmentTexelSizeAspectRatio</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFragmentShadingRateAttachmentInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFragmentShadingRateAttachmentInfoKHR-pFragmentShadingRateAttachment-parameter",
          "text": "If <code>pFragmentShadingRateAttachment</code> is not <code>NULL</code>, <code>pFragmentShadingRateAttachment</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkAttachmentReference2\">VkAttachmentReference2</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkAttachmentReference2": {
      "core": [
        {
          "vuid": "VUID-VkAttachmentReference2-layout-03077",
          "text": "If <code>attachment</code> is not <code>VK_ATTACHMENT_UNUSED</code>, <code>layout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code>, <code>VK_IMAGE_LAYOUT_PREINITIALIZED</code>, or <code>VK_IMAGE_LAYOUT_PRESENT_SRC_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentReference2-separateDepthStencilLayouts-03313",
          "text": "If the <a href=\"#features-separateDepthStencilLayouts\"><code>separateDepthStencilLayouts</code></a> feature is not enabled, and <code>attachment</code> is not <code>VK_ATTACHMENT_UNUSED</code>, <code>layout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>,",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentReference2-synchronization2-06910",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>layout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR</code> or <code>VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentReference2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentReference2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkAttachmentReferenceStencilLayout\">VkAttachmentReferenceStencilLayout</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentReference2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentReference2-layout-parameter",
          "text": "<code>layout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkAttachmentReferenceStencilLayout": {
      "core": [
        {
          "vuid": "VUID-VkAttachmentReferenceStencilLayout-stencilLayout-03318",
          "text": "<code>stencilLayout</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_LAYOUT_UNDEFINED</code>, <code>VK_IMAGE_LAYOUT_PREINITIALIZED</code>, <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_PRESENT_SRC_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentReferenceStencilLayout-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentReferenceStencilLayout-stencilLayout-parameter",
          "text": "<code>stencilLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkSubpassDependency2": {
      "core": [
        {
          "vuid": "VUID-VkSubpassDependency2-srcStageMask-04090",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-srcStageMask-04091",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-srcStageMask-07319",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-srcStageMask-03937",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>srcStageMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-dstStageMask-04090",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-dstStageMask-04091",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-dstStageMask-07319",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-dstStageMask-03937",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>dstStageMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-srcSubpass-03084",
          "text": "<code>srcSubpass</code> <strong class=\"purple\">must</strong> be less than or equal to <code>dstSubpass</code>, unless one of them is <code>VK_SUBPASS_EXTERNAL</code>, to avoid cyclic dependencies and ensure a valid execution order",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-srcSubpass-03085",
          "text": "<code>srcSubpass</code> and <code>dstSubpass</code> <strong class=\"purple\">must</strong> not both be equal to <code>VK_SUBPASS_EXTERNAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-srcSubpass-06810",
          "text": "If <code>srcSubpass</code> is equal to <code>dstSubpass</code> and <code>srcStageMask</code> includes a <a href=\"#synchronization-framebuffer-regions\">framebuffer-space stage</a>, <code>dstStageMask</code> <strong class=\"purple\">must</strong> only contain <a href=\"#synchronization-framebuffer-regions\">framebuffer-space stages</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-srcAccessMask-03088",
          "text": "Any access flag included in <code>srcAccessMask</code> <strong class=\"purple\">must</strong> be supported by one of the pipeline stages in <code>srcStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-dstAccessMask-03089",
          "text": "Any access flag included in <code>dstAccessMask</code> <strong class=\"purple\">must</strong> be supported by one of the pipeline stages in <code>dstStageMask</code>, as specified in the <a href=\"#synchronization-access-types-supported\">table of supported access types</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-dependencyFlags-03090",
          "text": "If <code>dependencyFlags</code> includes <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>, <code>srcSubpass</code> <strong class=\"purple\">must</strong> not be equal to <code>VK_SUBPASS_EXTERNAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-dependencyFlags-03091",
          "text": "If <code>dependencyFlags</code> includes <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>, <code>dstSubpass</code> <strong class=\"purple\">must</strong> not be equal to <code>VK_SUBPASS_EXTERNAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-srcSubpass-02245",
          "text": "If <code>srcSubpass</code> equals <code>dstSubpass</code>, and <code>srcStageMask</code> and <code>dstStageMask</code> both include a <a href=\"#synchronization-framebuffer-regions\">framebuffer-space stage</a>, then <code>dependencyFlags</code> <strong class=\"purple\">must</strong> include <code>VK_DEPENDENCY_BY_REGION_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-viewOffset-02530",
          "text": "If <code>viewOffset</code> is not equal to <code>0</code>, <code>srcSubpass</code> <strong class=\"purple\">must</strong> not be equal to <code>dstSubpass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-dependencyFlags-03092",
          "text": "If <code>dependencyFlags</code> does not include <code>VK_DEPENDENCY_VIEW_LOCAL_BIT</code>, <code>viewOffset</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkMemoryBarrier2\">VkMemoryBarrier2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-srcStageMask-parameter",
          "text": "<code>srcStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits\">VkPipelineStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-dstStageMask-parameter",
          "text": "<code>dstStageMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits\">VkPipelineStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-srcAccessMask-parameter",
          "text": "<code>srcAccessMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAccessFlagBits\">VkAccessFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-dstAccessMask-parameter",
          "text": "<code>dstAccessMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkAccessFlagBits\">VkAccessFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassDependency2-dependencyFlags-parameter",
          "text": "<code>dependencyFlags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkDependencyFlagBits\">VkDependencyFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyRenderPass": {
      "core": [
        {
          "vuid": "VUID-vkDestroyRenderPass-renderPass-00873",
          "text": "All submitted commands that refer to <code>renderPass</code> <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyRenderPass-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyRenderPass-renderPass-parameter",
          "text": "If <code>renderPass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>renderPass</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkRenderPass\">VkRenderPass</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyRenderPass-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyRenderPass-renderPass-parent",
          "text": "If <code>renderPass</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateFramebuffer": {
      "core": [
        {
          "vuid": "VUID-vkCreateFramebuffer-pCreateInfo-02777",
          "text": "If <code>pCreateInfo-&gt;flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, and <code>attachmentCount</code> is not <code>0</code>, each element of <code>pCreateInfo-&gt;pAttachments</code> <strong class=\"purple\">must</strong> have been created on <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateFramebuffer-device-05068",
          "text": "The number of framebuffers currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of framebuffers requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>framebufferRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateFramebuffer-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateFramebuffer-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateFramebuffer-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateFramebuffer-pFramebuffer-parameter",
          "text": "<code>pFramebuffer</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkFramebuffer\">VkFramebuffer</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkFramebufferCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkFramebufferCreateInfo-attachmentCount-00876",
          "text": "<code>attachmentCount</code> <strong class=\"purple\">must</strong> be equal to the attachment count specified in <code>renderPass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-02778",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code> and <code>attachmentCount</code> is not <code>0</code>, <code>pAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>attachmentCount</code> valid <a href=\"#VkImageView\">VkImageView</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-pAttachments-00877",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> that is used as a color attachment or resolve attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-pAttachments-02633",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> that is used as a depth/stencil attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-pAttachments-02634",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> that is used as a depth/stencil resolve attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-pAttachments-00879",
          "text": "If <code>renderpass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> that is used as an input attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-pAttachments-00880",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> <strong class=\"purple\">must</strong> have been created with a <a href=\"#VkFormat\">VkFormat</a> value that matches the <a href=\"#VkFormat\">VkFormat</a> specified by the corresponding <code>VkAttachmentDescription</code> in <code>renderPass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-pAttachments-00881",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> <strong class=\"purple\">must</strong> have been created with a <code>samples</code> value that matches the <code>samples</code> value specified by the corresponding <code>VkAttachmentDescription</code> in <code>renderPass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04533",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> that is used as an input, color, resolve, or depth/stencil attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> have been created with a <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>extent.width</code> greater than or equal to <code>width</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04534",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> that is used as an input, color, resolve, or depth/stencil attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> have been created with a <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>extent.height</code> greater than or equal to <code>height</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04535",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> that is used as an input, color, resolve, or depth/stencil attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> have been created with a <a href=\"#VkImageViewCreateInfo\">VkImageViewCreateInfo</a>::<code>subresourceRange.layerCount</code> greater than or equal to <code>layers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-renderPass-04536",
          "text": "If <code>renderPass</code> was specified with non-zero view masks, each element of <code>pAttachments</code> that is used as an input, color, resolve, or depth/stencil attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> have a <code>layerCount</code> greater than the index of the most significant bit set in any of those view masks",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04537",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, and <code>renderPass</code> was specified with non-zero view masks, each element of <code>pAttachments</code> that is used as a <a href=\"#primsrast-fragment-shading-rate-attachment\">fragment shading rate attachment</a> by <code>renderPass</code> <strong class=\"purple\">must</strong> have a <code>layerCount</code> that is either <code>1</code>, or greater than the index of the most significant bit set in any of those view masks",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04538",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, and <code>renderPass</code> was not specified with non-zero view masks, each element of <code>pAttachments</code> that is used as a <a href=\"#primsrast-fragment-shading-rate-attachment\">fragment shading rate attachment</a> by <code>renderPass</code> <strong class=\"purple\">must</strong> have a <code>layerCount</code> that is either <code>1</code>, or greater than <code>layers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-renderPass-08921",
          "text": "If <code>renderPass</code> was specified with non-zero view masks, each element of <code>pAttachments</code> that is used as a <a href=\"#primsrast-fragment-shading-rate-attachment\">fragment shading rate attachment</a> <strong class=\"purple\">must</strong> have a <code>layerCount</code> equal to <code>1</code> or greater than the index of the most significant bit set in any of those view masks",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04539",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, an element of <code>pAttachments</code> that is used as a <a href=\"#primsrast-fragment-shading-rate-attachment\">fragment shading rate attachment</a> <strong class=\"purple\">must</strong> have a width at least as large as <span class=\"eq\">⌈<code>width</code> / <code>texelWidth</code>⌉</span>, where <code>texelWidth</code> is the largest value of <code>shadingRateAttachmentTexelSize.width</code> in a <a href=\"#VkFragmentShadingRateAttachmentInfoKHR\">VkFragmentShadingRateAttachmentInfoKHR</a> which references that attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04540",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, an element of <code>pAttachments</code> that is used as a <a href=\"#primsrast-fragment-shading-rate-attachment\">fragment shading rate attachment</a> <strong class=\"purple\">must</strong> have a height at least as large as <span class=\"eq\">⌈<code>height</code> / <code>texelHeight</code>⌉</span>, where <code>texelHeight</code> is the largest value of <code>shadingRateAttachmentTexelSize.height</code> in a <a href=\"#VkFragmentShadingRateAttachmentInfoKHR\">VkFragmentShadingRateAttachmentInfoKHR</a> which references that attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-pAttachments-00883",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> <strong class=\"purple\">must</strong> only specify a single mip level",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-pAttachments-00884",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> <strong class=\"purple\">must</strong> have been created with the identity swizzle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-width-00885",
          "text": "<code>width</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-width-00886",
          "text": "<code>width</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFramebufferWidth\"><code>maxFramebufferWidth</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-height-00887",
          "text": "<code>height</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-height-00888",
          "text": "<code>height</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFramebufferHeight\"><code>maxFramebufferHeight</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-layers-00889",
          "text": "<code>layers</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-layers-00890",
          "text": "<code>layers</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFramebufferLayers\"><code>maxFramebufferLayers</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-renderPass-02531",
          "text": "If <code>renderPass</code> was specified with non-zero view masks, <code>layers</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-pAttachments-00891",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> that is a 2D or 2D array image view taken from a 3D image <strong class=\"purple\">must</strong> not be a depth/stencil format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-03189",
          "text": "If the <a href=\"#features-imagelessFramebuffer\"><code>imagelessFramebuffer</code></a> feature is not enabled, <code>flags</code> <strong class=\"purple\">must</strong> not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-03190",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-03191",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>attachmentImageInfoCount</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be equal to either zero or <code>attachmentCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04541",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>width</code> member of any element of the <code>pAttachmentImageInfos</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure in the <code>pNext</code> chain that is used as an input, color, resolve or depth/stencil attachment in <code>renderPass</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>width</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04542",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>height</code> member of any element of the <code>pAttachmentImageInfos</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure in the <code>pNext</code> chain that is used as an input, color, resolve or depth/stencil attachment in <code>renderPass</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>height</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04543",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>width</code> member of any element of the <code>pAttachmentImageInfos</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure in the <code>pNext</code> chain that is used as a <a href=\"#primsrast-fragment-shading-rate-attachment\">fragment shading rate attachment</a> <strong class=\"purple\">must</strong> be greater than or equal to <span class=\"eq\">⌈<code>width</code> / <code>texelWidth</code>⌉</span>, where <code>texelWidth</code> is the largest value of <code>shadingRateAttachmentTexelSize.width</code> in a <a href=\"#VkFragmentShadingRateAttachmentInfoKHR\">VkFragmentShadingRateAttachmentInfoKHR</a> which references that attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04544",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>height</code> member of any element of the <code>pAttachmentImageInfos</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure in the <code>pNext</code> chain that is used as a <a href=\"#primsrast-fragment-shading-rate-attachment\">fragment shading rate attachment</a> <strong class=\"purple\">must</strong> be greater than or equal to <span class=\"eq\">⌈<code>height</code> / <code>texelHeight</code>⌉</span>, where <code>texelHeight</code> is the largest value of <code>shadingRateAttachmentTexelSize.height</code> in a <a href=\"#VkFragmentShadingRateAttachmentInfoKHR\">VkFragmentShadingRateAttachmentInfoKHR</a> which references that attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04545",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>layerCount</code> member of any element of the <code>pAttachmentImageInfos</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure in the <code>pNext</code> chain that is used as a <a href=\"#primsrast-fragment-shading-rate-attachment\">fragment shading rate attachment</a> <strong class=\"purple\">must</strong> be either <code>1</code>, or greater than or equal to <code>layers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04587",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code> and <code>renderPass</code> was specified with non-zero view masks, each element of <code>pAttachments</code> that is used as a <a href=\"#primsrast-fragment-shading-rate-attachment\">fragment shading rate attachment</a> by <code>renderPass</code> <strong class=\"purple\">must</strong> have a <code>layerCount</code> that is either <code>1</code>, or greater than the index of the most significant bit set in any of those view masks",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-renderPass-03198",
          "text": "If multiview is enabled for <code>renderPass</code> and <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>layerCount</code> member of any element of the <code>pAttachmentImageInfos</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure included in the <code>pNext</code> chain used as an input, color, resolve, or depth/stencil attachment in <code>renderPass</code> <strong class=\"purple\">must</strong> be greater than the maximum bit index set in the view mask in the subpasses in which it is used in <code>renderPass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-renderPass-04546",
          "text": "If multiview is not enabled for <code>renderPass</code> and <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>layerCount</code> member of any element of the <code>pAttachmentImageInfos</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure included in the <code>pNext</code> chain used as an input, color, resolve, or depth/stencil attachment in <code>renderPass</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>layers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-03201",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>usage</code> member of any element of the <code>pAttachmentImageInfos</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure included in the <code>pNext</code> chain that refers to an attachment used as a color attachment or resolve attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> include <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-03202",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>usage</code> member of any element of the <code>pAttachmentImageInfos</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure included in the <code>pNext</code> chain that refers to an attachment used as a depth/stencil attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> include <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-03204",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>usage</code> member of any element of the <code>pAttachmentImageInfos</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure included in the <code>pNext</code> chain that refers to an attachment used as an input attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> include <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-03205",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, at least one element of the <code>pViewFormats</code> member of any element of the <code>pAttachmentImageInfos</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure included in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be equal to the corresponding value of <a href=\"#VkAttachmentDescription\">VkAttachmentDescription</a>::<code>format</code> used to create <code>renderPass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04113",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> <strong class=\"purple\">must</strong> have been created with <a href=\"#VkImageViewCreateInfo\">VkImageViewCreateInfo</a>::<code>viewType</code> not equal to <code>VK_IMAGE_VIEW_TYPE_3D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04548",
          "text": "If <code>flags</code> does not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of <code>pAttachments</code> that is used as a fragment shading rate attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-04549",
          "text": "If <code>flags</code> includes <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>usage</code> member of any element of the <code>pAttachmentImageInfos</code> member of a <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a> structure included in the <code>pNext</code> chain that refers to an attachment used as a fragment shading rate attachment by <code>renderPass</code> <strong class=\"purple\">must</strong> include <code>VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-attachmentCount-05060",
          "text": "<code>attachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFramebufferAttachments\">maxFramebufferAttachments</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkFramebufferCreateFlagBits\">VkFramebufferCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-renderPass-parameter",
          "text": "<code>renderPass</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkRenderPass\">VkRenderPass</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferCreateInfo-commonparent",
          "text": "Both of <code>renderPass</code>, and the elements of <code>pAttachments</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkFramebufferAttachmentsCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkFramebufferAttachmentsCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferAttachmentsCreateInfo-pAttachmentImageInfos-parameter",
          "text": "If <code>attachmentImageInfoCount</code> is not <code>0</code>, <code>pAttachmentImageInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>attachmentImageInfoCount</code> valid <a href=\"#VkFramebufferAttachmentImageInfo\">VkFramebufferAttachmentImageInfo</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkFramebufferAttachmentImageInfo": {
      "core": [
        {
          "vuid": "VUID-VkFramebufferAttachmentImageInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferAttachmentImageInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferAttachmentImageInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageCreateFlagBits\">VkImageCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferAttachmentImageInfo-usage-parameter",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageUsageFlagBits\">VkImageUsageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferAttachmentImageInfo-usage-requiredbitmask",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFramebufferAttachmentImageInfo-pViewFormats-parameter",
          "text": "If <code>viewFormatCount</code> is not <code>0</code>, <code>pViewFormats</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>viewFormatCount</code> valid <a href=\"#VkFormat\">VkFormat</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyFramebuffer": {
      "core": [
        {
          "vuid": "VUID-vkDestroyFramebuffer-framebuffer-00892",
          "text": "All submitted commands that refer to <code>framebuffer</code> <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyFramebuffer-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyFramebuffer-framebuffer-parameter",
          "text": "If <code>framebuffer</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>framebuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFramebuffer\">VkFramebuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyFramebuffer-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyFramebuffer-framebuffer-parent",
          "text": "If <code>framebuffer</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdBeginRenderPass": {
      "core": [
        {
          "vuid": "VUID-vkCmdBeginRenderPass-initialLayout-00895",
          "text": "If any of the <code>initialLayout</code> or <code>finalLayout</code> member of the <code>VkAttachmentDescription</code> structures or the <code>layout</code> member of the <code>VkAttachmentReference</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-initialLayout-01758",
          "text": "If any of the <code>initialLayout</code> or <code>finalLayout</code> member of the <code>VkAttachmentDescription</code> structures or the <code>layout</code> member of the <code>VkAttachmentReference</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-initialLayout-02842",
          "text": "If any of the <code>initialLayout</code> or <code>finalLayout</code> member of the <code>VkAttachmentDescription</code> structures or the <code>layout</code> member of the <code>VkAttachmentReference</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-stencilInitialLayout-02843",
          "text": "If any of the <code>stencilInitialLayout</code> or <code>stencilFinalLayout</code> member of the <code>VkAttachmentDescriptionStencilLayout</code> structures or the <code>stencilLayout</code> member of the <code>VkAttachmentReferenceStencilLayout</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-initialLayout-00897",
          "text": "If any of the <code>initialLayout</code> or <code>finalLayout</code> member of the <code>VkAttachmentDescription</code> structures or the <code>layout</code> member of the <code>VkAttachmentReference</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_SAMPLED_BIT</code> or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-initialLayout-00898",
          "text": "If any of the <code>initialLayout</code> or <code>finalLayout</code> member of the <code>VkAttachmentDescription</code> structures or the <code>layout</code> member of the <code>VkAttachmentReference</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-initialLayout-00899",
          "text": "If any of the <code>initialLayout</code> or <code>finalLayout</code> member of the <code>VkAttachmentDescription</code> structures or the <code>layout</code> member of the <code>VkAttachmentReference</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-initialLayout-00900",
          "text": "If the <code>initialLayout</code> member of any of the <code>VkAttachmentDescription</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is not <code>VK_IMAGE_LAYOUT_UNDEFINED</code>, then each such <code>initialLayout</code> <strong class=\"purple\">must</strong> be equal to the current layout of the corresponding attachment image subresource of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-srcStageMask-06451",
          "text": "The <code>srcStageMask</code> members of any element of the <code>pDependencies</code> member of <a href=\"#VkRenderPassCreateInfo\">VkRenderPassCreateInfo</a> used to create <code>renderPass</code> <strong class=\"purple\">must</strong> be supported by the capabilities of the queue family identified by the <code>queueFamilyIndex</code> member of the <a href=\"#VkCommandPoolCreateInfo\">VkCommandPoolCreateInfo</a> used to create the command pool which <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-dstStageMask-06452",
          "text": "The <code>dstStageMask</code> members of any element of the <code>pDependencies</code> member of <a href=\"#VkRenderPassCreateInfo\">VkRenderPassCreateInfo</a> used to create <code>renderPass</code> <strong class=\"purple\">must</strong> be supported by the capabilities of the queue family identified by the <code>queueFamilyIndex</code> member of the <a href=\"#VkCommandPoolCreateInfo\">VkCommandPoolCreateInfo</a> used to create the command pool which <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-framebuffer-02532",
          "text": "For any attachment in <code>framebuffer</code> that is used by <code>renderPass</code> and is bound to memory locations that are also bound to another attachment used by <code>renderPass</code>, and if at least one of those uses causes either attachment to be written to, both attachments <strong class=\"purple\">must</strong> have had the <code>VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-framebuffer-09045",
          "text": "If any attachments specified in <code>framebuffer</code> are used by <code>renderPass</code> and are bound to overlapping memory locations, there <strong class=\"purple\">must</strong> be only one that is used as a color attachment, depth/stencil, or resolve attachment in any subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-pRenderPassBegin-parameter",
          "text": "<code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkRenderPassBeginInfo\">VkRenderPassBeginInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-contents-parameter",
          "text": "<code>contents</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSubpassContents\">VkSubpassContents</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass-bufferlevel",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a primary <code>VkCommandBuffer</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdBeginRenderPass2": {
      "core": [
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-framebuffer-02779",
          "text": "Both the <code>framebuffer</code> and <code>renderPass</code> members of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created on the same <a href=\"#VkDevice\">VkDevice</a> that <code>commandBuffer</code> was allocated on",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-initialLayout-03094",
          "text": "If any of the <code>initialLayout</code> or <code>finalLayout</code> member of the <code>VkAttachmentDescription</code> structures or the <code>layout</code> member of the <code>VkAttachmentReference</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-initialLayout-03096",
          "text": "If any of the <code>initialLayout</code> or <code>finalLayout</code> member of the <code>VkAttachmentDescription</code> structures or the <code>layout</code> member of the <code>VkAttachmentReference</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-initialLayout-02844",
          "text": "If any of the <code>initialLayout</code> or <code>finalLayout</code> member of the <code>VkAttachmentDescription</code> structures or the <code>layout</code> member of the <code>VkAttachmentReference</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-stencilInitialLayout-02845",
          "text": "If any of the <code>stencilInitialLayout</code> or <code>stencilFinalLayout</code> member of the <code>VkAttachmentDescriptionStencilLayout</code> structures or the <code>stencilLayout</code> member of the <code>VkAttachmentReferenceStencilLayout</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-initialLayout-03097",
          "text": "If any of the <code>initialLayout</code> or <code>finalLayout</code> member of the <code>VkAttachmentDescription</code> structures or the <code>layout</code> member of the <code>VkAttachmentReference</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_SAMPLED_BIT</code> or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-initialLayout-03098",
          "text": "If any of the <code>initialLayout</code> or <code>finalLayout</code> member of the <code>VkAttachmentDescription</code> structures or the <code>layout</code> member of the <code>VkAttachmentReference</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-initialLayout-03099",
          "text": "If any of the <code>initialLayout</code> or <code>finalLayout</code> member of the <code>VkAttachmentDescription</code> structures or the <code>layout</code> member of the <code>VkAttachmentReference</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code> then the corresponding attachment image view of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value including <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-initialLayout-03100",
          "text": "If the <code>initialLayout</code> member of any of the <code>VkAttachmentDescription</code> structures specified when creating the render pass specified in the <code>renderPass</code> member of <code>pRenderPassBegin</code> is not <code>VK_IMAGE_LAYOUT_UNDEFINED</code>, then each such <code>initialLayout</code> <strong class=\"purple\">must</strong> be equal to the current layout of the corresponding attachment image subresource of the framebuffer specified in the <code>framebuffer</code> member of <code>pRenderPassBegin</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-srcStageMask-06453",
          "text": "The <code>srcStageMask</code> members of any element of the <code>pDependencies</code> member of <a href=\"#VkRenderPassCreateInfo\">VkRenderPassCreateInfo</a> used to create <code>renderPass</code> <strong class=\"purple\">must</strong> be supported by the capabilities of the queue family identified by the <code>queueFamilyIndex</code> member of the <a href=\"#VkCommandPoolCreateInfo\">VkCommandPoolCreateInfo</a> used to create the command pool which <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-dstStageMask-06454",
          "text": "The <code>dstStageMask</code> members of any element of the <code>pDependencies</code> member of <a href=\"#VkRenderPassCreateInfo\">VkRenderPassCreateInfo</a> used to create <code>renderPass</code> <strong class=\"purple\">must</strong> be supported by the capabilities of the queue family identified by the <code>queueFamilyIndex</code> member of the <a href=\"#VkCommandPoolCreateInfo\">VkCommandPoolCreateInfo</a> used to create the command pool which <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-framebuffer-02533",
          "text": "For any attachment in <code>framebuffer</code> that is used by <code>renderPass</code> and is bound to memory locations that are also bound to another attachment used by <code>renderPass</code>, and if at least one of those uses causes either attachment to be written to, both attachments <strong class=\"purple\">must</strong> have had the <code>VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-framebuffer-09046",
          "text": "If any attachments specified in <code>framebuffer</code> are used by <code>renderPass</code> and are bound to overlapping memory locations, there <strong class=\"purple\">must</strong> be only one that is used as a color attachment, depth/stencil, or resolve attachment in any subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-pRenderPassBegin-parameter",
          "text": "<code>pRenderPassBegin</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkRenderPassBeginInfo\">VkRenderPassBeginInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-pSubpassBeginInfo-parameter",
          "text": "<code>pSubpassBeginInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSubpassBeginInfo\">VkSubpassBeginInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginRenderPass2-bufferlevel",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a primary <code>VkCommandBuffer</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkRenderPassBeginInfo": {
      "core": [
        {
          "vuid": "VUID-VkRenderPassBeginInfo-clearValueCount-00902",
          "text": "<code>clearValueCount</code> <strong class=\"purple\">must</strong> be greater than the largest attachment index in <code>renderPass</code> specifying a <code>loadOp</code> (or <code>stencilLoadOp</code>, if the attachment has a depth/stencil format) of <code>VK_ATTACHMENT_LOAD_OP_CLEAR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-clearValueCount-04962",
          "text": "If <code>clearValueCount</code> is not <code>0</code>, <code>pClearValues</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>clearValueCount</code> <a href=\"#VkClearValue\">VkClearValue</a> unions",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-renderPass-00904",
          "text": "<code>renderPass</code> <strong class=\"purple\">must</strong> be <a href=\"#renderpass-compatibility\">compatible</a> with the <code>renderPass</code> member of the <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a> structure specified when creating <code>framebuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-None-08996",
          "text": "If the <code>pNext</code> chain does not contain <a href=\"#VkDeviceGroupRenderPassBeginInfo\">VkDeviceGroupRenderPassBeginInfo</a> or its <code>deviceRenderAreaCount</code> member is equal to 0, <code>renderArea.extent.width</code> <strong class=\"purple\">must</strong> be greater than 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-None-08997",
          "text": "If the <code>pNext</code> chain does not contain <a href=\"#VkDeviceGroupRenderPassBeginInfo\">VkDeviceGroupRenderPassBeginInfo</a> or its <code>deviceRenderAreaCount</code> member is equal to 0, <code>renderArea.extent.height</code> <strong class=\"purple\">must</strong> be greater than 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-pNext-02850",
          "text": "If the <code>pNext</code> chain does not contain <a href=\"#VkDeviceGroupRenderPassBeginInfo\">VkDeviceGroupRenderPassBeginInfo</a> or its <code>deviceRenderAreaCount</code> member is equal to 0, <code>renderArea.offset.x</code> <strong class=\"purple\">must</strong> be greater than or equal to 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-pNext-02851",
          "text": "If the <code>pNext</code> chain does not contain <a href=\"#VkDeviceGroupRenderPassBeginInfo\">VkDeviceGroupRenderPassBeginInfo</a> or its <code>deviceRenderAreaCount</code> member is equal to 0, <code>renderArea.offset.y</code> <strong class=\"purple\">must</strong> be greater than or equal to 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-pNext-02852",
          "text": "If the <code>pNext</code> chain does not contain <a href=\"#VkDeviceGroupRenderPassBeginInfo\">VkDeviceGroupRenderPassBeginInfo</a> or its <code>deviceRenderAreaCount</code> member is equal to 0, <span class=\"eq\"><code>renderArea.offset.x</code> +  <code>renderArea.extent.width</code></span> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>width</code> the <code>framebuffer</code> was created with",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-pNext-02853",
          "text": "If the <code>pNext</code> chain does not contain <a href=\"#VkDeviceGroupRenderPassBeginInfo\">VkDeviceGroupRenderPassBeginInfo</a> or its <code>deviceRenderAreaCount</code> member is equal to 0, <span class=\"eq\"><code>renderArea.offset.y</code> +  <code>renderArea.extent.height</code></span> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>height</code> the <code>framebuffer</code> was created with",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-pNext-02856",
          "text": "If the <code>pNext</code> chain contains <a href=\"#VkDeviceGroupRenderPassBeginInfo\">VkDeviceGroupRenderPassBeginInfo</a>, <span class=\"eq\"><code>offset.x</code> +  <code>extent.width</code></span> of each element of <code>pDeviceRenderAreas</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>width</code> the <code>framebuffer</code> was created with",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-pNext-02857",
          "text": "If the <code>pNext</code> chain contains <a href=\"#VkDeviceGroupRenderPassBeginInfo\">VkDeviceGroupRenderPassBeginInfo</a>, <span class=\"eq\"><code>offset.y</code> +  <code>extent.height</code></span> of each element of <code>pDeviceRenderAreas</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>height</code> the <code>framebuffer</code> was created with",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-03207",
          "text": "If <code>framebuffer</code> was created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that did not include <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, and the <code>pNext</code> chain includes a <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a> structure, its <code>attachmentCount</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-03208",
          "text": "If <code>framebuffer</code> was created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that included <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, the <code>attachmentCount</code> of a <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a> structure included in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be equal to the value of <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a>::<code>attachmentImageInfoCount</code> used to create <code>framebuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-02780",
          "text": "If <code>framebuffer</code> was created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that included <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of the <code>pAttachments</code> member of a <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a> structure included in the <code>pNext</code> chain <strong class=\"purple\">must</strong> have been created on the same <a href=\"#VkDevice\">VkDevice</a> as <code>framebuffer</code> and <code>renderPass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-03209",
          "text": "If <code>framebuffer</code> was created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that included <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of the <code>pAttachments</code> member of a <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a> structure included in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be a <a href=\"#VkImageView\">VkImageView</a> of an image created with a value of <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>flags</code> equal to the <code>flags</code> member of the corresponding element of <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a>::<code>pAttachmentImageInfos</code> used to create <code>framebuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-04627",
          "text": "If <code>framebuffer</code> was created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that included <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of the <code>pAttachments</code> member of a <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a> structure included in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be a <a href=\"#VkImageView\">VkImageView</a> with <a href=\"#resources-image-inherited-usage\">an inherited usage</a> equal to the <code>usage</code> member of the corresponding element of <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a>::<code>pAttachmentImageInfos</code> used to create <code>framebuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-03211",
          "text": "If <code>framebuffer</code> was created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that included <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of the <code>pAttachments</code> member of a <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a> structure included in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be a <a href=\"#VkImageView\">VkImageView</a> with a width equal to the <code>width</code> member of the corresponding element of <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a>::<code>pAttachmentImageInfos</code> used to create <code>framebuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-03212",
          "text": "If <code>framebuffer</code> was created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that included <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of the <code>pAttachments</code> member of a <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a> structure included in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be a <a href=\"#VkImageView\">VkImageView</a> with a height equal to the <code>height</code> member of the corresponding element of <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a>::<code>pAttachmentImageInfos</code> used to create <code>framebuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-03213",
          "text": "If <code>framebuffer</code> was created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that included <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of the <code>pAttachments</code> member of a <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a> structure included in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be a <a href=\"#VkImageView\">VkImageView</a> of an image created with a value of <a href=\"#VkImageViewCreateInfo\">VkImageViewCreateInfo</a>::<code>subresourceRange.layerCount</code> equal to the <code>layerCount</code> member of the corresponding element of <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a>::<code>pAttachmentImageInfos</code> used to create <code>framebuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-03214",
          "text": "If <code>framebuffer</code> was created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that included <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of the <code>pAttachments</code> member of a <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a> structure included in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be a <a href=\"#VkImageView\">VkImageView</a> of an image created with a value of <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>::<code>viewFormatCount</code> equal to the <code>viewFormatCount</code> member of the corresponding element of <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a>::<code>pAttachmentImageInfos</code> used to create <code>framebuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-03215",
          "text": "If <code>framebuffer</code> was created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that included <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of the <code>pAttachments</code> member of a <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a> structure included in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be a <a href=\"#VkImageView\">VkImageView</a> of an image created with a set of elements in <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>::<code>pViewFormats</code> equal to the set of elements in the <code>pViewFormats</code> member of the corresponding element of <a href=\"#VkFramebufferAttachmentsCreateInfo\">VkFramebufferAttachmentsCreateInfo</a>::<code>pAttachmentImageInfos</code> used to create <code>framebuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-03216",
          "text": "If <code>framebuffer</code> was created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that included <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of the <code>pAttachments</code> member of a <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a> structure included in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be a <a href=\"#VkImageView\">VkImageView</a> of an image created with a value of <a href=\"#VkImageViewCreateInfo\">VkImageViewCreateInfo</a>::<code>format</code> equal to the corresponding value of <a href=\"#VkAttachmentDescription\">VkAttachmentDescription</a>::<code>format</code> in <code>renderPass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-09047",
          "text": "If <code>framebuffer</code> was created with a <a href=\"#VkFramebufferCreateInfo\">VkFramebufferCreateInfo</a>::<code>flags</code> value that included <code>VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT</code>, each element of the <code>pAttachments</code> member of a <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a> structure included in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be a <a href=\"#VkImageView\">VkImageView</a> of an image created with a value of <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>samples</code> equal to the corresponding value of <a href=\"#VkAttachmentDescription\">VkAttachmentDescription</a>::<code>samples</code> in <code>renderPass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkDeviceGroupRenderPassBeginInfo\">VkDeviceGroupRenderPassBeginInfo</a>, <a href=\"#VkRenderPassAttachmentBeginInfo\">VkRenderPassAttachmentBeginInfo</a>, or <a href=\"#VkRenderPassSampleLocationsBeginInfoEXT\">VkRenderPassSampleLocationsBeginInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-renderPass-parameter",
          "text": "<code>renderPass</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkRenderPass\">VkRenderPass</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-framebuffer-parameter",
          "text": "<code>framebuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFramebuffer\">VkFramebuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassBeginInfo-commonparent",
          "text": "Both of <code>framebuffer</code>, and <code>renderPass</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkRenderPassSampleLocationsBeginInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkRenderPassSampleLocationsBeginInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassSampleLocationsBeginInfoEXT-pAttachmentInitialSampleLocations-parameter",
          "text": "If <code>attachmentInitialSampleLocationsCount</code> is not <code>0</code>, <code>pAttachmentInitialSampleLocations</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>attachmentInitialSampleLocationsCount</code> valid <a href=\"#VkAttachmentSampleLocationsEXT\">VkAttachmentSampleLocationsEXT</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassSampleLocationsBeginInfoEXT-pPostSubpassSampleLocations-parameter",
          "text": "If <code>postSubpassSampleLocationsCount</code> is not <code>0</code>, <code>pPostSubpassSampleLocations</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>postSubpassSampleLocationsCount</code> valid <a href=\"#VkSubpassSampleLocationsEXT\">VkSubpassSampleLocationsEXT</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkAttachmentSampleLocationsEXT": {
      "core": [
        {
          "vuid": "VUID-VkAttachmentSampleLocationsEXT-attachmentIndex-01531",
          "text": "<code>attachmentIndex</code> <strong class=\"purple\">must</strong> be less than the <code>attachmentCount</code> specified in <a href=\"#VkRenderPassCreateInfo\">VkRenderPassCreateInfo</a> the render pass specified by <a href=\"#VkRenderPassBeginInfo\">VkRenderPassBeginInfo</a>::<code>renderPass</code> was created with",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAttachmentSampleLocationsEXT-sampleLocationsInfo-parameter",
          "text": "<code>sampleLocationsInfo</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSampleLocationsInfoEXT\">VkSampleLocationsInfoEXT</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkSubpassSampleLocationsEXT": {
      "core": [
        {
          "vuid": "VUID-VkSubpassSampleLocationsEXT-subpassIndex-01532",
          "text": "<code>subpassIndex</code> <strong class=\"purple\">must</strong> be less than the <code>subpassCount</code> specified in <a href=\"#VkRenderPassCreateInfo\">VkRenderPassCreateInfo</a> the render pass specified by <a href=\"#VkRenderPassBeginInfo\">VkRenderPassBeginInfo</a>::<code>renderPass</code> was created with",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassSampleLocationsEXT-sampleLocationsInfo-parameter",
          "text": "<code>sampleLocationsInfo</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSampleLocationsInfoEXT\">VkSampleLocationsInfoEXT</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkSubpassBeginInfo": {
      "core": [
        {
          "vuid": "VUID-VkSubpassBeginInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassBeginInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassBeginInfo-contents-parameter",
          "text": "<code>contents</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSubpassContents\">VkSubpassContents</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceGroupRenderPassBeginInfo": {
      "core": [
        {
          "vuid": "VUID-VkDeviceGroupRenderPassBeginInfo-deviceMask-00905",
          "text": "<code>deviceMask</code> <strong class=\"purple\">must</strong> be a valid device mask value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupRenderPassBeginInfo-deviceMask-00906",
          "text": "<code>deviceMask</code> <strong class=\"purple\">must</strong> not be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupRenderPassBeginInfo-deviceMask-00907",
          "text": "<code>deviceMask</code> <strong class=\"purple\">must</strong> be a subset of the command buffer&#8217;s initial device mask",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupRenderPassBeginInfo-deviceRenderAreaCount-00908",
          "text": "<code>deviceRenderAreaCount</code> <strong class=\"purple\">must</strong> either be zero or equal to the number of physical devices in the logical device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupRenderPassBeginInfo-offset-06166",
          "text": "The <code>offset.x</code> member of any element of <code>pDeviceRenderAreas</code> <strong class=\"purple\">must</strong> be greater than or equal to 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupRenderPassBeginInfo-offset-06167",
          "text": "The <code>offset.y</code> member of any element of <code>pDeviceRenderAreas</code> <strong class=\"purple\">must</strong> be greater than or equal to 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupRenderPassBeginInfo-offset-06168",
          "text": "The sum of the <code>offset.x</code> and <code>extent.width</code> members of any element of <code>pDeviceRenderAreas</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFramebufferWidth\"><code>maxFramebufferWidth</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupRenderPassBeginInfo-offset-06169",
          "text": "The sum of the <code>offset.y</code> and <code>extent.height</code> members of any element of <code>pDeviceRenderAreas</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFramebufferHeight\"><code>maxFramebufferHeight</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupRenderPassBeginInfo-extent-08998",
          "text": "The <code>extent.width</code> member of any element of <code>pDeviceRenderAreas</code> <strong class=\"purple\">must</strong> be greater than 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupRenderPassBeginInfo-extent-08999",
          "text": "The <code>extent.height</code> member of any element of <code>pDeviceRenderAreas</code> <strong class=\"purple\">must</strong> be greater than 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupRenderPassBeginInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupRenderPassBeginInfo-pDeviceRenderAreas-parameter",
          "text": "If <code>deviceRenderAreaCount</code> is not <code>0</code>, <code>pDeviceRenderAreas</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>deviceRenderAreaCount</code> <a href=\"#VkRect2D\">VkRect2D</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkRenderPassAttachmentBeginInfo": {
      "core": [
        {
          "vuid": "VUID-VkRenderPassAttachmentBeginInfo-pAttachments-03218",
          "text": "Each element of <code>pAttachments</code> <strong class=\"purple\">must</strong> only specify a single mip level",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassAttachmentBeginInfo-pAttachments-03219",
          "text": "Each element of <code>pAttachments</code> <strong class=\"purple\">must</strong> have been created with the identity swizzle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassAttachmentBeginInfo-pAttachments-04114",
          "text": "Each element of <code>pAttachments</code> <strong class=\"purple\">must</strong> have been created with <a href=\"#VkImageViewCreateInfo\">VkImageViewCreateInfo</a>::<code>viewType</code> not equal to <code>VK_IMAGE_VIEW_TYPE_3D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassAttachmentBeginInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRenderPassAttachmentBeginInfo-pAttachments-parameter",
          "text": "If <code>attachmentCount</code> is not <code>0</code>, <code>pAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>attachmentCount</code> valid <a href=\"#VkImageView\">VkImageView</a> handles",
          "page": "vkspec"
        }
      ]
    },
    "vkGetRenderAreaGranularity": {
      "core": [
        {
          "vuid": "VUID-vkGetRenderAreaGranularity-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetRenderAreaGranularity-renderPass-parameter",
          "text": "<code>renderPass</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkRenderPass\">VkRenderPass</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetRenderAreaGranularity-pGranularity-parameter",
          "text": "<code>pGranularity</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkExtent2D\">VkExtent2D</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetRenderAreaGranularity-renderPass-parent",
          "text": "<code>renderPass</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdNextSubpass": {
      "core": [
        {
          "vuid": "VUID-vkCmdNextSubpass-None-00909",
          "text": "The current subpass index <strong class=\"purple\">must</strong> be less than the number of subpasses in the render pass minus one",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass-contents-parameter",
          "text": "<code>contents</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSubpassContents\">VkSubpassContents</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called inside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass-bufferlevel",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a primary <code>VkCommandBuffer</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdNextSubpass2": {
      "core": [
        {
          "vuid": "VUID-vkCmdNextSubpass2-None-03102",
          "text": "The current subpass index <strong class=\"purple\">must</strong> be less than the number of subpasses in the render pass minus one",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass2-pSubpassBeginInfo-parameter",
          "text": "<code>pSubpassBeginInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSubpassBeginInfo\">VkSubpassBeginInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass2-pSubpassEndInfo-parameter",
          "text": "<code>pSubpassEndInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSubpassEndInfo\">VkSubpassEndInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass2-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called inside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdNextSubpass2-bufferlevel",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a primary <code>VkCommandBuffer</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdEndRenderPass": {
      "core": [
        {
          "vuid": "VUID-vkCmdEndRenderPass-None-00910",
          "text": "The current subpass index <strong class=\"purple\">must</strong> be equal to the number of subpasses in the render pass minus one",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass-None-07004",
          "text": "If <code>vkCmdBeginQuery</code>* was called within a subpass of the render pass, the corresponding <code>vkCmdEndQuery</code>* <strong class=\"purple\">must</strong> have been called subsequently within the same subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called inside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass-bufferlevel",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a primary <code>VkCommandBuffer</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdEndRenderPass2": {
      "core": [
        {
          "vuid": "VUID-vkCmdEndRenderPass2-None-03103",
          "text": "The current subpass index <strong class=\"purple\">must</strong> be equal to the number of subpasses in the render pass minus one",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass2-None-07005",
          "text": "If <code>vkCmdBeginQuery</code>* was called within a subpass of the render pass, the corresponding <code>vkCmdEndQuery</code>* <strong class=\"purple\">must</strong> have been called subsequently within the same subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass2-pSubpassEndInfo-parameter",
          "text": "<code>pSubpassEndInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSubpassEndInfo\">VkSubpassEndInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass2-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called inside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndRenderPass2-bufferlevel",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a primary <code>VkCommandBuffer</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkSubpassEndInfo": {
      "core": [
        {
          "vuid": "VUID-VkSubpassEndInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SUBPASS_END_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSubpassEndInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetPatchControlPointsEXT": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetPatchControlPointsEXT-None-09422",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>The <a href=\"#features-extendedDynamicState2PatchControlPoints\"><code>extendedDynamicState2PatchControlPoints</code></a> feature is\nenabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetPatchControlPointsEXT-patchControlPoints-04874",
          "text": "<code>patchControlPoints</code> <strong class=\"purple\">must</strong> be greater than zero and less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxTessellationPatchSize</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetPatchControlPointsEXT-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetPatchControlPointsEXT-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetPatchControlPointsEXT-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateComputePipelines": {
      "core": [
        {
          "vuid": "VUID-vkCreateComputePipelines-device-05068",
          "text": "The number of compute pipelines currently allocated from <code>device</code> plus <code>createInfoCount</code> <strong class=\"purple\">must</strong> be less than or equal to the total number of compute pipelines requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>computePipelineRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateComputePipelines-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateComputePipelines-pipelineCache-parameter",
          "text": "<code>pipelineCache</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineCache\">VkPipelineCache</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateComputePipelines-pCreateInfos-parameter",
          "text": "<code>pCreateInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>createInfoCount</code> valid <a href=\"#VkComputePipelineCreateInfo\">VkComputePipelineCreateInfo</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateComputePipelines-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateComputePipelines-pPipelines-parameter",
          "text": "<code>pPipelines</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>createInfoCount</code> <a href=\"#VkPipeline\">VkPipeline</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateComputePipelines-createInfoCount-arraylength",
          "text": "<code>createInfoCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateComputePipelines-pipelineCache-parent",
          "text": "<code>pipelineCache</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkComputePipelineCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-basePipelineHandle-05024",
          "text": "<code>basePipelineHandle</code> <strong class=\"purple\">must</strong> be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-basePipelineIndex-05025",
          "text": "<code>basePipelineIndex</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-layout-07987",
          "text": "If a push constant block is declared in a shader, a push constant range in <code>layout</code> <strong class=\"purple\">must</strong> match both the shader stage and range",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-layout-07988",
          "text": "If a <a href=\"#interfaces-resources\">resource variables</a> is declared in a shader, a descriptor slot in <code>layout</code> <strong class=\"purple\">must</strong> match the shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-layout-07990",
          "text": "If a <a href=\"#interfaces-resources\">resource variables</a> is declared in a shader, a descriptor slot in <code>layout</code> <strong class=\"purple\">must</strong> match the descriptor type",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-layout-07991",
          "text": "If a <a href=\"#interfaces-resources\">resource variables</a> is declared in a shader as an array, a descriptor slot in <code>layout</code> <strong class=\"purple\">must</strong> match the descriptor count",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-stage-00701",
          "text": "The <code>stage</code> member of <code>stage</code> <strong class=\"purple\">must</strong> be <code>VK_SHADER_STAGE_COMPUTE_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-stage-00702",
          "text": "The shader code for the entry point identified by <code>stage</code> and the rest of the state identified by this structure <strong class=\"purple\">must</strong> adhere to the pipeline linking rules described in the <a href=\"#interfaces\">Shader Interfaces</a> chapter",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-layout-01687",
          "text": "The number of resources in <code>layout</code> accessible to the compute shader stage <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxPerStageResources</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkPipelineOfflineCreateInfo\">VkPipelineOfflineCreateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineCreateFlagBits\">VkPipelineCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-stage-parameter",
          "text": "<code>stage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineShaderStageCreateInfo\">VkPipelineShaderStageCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-layout-parameter",
          "text": "<code>layout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComputePipelineCreateInfo-commonparent",
          "text": "Both of <code>basePipelineHandle</code>, and <code>layout</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineShaderStageCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-stage-00704",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>stage</code> <strong class=\"purple\">must</strong> not be <code>VK_SHADER_STAGE_GEOMETRY_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-stage-00705",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>stage</code> <strong class=\"purple\">must</strong> not be <code>VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT</code> or <code>VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-stage-00706",
          "text": "<code>stage</code> <strong class=\"purple\">must</strong> not be <code>VK_SHADER_STAGE_ALL_GRAPHICS</code>, or <code>VK_SHADER_STAGE_ALL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-module-05026",
          "text": "<code>module</code> <strong class=\"purple\">must</strong> be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>.",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-pName-05027",
          "text": "If <code>pName</code> is not <code>NULL</code>, it <strong class=\"purple\">must</strong> be the name of an <code>OpEntryPoint</code> in the SPIR-V shader module used for offline compilation of this pipeline with an execution model that matches <code>stage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-maxClipDistances-00708",
          "text": "If the identified entry point includes any variable in its interface that is declared with the <code>ClipDistance</code> <code>BuiltIn</code> decoration, that variable <strong class=\"purple\">must</strong> not have an array size greater than <code>VkPhysicalDeviceLimits</code>::<code>maxClipDistances</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-maxCullDistances-00709",
          "text": "If the identified entry point includes any variable in its interface that is declared with the <code>CullDistance</code> <code>BuiltIn</code> decoration, that variable <strong class=\"purple\">must</strong> not have an array size greater than <code>VkPhysicalDeviceLimits</code>::<code>maxCullDistances</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-maxCombinedClipAndCullDistances-00710",
          "text": "If the identified entry point includes any variables in its interface that are declared with the <code>ClipDistance</code> or <code>CullDistance</code> <code>BuiltIn</code> decoration, those variables <strong class=\"purple\">must</strong> not have array sizes which sum to more than <code>VkPhysicalDeviceLimits</code>::<code>maxCombinedClipAndCullDistances</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-maxSampleMaskWords-00711",
          "text": "If the identified entry point includes any variable in its interface that is declared with the <code>SampleMask</code> <code>BuiltIn</code> decoration, that variable <strong class=\"purple\">must</strong> not have an array size greater than <code>VkPhysicalDeviceLimits</code>::<code>maxSampleMaskWords</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-stage-00713",
          "text": "If <code>stage</code> is <code>VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT</code> or <code>VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT</code>, and the identified entry point has an <code>OpExecutionMode</code> instruction specifying a patch size with <code>OutputVertices</code>, the patch size <strong class=\"purple\">must</strong> be greater than <code>0</code> and less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxTessellationPatchSize</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-stage-00714",
          "text": "If <code>stage</code> is <code>VK_SHADER_STAGE_GEOMETRY_BIT</code>, the identified entry point <strong class=\"purple\">must</strong> have an <code>OpExecutionMode</code> instruction specifying a maximum output vertex count that is greater than <code>0</code> and less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxGeometryOutputVertices</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-stage-00715",
          "text": "If <code>stage</code> is <code>VK_SHADER_STAGE_GEOMETRY_BIT</code>, the identified entry point <strong class=\"purple\">must</strong> have an <code>OpExecutionMode</code> instruction specifying an invocation count that is greater than <code>0</code> and less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxGeometryShaderInvocations</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-stage-02596",
          "text": "If <code>stage</code> is either <code>VK_SHADER_STAGE_VERTEX_BIT</code>, <code>VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT</code>, <code>VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT</code>, or <code>VK_SHADER_STAGE_GEOMETRY_BIT</code>, and the identified entry point writes to <code>Layer</code> for any primitive, it <strong class=\"purple\">must</strong> write the same value to <code>Layer</code> for all vertices of a given primitive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-stage-02597",
          "text": "If <code>stage</code> is either <code>VK_SHADER_STAGE_VERTEX_BIT</code>, <code>VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT</code>, <code>VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT</code>, or <code>VK_SHADER_STAGE_GEOMETRY_BIT</code>, and the identified entry point writes to <code>ViewportIndex</code> for any primitive, it <strong class=\"purple\">must</strong> write the same value to <code>ViewportIndex</code> for all vertices of a given primitive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-stage-06685",
          "text": "If <code>stage</code> is <code>VK_SHADER_STAGE_FRAGMENT_BIT</code>, and the identified entry point writes to <code>FragDepth</code> in any execution path, all execution paths that are not exclusive to helper invocations <strong class=\"purple\">must</strong> either discard the fragment, or write or initialize the value of <code>FragDepth</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-stage-06686",
          "text": "If <code>stage</code> is <code>VK_SHADER_STAGE_FRAGMENT_BIT</code>, and the identified entry point writes to <code>FragStencilRefEXT</code> in any execution path, all execution paths that are not exclusive to helper invocations <strong class=\"purple\">must</strong> either discard the fragment, or write or initialize the value of <code>FragStencilRefEXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-flags-02784",
          "text": "If <code>flags</code> has the <code>VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT</code> flag set, the <a href=\"#features-subgroupSizeControl\"><code>subgroupSizeControl</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-flags-02785",
          "text": "If <code>flags</code> has the <code>VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT</code> flag set, the <a href=\"#features-computeFullSubgroups\"><code>computeFullSubgroups</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-flags-08988",
          "text": "If <code>flags</code> includes <code>VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT</code>, <code>stage</code> <strong class=\"purple\">must</strong> be <code>VK_SHADER_STAGE_COMPUTE_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-pNext-02754",
          "text": "If a <a href=\"#VkPipelineShaderStageRequiredSubgroupSizeCreateInfo\">VkPipelineShaderStageRequiredSubgroupSizeCreateInfo</a> structure is included in the <code>pNext</code> chain, <code>flags</code> <strong class=\"purple\">must</strong> not have the <code>VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT</code> flag set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-pNext-02755",
          "text": "If a <a href=\"#VkPipelineShaderStageRequiredSubgroupSizeCreateInfo\">VkPipelineShaderStageRequiredSubgroupSizeCreateInfo</a> structure is included in the <code>pNext</code> chain, the <a href=\"#features-subgroupSizeControl\"><code>subgroupSizeControl</code></a> feature <strong class=\"purple\">must</strong> be enabled, and <code>stage</code> <strong class=\"purple\">must</strong> be a valid bit specified in <a href=\"#limits-requiredSubgroupSizeStages\"><code>requiredSubgroupSizeStages</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-pNext-02756",
          "text": "If a <a href=\"#VkPipelineShaderStageRequiredSubgroupSizeCreateInfo\">VkPipelineShaderStageRequiredSubgroupSizeCreateInfo</a> structure is included in the <code>pNext</code> chain and <code>stage</code> is <code>VK_SHADER_STAGE_COMPUTE_BIT</code>, the local workgroup size of the shader <strong class=\"purple\">must</strong> be less than or equal to the product of <a href=\"#VkPipelineShaderStageRequiredSubgroupSizeCreateInfo\">VkPipelineShaderStageRequiredSubgroupSizeCreateInfo</a>::<code>requiredSubgroupSize</code> and <a href=\"#limits-maxComputeWorkgroupSubgroups\"><code>maxComputeWorkgroupSubgroups</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-pNext-02757",
          "text": "If a <a href=\"#VkPipelineShaderStageRequiredSubgroupSizeCreateInfo\">VkPipelineShaderStageRequiredSubgroupSizeCreateInfo</a> structure is included in the <code>pNext</code> chain, and <code>flags</code> has the <code>VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT</code> flag set, the local workgroup size in the X dimension of the pipeline <strong class=\"purple\">must</strong> be a multiple of <a href=\"#VkPipelineShaderStageRequiredSubgroupSizeCreateInfo\">VkPipelineShaderStageRequiredSubgroupSizeCreateInfo</a>::<code>requiredSubgroupSize</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-flags-02758",
          "text": "If <code>flags</code> has both the <code>VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT</code> and <code>VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT</code> flags set, the local workgroup size in the X dimension of the pipeline <strong class=\"purple\">must</strong> be a multiple of <a href=\"#limits-maxSubgroupSize\"><code>maxSubgroupSize</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-flags-02759",
          "text": "If <code>flags</code> has the <code>VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT</code> flag set and <code>flags</code> does not have the <code>VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT</code> flag set and no <a href=\"#VkPipelineShaderStageRequiredSubgroupSizeCreateInfo\">VkPipelineShaderStageRequiredSubgroupSizeCreateInfo</a> structure is included in the <code>pNext</code> chain, the local workgroup size in the X dimension of the pipeline <strong class=\"purple\">must</strong> be a multiple of <a href=\"#limits-subgroup-size\"><code>subgroupSize</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkDebugUtilsObjectNameInfoEXT\">VkDebugUtilsObjectNameInfoEXT</a> or <a href=\"#VkPipelineShaderStageRequiredSubgroupSizeCreateInfo\">VkPipelineShaderStageRequiredSubgroupSizeCreateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineShaderStageCreateFlagBits\">VkPipelineShaderStageCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-stage-parameter",
          "text": "<code>stage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkShaderStageFlagBits\">VkShaderStageFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-module-parameter",
          "text": "If <code>module</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>module</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkShaderModule\">VkShaderModule</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-pName-parameter",
          "text": "If <code>pName</code> is not <code>NULL</code>, <code>pName</code> <strong class=\"purple\">must</strong> be a null-terminated UTF-8 string",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageCreateInfo-pSpecializationInfo-parameter",
          "text": "If <code>pSpecializationInfo</code> is not <code>NULL</code>, <code>pSpecializationInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSpecializationInfo\">VkSpecializationInfo</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineShaderStageRequiredSubgroupSizeCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineShaderStageRequiredSubgroupSizeCreateInfo-requiredSubgroupSize-02760",
          "text": "<code>requiredSubgroupSize</code> <strong class=\"purple\">must</strong> be a power-of-two integer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageRequiredSubgroupSizeCreateInfo-requiredSubgroupSize-02761",
          "text": "<code>requiredSubgroupSize</code> <strong class=\"purple\">must</strong> be greater or equal to <a href=\"#limits-minSubgroupSize\"><code>minSubgroupSize</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageRequiredSubgroupSizeCreateInfo-requiredSubgroupSize-02762",
          "text": "<code>requiredSubgroupSize</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxSubgroupSize\"><code>maxSubgroupSize</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineShaderStageRequiredSubgroupSizeCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateGraphicsPipelines": {
      "core": [
        {
          "vuid": "VUID-vkCreateGraphicsPipelines-device-05068",
          "text": "The number of graphics pipelines currently allocated from <code>device</code> plus <code>createInfoCount</code> <strong class=\"purple\">must</strong> be less than or equal to the total number of graphics pipelines requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>graphicsPipelineRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateGraphicsPipelines-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateGraphicsPipelines-pipelineCache-parameter",
          "text": "<code>pipelineCache</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineCache\">VkPipelineCache</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateGraphicsPipelines-pCreateInfos-parameter",
          "text": "<code>pCreateInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>createInfoCount</code> valid <a href=\"#VkGraphicsPipelineCreateInfo\">VkGraphicsPipelineCreateInfo</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateGraphicsPipelines-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateGraphicsPipelines-pPipelines-parameter",
          "text": "<code>pPipelines</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>createInfoCount</code> <a href=\"#VkPipeline\">VkPipeline</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateGraphicsPipelines-createInfoCount-arraylength",
          "text": "<code>createInfoCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateGraphicsPipelines-pipelineCache-parent",
          "text": "<code>pipelineCache</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkGraphicsPipelineCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-basePipelineHandle-05024",
          "text": "<code>basePipelineHandle</code> <strong class=\"purple\">must</strong> be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-basePipelineIndex-05025",
          "text": "<code>basePipelineIndex</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-layout-07987",
          "text": "If a push constant block is declared in a shader, a push constant range in <code>layout</code> <strong class=\"purple\">must</strong> match both the shader stage and range",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-layout-07988",
          "text": "If a <a href=\"#interfaces-resources\">resource variables</a> is declared in a shader, a descriptor slot in <code>layout</code> <strong class=\"purple\">must</strong> match the shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-layout-07990",
          "text": "If a <a href=\"#interfaces-resources\">resource variables</a> is declared in a shader, a descriptor slot in <code>layout</code> <strong class=\"purple\">must</strong> match the descriptor type",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-layout-07991",
          "text": "If a <a href=\"#interfaces-resources\">resource variables</a> is declared in a shader as an array, a descriptor slot in <code>layout</code> <strong class=\"purple\">must</strong> match the descriptor count",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-stage-02096",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> the <code>stage</code> member of one element of <code>pStages</code> <strong class=\"purple\">must</strong> be <code>VK_SHADER_STAGE_VERTEX_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-00729",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <code>pStages</code> includes a tessellation control shader stage, it <strong class=\"purple\">must</strong> include a tessellation evaluation shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-00730",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <code>pStages</code> includes a tessellation evaluation shader stage, it <strong class=\"purple\">must</strong> include a tessellation control shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-09022",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <code>pStages</code> includes a tessellation control shader stage, <code>pTessellationState</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineTessellationStateCreateInfo\">VkPipelineTessellationStateCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-00732",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <code>pStages</code> includes tessellation shader stages, the shader code of at least one stage <strong class=\"purple\">must</strong> contain an <code>OpExecutionMode</code> instruction specifying the type of subdivision in the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-00733",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <code>pStages</code> includes tessellation shader stages, and the shader code of both stages contain an <code>OpExecutionMode</code> instruction specifying the type of subdivision in the pipeline, they <strong class=\"purple\">must</strong> both specify the same subdivision mode",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-00734",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <code>pStages</code> includes tessellation shader stages, the shader code of at least one stage <strong class=\"purple\">must</strong> contain an <code>OpExecutionMode</code> instruction specifying the output patch size in the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-00735",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <code>pStages</code> includes tessellation shader stages, and the shader code of both contain an <code>OpExecutionMode</code> instruction specifying the out patch size in the pipeline, they <strong class=\"purple\">must</strong> both specify the same patch size",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-08888",
          "text": "If the pipeline is being created with <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <a href=\"#pipelines-graphics-subsets-vertex-input\">vertex input state</a> and <code>pStages</code> includes tessellation shader stages, the <code>topology</code> member of <code>pInputAssembly</code> <strong class=\"purple\">must</strong> be <code>VK_PRIMITIVE_TOPOLOGY_PATCH_LIST</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-topology-08889",
          "text": "If the pipeline is being created with <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <a href=\"#pipelines-graphics-subsets-vertex-input\">vertex input state</a> and the <code>topology</code> member of <code>pInputAssembly</code> is <code>VK_PRIMITIVE_TOPOLOGY_PATCH_LIST</code>, then <code>pStages</code> <strong class=\"purple\">must</strong> include tessellation shader stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-TessellationEvaluation-07723",
          "text": "If the pipeline is being created with a <code>TessellationEvaluation</code> <code>Execution</code> <code>Model</code>, no <code>Geometry</code> <code>Execution</code> <code>Model</code>, uses the <code>PointMode</code> <code>Execution</code> <code>Mode</code>, and <a href=\"#features-shaderTessellationAndGeometryPointSize\"><code>shaderTessellationAndGeometryPointSize</code></a> is enabled, a <code>PointSize</code> decorated variable <strong class=\"purple\">must</strong> be written to",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-topology-08773",
          "text": "If the pipeline is being created with a <code>Vertex</code> <code>Execution</code> <code>Model</code> and no <code>TessellationEvaluation</code> or <code>Geometry</code> <code>Execution</code> <code>Model</code>, and the <code>topology</code> member of <code>pInputAssembly</code> is <code>VK_PRIMITIVE_TOPOLOGY_POINT_LIST</code>, a <code>PointSize</code> decorated variable <strong class=\"purple\">must</strong> be written to",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-TessellationEvaluation-07724",
          "text": "If the pipeline is being created with a <code>TessellationEvaluation</code> <code>Execution</code> <code>Model</code>, no <code>Geometry</code> <code>Execution</code> <code>Model</code>, uses the <code>PointMode</code> <code>Execution</code> <code>Mode</code>, and <a href=\"#features-shaderTessellationAndGeometryPointSize\"><code>shaderTessellationAndGeometryPointSize</code></a> is not enabled, a <code>PointSize</code> decorated variable <strong class=\"purple\">must</strong> not be written to",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-shaderTessellationAndGeometryPointSize-08776",
          "text": "If the pipeline is being created with a <code>Geometry</code> <code>Execution</code> <code>Model</code>, uses the <code>OutputPoints</code> <code>Execution</code> <code>Mode</code>, and <a href=\"#features-shaderTessellationAndGeometryPointSize\"><code>shaderTessellationAndGeometryPointSize</code></a> is enabled, a <code>PointSize</code> decorated variable <strong class=\"purple\">must</strong> be written to for every vertex emitted",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-Geometry-07726",
          "text": "If the pipeline is being created with a <code>Geometry</code> <code>Execution</code> <code>Model</code>, uses the <code>OutputPoints</code> <code>Execution</code> <code>Mode</code>, and <a href=\"#features-shaderTessellationAndGeometryPointSize\"><code>shaderTessellationAndGeometryPointSize</code></a> is not enabled, a <code>PointSize</code> decorated variable <strong class=\"purple\">must</strong> not be written to",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-00738",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <code>pStages</code> includes a geometry shader stage, and does not include any tessellation shader stages, its shader code <strong class=\"purple\">must</strong> contain an <code>OpExecutionMode</code> instruction specifying an input primitive type that is <a href=\"#shaders-geometry-execution\">compatible</a> with the primitive topology specified in <code>pInputAssembly</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-00739",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <code>pStages</code> includes a geometry shader stage, and also includes tessellation shader stages, its shader code <strong class=\"purple\">must</strong> contain an <code>OpExecutionMode</code> instruction specifying an input primitive type that is <a href=\"#shaders-geometry-execution\">compatible</a> with the primitive topology that is output by the tessellation stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-00740",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a>, it includes both a fragment shader and a geometry shader, and the fragment shader code reads from an input variable that is decorated with <code>PrimitiveId</code>, then the geometry shader code <strong class=\"purple\">must</strong> write to a matching output variable, decorated with <code>PrimitiveId</code>, in all execution paths",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-renderPass-06038",
          "text": "If <code>renderPass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> and the pipeline is being created with <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> the fragment shader <strong class=\"purple\">must</strong> not read from any input attachment that is defined as <code>VK_ATTACHMENT_UNUSED</code> in <code>subpass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-00742",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and multiple pre-rasterization shader stages are included in <code>pStages</code>, the shader code for the entry points identified by those <code>pStages</code> and the rest of the state identified by this structure <strong class=\"purple\">must</strong> adhere to the pipeline linking rules described in the <a href=\"#interfaces\">Shader Interfaces</a> chapter",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-None-04889",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a>, the fragment shader and last <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader stage</a> and any relevant state <strong class=\"purple\">must</strong> adhere to the pipeline linking rules described in the <a href=\"#interfaces\">Shader Interfaces</a> chapter",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-renderPass-06041",
          "text": "If <code>renderPass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, and the pipeline is being created with <a href=\"#pipelines-graphics-subsets-fragment-output\">fragment output interface state</a>, then for each color attachment in the subpass, if the <a href=\"#potential-format-features\">potential format features</a> of the format of the corresponding attachment description do not contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT</code>, then the <code>blendEnable</code> member of the corresponding element of the <code>pAttachments</code> member of <code>pColorBlendState</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-renderPass-07609",
          "text": "If <code>renderPass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, and the pipeline is being created with <a href=\"#pipelines-graphics-subsets-fragment-output\">fragment output interface state</a>, and the <code>pColorBlendState</code> pointer is not <code>NULL</code>, and the subpass uses color attachments, the <code>attachmentCount</code> member of <code>pColorBlendState</code> <strong class=\"purple\">must</strong> be equal to the <code>colorAttachmentCount</code> used to create <code>subpass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-04130",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and <code>pViewportState-&gt;pViewports</code> is not dynamic, then <code>pViewportState-&gt;pViewports</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pViewportState-&gt;viewportCount</code> valid <code>VkViewport</code> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-04131",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and <code>pViewportState-&gt;pScissors</code> is not dynamic, then <code>pViewportState-&gt;pScissors</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pViewportState-&gt;scissorCount</code> <code>VkRect2D</code> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-00749",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and the <a href=\"#features-wideLines\"><code>wideLines</code></a> feature is not enabled, and no element of the <code>pDynamicStates</code> member of <code>pDynamicState</code> is <code>VK_DYNAMIC_STATE_LINE_WIDTH</code>, the <code>lineWidth</code> member of <code>pRasterizationState</code> <strong class=\"purple\">must</strong> be <code>1.0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-rasterizerDiscardEnable-09024",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and the <code>VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE</code> dynamic state is enabled or the <code>rasterizerDiscardEnable</code> member of <code>pRasterizationState</code> is <code>VK_FALSE</code>, <code>pViewportState</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineViewportStateCreateInfo\">VkPipelineViewportStateCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pMultisampleState-09026",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-fragment-output\">fragment output interface state</a>, <code>pMultisampleState</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineMultisampleStateCreateInfo\">VkPipelineMultisampleStateCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pMultisampleState-09027",
          "text": "If <code>pMultisampleState</code> is not <code>NULL</code> is <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineMultisampleStateCreateInfo\">VkPipelineMultisampleStateCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-alphaToCoverageEnable-08891",
          "text": "If the pipeline is being created with <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a>, the <a href=\"#VkPipelineMultisampleStateCreateInfo\">VkPipelineMultisampleStateCreateInfo</a>::<code>alphaToCoverageEnable</code> is not ignored and is <code>VK_TRUE</code>, then the <a href=\"#interfaces-fragmentoutput\">Fragment Output Interface</a> <strong class=\"purple\">must</strong> contain a variable for the alpha <code>Component</code> word in <code>Location</code> 0 at <code>Index</code> 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-renderPass-09028",
          "text": "If <code>renderPass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, the pipeline is being created with <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a>, and <code>subpass</code> uses a depth/stencil attachment, and <code>pDepthStencilState</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineDepthStencilStateCreateInfo\">VkPipelineDepthStencilStateCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDepthStencilState-09029",
          "text": "If <code>pDepthStencilState</code> is not <code>NULL</code> it <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineDepthStencilStateCreateInfo\">VkPipelineDepthStencilStateCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-renderPass-09030",
          "text": "If <code>renderPass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, the pipeline is being created with <a href=\"#pipelines-graphics-subsets-fragment-output\">fragment output interface state</a>, and <code>subpass</code> uses color attachments, <code>pColorBlendState</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineColorBlendStateCreateInfo\">VkPipelineColorBlendStateCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-00754",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, the <a href=\"#features-depthBiasClamp\"><code>depthBiasClamp</code></a> feature is not enabled, no element of the <code>pDynamicStates</code> member of <code>pDynamicState</code> is <code>VK_DYNAMIC_STATE_DEPTH_BIAS</code>, and the <code>depthBiasEnable</code> member of <code>pRasterizationState</code> is <code>VK_TRUE</code>, the <code>depthBiasClamp</code> member of <code>pRasterizationState</code> <strong class=\"purple\">must</strong> be <code>0.0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-02510",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a>, the <code><a href=\"#VK_EXT_depth_range_unrestricted\">VK_EXT_depth_range_unrestricted</a></code> extension is not enabled and no element of the <code>pDynamicStates</code> member of <code>pDynamicState</code> is <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS</code>, and the <code>depthBoundsTestEnable</code> member of <code>pDepthStencilState</code> is <code>VK_TRUE</code>, the <code>minDepthBounds</code> and <code>maxDepthBounds</code> members of <code>pDepthStencilState</code> <strong class=\"purple\">must</strong> be between <code>0.0</code> and <code>1.0</code>, inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-07610",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-output\">fragment output interface state</a>, and <code>rasterizationSamples</code> and <code>sampleLocationsInfo</code> are not dynamic, and <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a>::<code>sampleLocationsEnable</code> included in the <code>pNext</code> chain of <code>pMultisampleState</code> is <code>VK_TRUE</code>, <code>sampleLocationsInfo.sampleLocationGridSize.width</code> <strong class=\"purple\">must</strong> evenly divide <a href=\"#VkMultisamplePropertiesEXT\">VkMultisamplePropertiesEXT</a>::<code>sampleLocationGridSize.width</code> as returned by <a href=\"#vkGetPhysicalDeviceMultisamplePropertiesEXT\">vkGetPhysicalDeviceMultisamplePropertiesEXT</a> with a <code>samples</code> parameter equaling <code>rasterizationSamples</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-07611",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-output\">fragment output interface state</a>, and <code>rasterizationSamples</code> and <code>sampleLocationsInfo</code> are not dynamic, and <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a>::<code>sampleLocationsEnable</code> the included in the <code>pNext</code> chain of <code>pMultisampleState</code> is <code>VK_TRUE</code> or <code>VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_ENABLE_EXT</code> is used, <code>sampleLocationsInfo.sampleLocationGridSize.height</code> <strong class=\"purple\">must</strong> evenly divide <a href=\"#VkMultisamplePropertiesEXT\">VkMultisamplePropertiesEXT</a>::<code>sampleLocationGridSize.height</code> as returned by <a href=\"#vkGetPhysicalDeviceMultisamplePropertiesEXT\">vkGetPhysicalDeviceMultisamplePropertiesEXT</a> with a <code>samples</code> parameter equaling <code>rasterizationSamples</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-07612",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-output\">fragment output interface state</a>, and <code>rasterizationSamples</code> and <code>sampleLocationsInfo</code> are not dynamic, and <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a>::<code>sampleLocationsEnable</code> included in the <code>pNext</code> chain of <code>pMultisampleState</code> is <code>VK_TRUE</code> or <code>VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_ENABLE_EXT</code> is used, <code>sampleLocationsInfo.sampleLocationsPerPixel</code> <strong class=\"purple\">must</strong> equal <code>rasterizationSamples</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-sampleLocationsEnable-01524",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a>, and the <code>sampleLocationsEnable</code> member of a <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a> structure included in the <code>pNext</code> chain of <code>pMultisampleState</code> is <code>VK_TRUE</code>, the fragment shader code <strong class=\"purple\">must</strong> not statically use the extended instruction <code>InterpolateAtSample</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-subpass-00758",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-fragment-output\">fragment output interface state</a>, <code>rasterizationSamples</code> is not dynamic, and <code>subpass</code> does not use any color and/or depth/stencil attachments, then the <code>rasterizationSamples</code> member of <code>pMultisampleState</code> <strong class=\"purple\">must</strong> follow the rules for a <a href=\"#renderpass-noattachments\">zero-attachment subpass</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-renderPass-06046",
          "text": "If <code>renderPass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>subpass</code> <strong class=\"purple\">must</strong> be a valid subpass within <code>renderPass</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-renderPass-06047",
          "text": "If <code>renderPass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, the pipeline is being created with <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, <code>subpass</code> viewMask is not <code>0</code>, and <code>multiviewTessellationShader</code> is not enabled, then <code>pStages</code> <strong class=\"purple\">must</strong> not include tessellation shaders",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-renderPass-06048",
          "text": "If <code>renderPass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, the pipeline is being created with <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, <code>subpass</code> viewMask is not <code>0</code>, and <code>multiviewGeometryShader</code> is not enabled, then <code>pStages</code> <strong class=\"purple\">must</strong> not include a geometry shader",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-renderPass-06049",
          "text": "If <code>renderPass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, the pipeline is being created with <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and <code>subpass</code> viewMask is not <code>0</code>, all of the shaders in the pipeline <strong class=\"purple\">must</strong> not write to the <code>Layer</code> built-in output",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-renderPass-06050",
          "text": "If <code>renderPass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> and the pipeline is being created with <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and <code>subpass</code> viewMask is not <code>0</code>, then all of the shaders in the pipeline <strong class=\"purple\">must</strong> not include variables decorated with the <code>Layer</code> built-in decoration in their interfaces",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-renderPass-07717",
          "text": "If <code>renderPass</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> and the pipeline is being created with <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and <code>subpass</code> viewMask is not <code>0</code>, then all of the shaders in the pipeline <strong class=\"purple\">must</strong> not include variables decorated with the <code>ViewMask</code> built-in decoration in their interfaces",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-flags-00764",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> not contain the <code>VK_PIPELINE_CREATE_DISPATCH_BASE</code> flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-01565",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and an input attachment was referenced by an <code>aspectMask</code> at <code>renderPass</code> creation time, the fragment shader <strong class=\"purple\">must</strong> only read from the aspects that were specified for that input attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-layout-01688",
          "text": "The number of resources in <code>layout</code> accessible to each shader stage that is used by the pipeline <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxPerStageResources</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-04058",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and no element of the <code>pDynamicStates</code> member of <code>pDynamicState</code> is <code>VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT</code>, and if <code>pNext</code> chain includes a <a href=\"#VkPipelineDiscardRectangleStateCreateInfoEXT\">VkPipelineDiscardRectangleStateCreateInfoEXT</a> structure, and if its <code>discardRectangleCount</code> member is not <code>0</code>, then its <code>pDiscardRectangles</code> member <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>discardRectangleCount</code> <a href=\"#VkRect2D\">VkRect2D</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-07855",
          "text": "If <code>VK_DYNAMIC_STATE_DISCARD_RECTANGLE_ENABLE_EXT</code> is included in the <code>pDynamicStates</code> array then the implementation <strong class=\"purple\">must</strong> support at least <code>specVersion</code> <code>2</code> of the <code><a href=\"#VK_EXT_discard_rectangles\">VK_EXT_discard_rectangles</a></code> extension",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-07856",
          "text": "If <code>VK_DYNAMIC_STATE_DISCARD_RECTANGLE_MODE_EXT</code> is included in the <code>pDynamicStates</code> array then the implementation <strong class=\"purple\">must</strong> support at least <code>specVersion</code> <code>2</code> of the <code><a href=\"#VK_EXT_discard_rectangles\">VK_EXT_discard_rectangles</a></code> extension",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-02097",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-vertex-input\">vertex input state</a>, and <code>pVertexInputState</code> is not dynamic, then <code>pVertexInputState</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineVertexInputStateCreateInfo\">VkPipelineVertexInputStateCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-Input-07904",
          "text": "If the pipeline is being created with <a href=\"#pipelines-graphics-subsets-vertex-input\">vertex input state</a> and <code>pVertexInputState</code> is not dynamic, then all variables with the <code>Input</code> storage class decorated with <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> contain a location in <a href=\"#VkVertexInputAttributeDescription\">VkVertexInputAttributeDescription</a>::<code>location</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-Input-08733",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-vertex-input\">vertex input state</a> and <code>pVertexInputState</code> is not dynamic, then the numeric type associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be the same as <a href=\"#VkVertexInputAttributeDescription\">VkVertexInputAttributeDescription</a>::<code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pVertexInputState-08929",
          "text": "If the pipeline is being created with <a href=\"#pipelines-graphics-subsets-vertex-input\">vertex input state</a> and <code>pVertexInputState</code> is not dynamic, and <a href=\"#VkVertexInputAttributeDescription\">VkVertexInputAttributeDescription</a>::<code>format</code> has a 64-bit component, then the scalar width associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be 64-bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pVertexInputState-08930",
          "text": "If the pipeline is being created with <a href=\"#pipelines-graphics-subsets-vertex-input\">vertex input state</a> and <code>pVertexInputState</code> is not dynamic, and the scalar width associated with a <code>Location</code> decorated <code>Input</code> variable in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> is 64-bit, then the corresponding <a href=\"#VkVertexInputAttributeDescription\">VkVertexInputAttributeDescription</a>::<code>format</code> <strong class=\"purple\">must</strong> have a 64-bit component",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pVertexInputState-09198",
          "text": "If the pipeline is being created with <a href=\"#pipelines-graphics-subsets-vertex-input\">vertex input state</a> and <code>pVertexInputState</code> is not dynamic, and <a href=\"#VkVertexInputAttributeDescription\">VkVertexInputAttributeDescription</a>::<code>format</code> has a 64-bit component, then all <code>Input</code> variables at the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> not use components that are not present in the format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-dynamicPrimitiveTopologyUnrestricted-09031",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-vertex-input\">vertex input state</a>, <code>pInputAssemblyState</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineInputAssemblyStateCreateInfo\">VkPipelineInputAssemblyStateCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pInputAssemblyState-09032",
          "text": "If <code>pInputAssemblyState</code> is not <code>NULL</code> it <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineInputAssemblyStateCreateInfo\">VkPipelineInputAssemblyStateCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-lineRasterizationMode-02766",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and at least one of <a href=\"#pipelines-graphics-subsets-fragment-output\">fragment output interface state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a>, and <code>pMultisampleState</code> is not <code>NULL</code>, the <code>lineRasterizationMode</code> member of a <a href=\"#VkPipelineRasterizationLineStateCreateInfoEXT\">VkPipelineRasterizationLineStateCreateInfoEXT</a> structure included in the <code>pNext</code> chain of <code>pRasterizationState</code> is <code>VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT</code> or <code>VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT</code>, then the <code>alphaToCoverageEnable</code>, <code>alphaToOneEnable</code>, and <code>sampleShadingEnable</code> members of <code>pMultisampleState</code> <strong class=\"purple\">must</strong> all be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-stippledLineEnable-02767",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, the <code>stippledLineEnable</code> member of <a href=\"#VkPipelineRasterizationLineStateCreateInfoEXT\">VkPipelineRasterizationLineStateCreateInfoEXT</a> is <code>VK_TRUE</code>, and no element of the <code>pDynamicStates</code> member of <code>pDynamicState</code> is <code>VK_DYNAMIC_STATE_LINE_STIPPLE_EXT</code>, then the <code>lineStippleFactor</code> member of <a href=\"#VkPipelineRasterizationLineStateCreateInfoEXT\">VkPipelineRasterizationLineStateCreateInfoEXT</a> <strong class=\"purple\">must</strong> be in the range <span class=\"eq\">[1,256]</span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-03378",
          "text": "If the <a href=\"#features-extendedDynamicState\"><code>extendedDynamicState</code></a> feature is not enabled, there <strong class=\"purple\">must</strong> be no element of the <code>pDynamicStates</code> member of <code>pDynamicState</code> set to <code>VK_DYNAMIC_STATE_CULL_MODE</code>, <code>VK_DYNAMIC_STATE_FRONT_FACE</code>, <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code>, <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code>, <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code>, <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE</code>, <code>VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE</code>, <code>VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE</code>, <code>VK_DYNAMIC_STATE_DEPTH_COMPARE_OP</code>, <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE</code>, <code>VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE</code>, or <code>VK_DYNAMIC_STATE_STENCIL_OP</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-03379",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> is included in the <code>pDynamicStates</code> array then <code>viewportCount</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-03380",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> is included in the <code>pDynamicStates</code> array then <code>scissorCount</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-04132",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> is included in the <code>pDynamicStates</code> array then <code>VK_DYNAMIC_STATE_VIEWPORT</code> <strong class=\"purple\">must</strong> not be present",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-04133",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> is included in the <code>pDynamicStates</code> array then <code>VK_DYNAMIC_STATE_SCISSOR</code> <strong class=\"purple\">must</strong> not be present",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-04868",
          "text": "If the <a href=\"#features-extendedDynamicState2\"><code>extendedDynamicState2</code></a> feature is not enabled, there <strong class=\"purple\">must</strong> be no element of the <code>pDynamicStates</code> member of <code>pDynamicState</code> set to <code>VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE</code>, <code>VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE</code>, or <code>VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-04869",
          "text": "If the <a href=\"#features-extendedDynamicState2LogicOp\"><code>extendedDynamicState2LogicOp</code></a> feature is not enabled, there <strong class=\"purple\">must</strong> be no element of the <code>pDynamicStates</code> member of <code>pDynamicState</code> set to <code>VK_DYNAMIC_STATE_LOGIC_OP_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-04870",
          "text": "If the <a href=\"#features-extendedDynamicState2PatchControlPoints\"><code>extendedDynamicState2PatchControlPoints</code></a> feature is not enabled, there <strong class=\"purple\">must</strong> be no element of the <code>pDynamicStates</code> member of <code>pDynamicState</code> set to <code>VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-04494",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and <code>VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>fragmentSize.width</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-04495",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and <code>VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>fragmentSize.height</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-04496",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and <code>VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>fragmentSize.width</code> <strong class=\"purple\">must</strong> be a power-of-two value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-04497",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and <code>VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>fragmentSize.height</code> <strong class=\"purple\">must</strong> be a power-of-two value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-04498",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and <code>VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>fragmentSize.width</code> <strong class=\"purple\">must</strong> be less than or equal to <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-04499",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and <code>VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>fragmentSize.height</code> <strong class=\"purple\">must</strong> be less than or equal to <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-04500",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and <code>VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, and the <a href=\"#features-pipelineFragmentShadingRate\"><code>pipelineFragmentShadingRate</code></a> feature is not enabled, <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>fragmentSize.width</code> and <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>fragmentSize.height</code> <strong class=\"purple\">must</strong> both be equal to <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-06567",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and <code>VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>combinerOps</code>[0] <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFragmentShadingRateCombinerOpKHR\">VkFragmentShadingRateCombinerOpKHR</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-06568",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and <code>VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>combinerOps</code>[1] <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFragmentShadingRateCombinerOpKHR\">VkFragmentShadingRateCombinerOpKHR</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-04501",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and <code>VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, and the <a href=\"#features-primitiveFragmentShadingRate\"><code>primitiveFragmentShadingRate</code></a> feature is not enabled, <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>combinerOps</code>[0] <strong class=\"purple\">must</strong> be <code>VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-04502",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and <code>VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, and the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>combinerOps</code>[1] <strong class=\"purple\">must</strong> be <code>VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-primitiveFragmentShadingRateWithMultipleViewports-04503",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and the <a href=\"#limits-primitiveFragmentShadingRateWithMultipleViewports\"><code>primitiveFragmentShadingRateWithMultipleViewports</code></a> limit is not supported, <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, and <a href=\"#VkPipelineViewportStateCreateInfo\">VkPipelineViewportStateCreateInfo</a>::<code>viewportCount</code> is greater than <code>1</code>, entry points specified in <code>pStages</code> <strong class=\"purple\">must</strong> not write to the <code>PrimitiveShadingRateKHR</code> built-in",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-primitiveFragmentShadingRateWithMultipleViewports-04504",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and the <a href=\"#limits-primitiveFragmentShadingRateWithMultipleViewports\"><code>primitiveFragmentShadingRateWithMultipleViewports</code></a> limit is not supported, and entry points specified in <code>pStages</code> write to the <code>ViewportIndex</code> built-in, they <strong class=\"purple\">must</strong> not also write to the <code>PrimitiveShadingRateKHR</code> built-in",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-fragmentShadingRateNonTrivialCombinerOps-04506",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a>, the <a href=\"#limits-fragmentShadingRateNonTrivialCombinerOps\"><code>fragmentShadingRateNonTrivialCombinerOps</code></a> limit is not supported, and <code>VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR</code> is not included in <code>pDynamicState-&gt;pDynamicStates</code>, elements of <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>::<code>combinerOps</code> <strong class=\"purple\">must</strong> be <code>VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR</code> or <code>VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-04807",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> and the <a href=\"#features-vertexInputDynamicState\"><code>vertexInputDynamicState</code></a> feature is not enabled, there <strong class=\"purple\">must</strong> be no element of the <code>pDynamicStates</code> member of <code>pDynamicState</code> set to <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicStates-04800",
          "text": "If the <a href=\"#features-colorWriteEnable\"><code>colorWriteEnable</code></a> feature is not enabled, there <strong class=\"purple\">must</strong> be no element of the <code>pDynamicStates</code> member of <code>pDynamicState</code> set to <code>VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-06600",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a>, <code>pStages</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>stageCount</code> valid <a href=\"#VkPipelineShaderStageCreateInfo\">VkPipelineShaderStageCreateInfo</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pRasterizationState-06601",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, <code>pRasterizationState</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineRasterizationStateCreateInfo\">VkPipelineRasterizationStateCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-layout-06602",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> or <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, <code>layout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-renderPass-06603",
          "text": "If <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a>, or <a href=\"#pipelines-graphics-subsets-fragment-output\">fragment output state</a>, <code>renderPass</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkRenderPass\">VkRenderPass</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-stageCount-06604",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> or <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a>, <code>stageCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-graphicsPipelineLibrary-06606",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> not include <code>VK_PIPELINE_CREATE_LIBRARY_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-conservativePointAndLineRasterization-08892",
          "text": "If <a href=\"#limits-conservativePointAndLineRasterization\"><code>conservativePointAndLineRasterization</code></a> is not supported; the pipeline is being created with <a href=\"#pipelines-graphics-subsets-vertex-input\">vertex input state</a> and <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>; the pipeline does not include a geometry shader; and the value of <a href=\"#VkPipelineInputAssemblyStateCreateInfo\">VkPipelineInputAssemblyStateCreateInfo</a>::<code>topology</code> is <code>VK_PRIMITIVE_TOPOLOGY_POINT_LIST</code>, <code>VK_PRIMITIVE_TOPOLOGY_LINE_LIST</code>, or <code>VK_PRIMITIVE_TOPOLOGY_LINE_STRIP</code>, then <a href=\"#VkPipelineRasterizationConservativeStateCreateInfoEXT\">VkPipelineRasterizationConservativeStateCreateInfoEXT</a>::<code>conservativeRasterizationMode</code> <strong class=\"purple\">must</strong> be <code>VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-conservativePointAndLineRasterization-06760",
          "text": "If <a href=\"#limits-conservativePointAndLineRasterization\"><code>conservativePointAndLineRasterization</code></a> is not supported, the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, and the pipeline includes a geometry shader with either the <code>OutputPoints</code> or <code>OutputLineStrip</code> execution modes, <a href=\"#VkPipelineRasterizationConservativeStateCreateInfoEXT\">VkPipelineRasterizationConservativeStateCreateInfoEXT</a>::<code>conservativeRasterizationMode</code> <strong class=\"purple\">must</strong> be <code>VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-06894",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a> but not <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a>, elements of <code>pStages</code> <strong class=\"purple\">must</strong> not have <code>stage</code> set to <code>VK_SHADER_STAGE_FRAGMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-06895",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> but not <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, elements of <code>pStages</code> <strong class=\"purple\">must</strong> not have <code>stage</code> set to a shader stage which participates in pre-rasterization",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-06896",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, all elements of <code>pStages</code> <strong class=\"purple\">must</strong> have a <code>stage</code> set to a shader stage which participates in <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> or <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-stage-06897",
          "text": "If the pipeline requires <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and/or <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>, any value of <code>stage</code> <strong class=\"purple\">must</strong> not be set in more than one element of <code>pStages</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-None-08893",
          "text": "The pipeline <strong class=\"purple\">must</strong> be created with <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pStages-08894",
          "text": "If <code>pStages</code> includes a vertex shader stage, the pipeline <strong class=\"purple\">must</strong> be created with <a href=\"#pipelines-graphics-subsets-vertex-input\">vertex input state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-08896",
          "text": "If <code>pDynamicState-&gt;pDynamicStates</code> includes <code>VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE</code>, or if it does not and <code>pRasterizationState-&gt;rasterizerDiscardEnable</code> is <code>VK_FALSE</code>, the pipeline <strong class=\"purple\">must</strong> be created with <a href=\"#pipelines-graphics-subsets-fragment-shader\">fragment shader state</a> and <a href=\"#pipelines-graphics-subsets-fragment-output\">fragment output interface state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-None-09043",
          "text": "If the format of any color attachment is <code>VK_FORMAT_E5B9G9R9_UFLOAT_PACK32</code>, the <code>colorWriteMask</code> member of the corresponding element of <code>pColorBlendState-&gt;pAttachments</code> <strong class=\"purple\">must</strong> either include all of <code>VK_COLOR_COMPONENT_R_BIT</code>, <code>VK_COLOR_COMPONENT_G_BIT</code>, and <code>VK_COLOR_COMPONENT_B_BIT</code>, or none of them",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkPipelineDiscardRectangleStateCreateInfoEXT\">VkPipelineDiscardRectangleStateCreateInfoEXT</a>, <a href=\"#VkPipelineFragmentShadingRateStateCreateInfoKHR\">VkPipelineFragmentShadingRateStateCreateInfoKHR</a>, or <a href=\"#VkPipelineOfflineCreateInfo\">VkPipelineOfflineCreateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineCreateFlagBits\">VkPipelineCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-pDynamicState-parameter",
          "text": "If <code>pDynamicState</code> is not <code>NULL</code>, <code>pDynamicState</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineDynamicStateCreateInfo\">VkPipelineDynamicStateCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkGraphicsPipelineCreateInfo-commonparent",
          "text": "Each of <code>basePipelineHandle</code>, <code>layout</code>, and <code>renderPass</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineDynamicStateCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineDynamicStateCreateInfo-pDynamicStates-01442",
          "text": "Each element of <code>pDynamicStates</code> <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDynamicStateCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDynamicStateCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDynamicStateCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDynamicStateCreateInfo-pDynamicStates-parameter",
          "text": "If <code>dynamicStateCount</code> is not <code>0</code>, <code>pDynamicStates</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>dynamicStateCount</code> valid <a href=\"#VkDynamicState\">VkDynamicState</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyPipeline": {
      "core": [
        {
          "vuid": "VUID-vkDestroyPipeline-pipeline-00765",
          "text": "All submitted commands that refer to <code>pipeline</code> <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyPipeline-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyPipeline-pipeline-parameter",
          "text": "If <code>pipeline</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>pipeline</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipeline\">VkPipeline</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyPipeline-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyPipeline-pipeline-parent",
          "text": "If <code>pipeline</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreatePipelineCache": {
      "core": [
        {
          "vuid": "VUID-vkCreatePipelineCache-pCreateInfo-05045",
          "text": "The contents of the structure pointed to by <code>pCreateInfo</code> and the data pointed to by <code>pCreateInfo-&gt;pInitialData</code> <strong class=\"purple\">must</strong> be the same as specified in one of the <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>pPipelineCacheCreateInfos</code> structures when the device was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreatePipelineCache-device-05068",
          "text": "The number of pipeline caches currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of pipeline caches requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>pipelineCacheRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreatePipelineCache-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreatePipelineCache-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineCacheCreateInfo\">VkPipelineCacheCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreatePipelineCache-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreatePipelineCache-pPipelineCache-parameter",
          "text": "<code>pPipelineCache</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkPipelineCache\">VkPipelineCache</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineCacheCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineCacheCreateInfo-flags-05043",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_CACHE_CREATE_READ_ONLY_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheCreateInfo-flags-05044",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> include <code>VK_PIPELINE_CACHE_CREATE_USE_APPLICATION_STORAGE_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheCreateInfo-pInitialData-05139",
          "text": "The pipeline cache data pointed to by <code>pInitialData</code> <strong class=\"purple\">must</strong> not contain any pipelines with duplicate pipeline identifiers.",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineCacheCreateFlagBits\">VkPipelineCacheCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheCreateInfo-pInitialData-parameter",
          "text": "<code>pInitialData</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>initialDataSize</code> bytes",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheCreateInfo-initialDataSize-arraylength",
          "text": "<code>initialDataSize</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineCacheHeaderVersionOne": {
      "core": [
        {
          "vuid": "VUID-VkPipelineCacheHeaderVersionOne-headerSize-05075",
          "text": "<code>headerSize</code> <strong class=\"purple\">must</strong> be 56",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheHeaderVersionOne-headerVersion-05076",
          "text": "<code>headerVersion</code> <strong class=\"purple\">must</strong> be <code>VK_PIPELINE_CACHE_HEADER_VERSION_SAFETY_CRITICAL_ONE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheHeaderVersionOne-headerSize-08990",
          "text": "<code>headerSize</code> <strong class=\"purple\">must</strong> not exceed the size of the pipeline cache",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheHeaderVersionOne-headerVersion-parameter",
          "text": "<code>headerVersion</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineCacheHeaderVersion\">VkPipelineCacheHeaderVersion</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineCacheHeaderVersionSafetyCriticalOne": {
      "core": [
        {
          "vuid": "VUID-VkPipelineCacheHeaderVersionSafetyCriticalOne-validationVersion-05077",
          "text": "<code>validationVersion</code> <strong class=\"purple\">must</strong> be <code>VK_PIPELINE_CACHE_VALIDATION_VERSION_SAFETY_CRITICAL_ONE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheHeaderVersionSafetyCriticalOne-pipelineIndexStride-05078",
          "text": "<code>pipelineIndexStride</code> <strong class=\"purple\">must</strong> be greater than or equal to 56 (the size of the <a href=\"#VkPipelineCacheSafetyCriticalIndexEntry\">VkPipelineCacheSafetyCriticalIndexEntry</a> structure)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheHeaderVersionSafetyCriticalOne-pipelineIndexOffset-05079",
          "text": "<span class=\"eq\"><code>pipelineIndexOffset</code> + <code>pipelineIndexCount</code> × <code>pipelineIndexStride</code></span> <strong class=\"purple\">must</strong> not exceed the size of the pipeline cache",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheHeaderVersionSafetyCriticalOne-headerVersionOne-parameter",
          "text": "<code>headerVersionOne</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineCacheHeaderVersionOne\">VkPipelineCacheHeaderVersionOne</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheHeaderVersionSafetyCriticalOne-validationVersion-parameter",
          "text": "<code>validationVersion</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineCacheValidationVersion\">VkPipelineCacheValidationVersion</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineCacheSafetyCriticalIndexEntry": {
      "core": [
        {
          "vuid": "VUID-VkPipelineCacheSafetyCriticalIndexEntry-jsonSize-05080",
          "text": "If <code>jsonSize</code> is 0, <code>jsonOffset</code> <strong class=\"purple\">must</strong> be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheSafetyCriticalIndexEntry-jsonSize-05081",
          "text": "If <code>jsonSize</code> is 0, <code>stageIndexCount</code> <strong class=\"purple\">must</strong> be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheSafetyCriticalIndexEntry-jsonSize-08991",
          "text": "If <code>jsonSize</code> is not 0, <span class=\"eq\"><code>jsonOffset</code> +  <code>jsonSize</code></span> <strong class=\"purple\">must</strong> not exceed the size of the pipeline cache",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheSafetyCriticalIndexEntry-stageIndexCount-05082",
          "text": "If <code>stageIndexCount</code> is 0, <code>stageIndexOffset</code> and <code>stageIndexStride</code> <strong class=\"purple\">must</strong> be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheSafetyCriticalIndexEntry-stageIndexCount-05083",
          "text": "If <code>stageIndexCount</code> is not 0, <code>stageIndexStride</code> <strong class=\"purple\">must</strong> be greater than or equal to 16 (the size of the <a href=\"#VkPipelineCacheStageValidationIndexEntry\">VkPipelineCacheStageValidationIndexEntry</a> structure)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheSafetyCriticalIndexEntry-stageIndexCount-05084",
          "text": "If <code>stageIndexCount</code> is not 0, <span class=\"eq\"><code>stageIndexOffset</code> +  <code>stageIndexCount</code> × <code>stageIndexStride</code></span> <strong class=\"purple\">must</strong> not exceed the size of the pipeline cache",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineCacheStageValidationIndexEntry": {
      "core": [
        {
          "vuid": "VUID-VkPipelineCacheStageValidationIndexEntry-codeSize-05085",
          "text": "<code>codeSize</code> <strong class=\"purple\">must</strong> be greater than 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheStageValidationIndexEntry-codeSize-05086",
          "text": "<code>codeSize</code> <strong class=\"purple\">must</strong> be a multiple of 4",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineCacheStageValidationIndexEntry-codeOffset-05087",
          "text": "<span class=\"eq\"><code>codeOffset</code> +  <code>codeSize</code></span> <strong class=\"purple\">must</strong> not exceed the size of the pipeline cache",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyPipelineCache": {
      "core": [
        {
          "vuid": "VUID-vkDestroyPipelineCache-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyPipelineCache-pipelineCache-parameter",
          "text": "If <code>pipelineCache</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>pipelineCache</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineCache\">VkPipelineCache</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyPipelineCache-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyPipelineCache-pipelineCache-parent",
          "text": "If <code>pipelineCache</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineOfflineCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineOfflineCreateInfo-poolEntrySize-05028",
          "text": "<code>poolEntrySize</code> <strong class=\"purple\">must</strong> be one of the sizes requested via <a href=\"#VkPipelinePoolSize\">VkPipelinePoolSize</a> when the device was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineOfflineCreateInfo-recyclePipelineMemory-05029",
          "text": "If <a href=\"#VkPhysicalDeviceVulkanSC10Properties\">VkPhysicalDeviceVulkanSC10Properties</a>::<code>recyclePipelineMemory</code> is <code>VK_TRUE</code>, the number of currently existing pipelines created with this same value of <code>poolEntrySize</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the sum of the <a href=\"#VkPipelinePoolSize\">VkPipelinePoolSize</a>::<code>poolEntryCount</code> values with the same value of <code>poolEntrySize</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineOfflineCreateInfo-recyclePipelineMemory-05030",
          "text": "If <a href=\"#VkPhysicalDeviceVulkanSC10Properties\">VkPhysicalDeviceVulkanSC10Properties</a>::<code>recyclePipelineMemory</code> is <code>VK_FALSE</code>, the total number of pipelines ever created with this same value of <code>poolEntrySize</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the sum of the <a href=\"#VkPipelinePoolSize\">VkPipelinePoolSize</a>::<code>poolEntryCount</code> values with the same value of <code>poolEntrySize</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineOfflineCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_OFFLINE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineOfflineCreateInfo-matchControl-parameter",
          "text": "<code>matchControl</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineMatchControl\">VkPipelineMatchControl</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkSpecializationInfo": {
      "core": [
        {
          "vuid": "VUID-VkSpecializationInfo-offset-00773",
          "text": "The <code>offset</code> member of each element of <code>pMapEntries</code> <strong class=\"purple\">must</strong> be less than <code>dataSize</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSpecializationInfo-pMapEntries-00774",
          "text": "The <code>size</code> member of each element of <code>pMapEntries</code> <strong class=\"purple\">must</strong> be less than or equal to <code>dataSize</code> minus <code>offset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSpecializationInfo-constantID-04911",
          "text": "The <code>constantID</code> value of each element of <code>pMapEntries</code> <strong class=\"purple\">must</strong> be unique within <code>pMapEntries</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSpecializationInfo-pMapEntries-parameter",
          "text": "If <code>mapEntryCount</code> is not <code>0</code>, <code>pMapEntries</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>mapEntryCount</code> valid <a href=\"#VkSpecializationMapEntry\">VkSpecializationMapEntry</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSpecializationInfo-pData-parameter",
          "text": "If <code>dataSize</code> is not <code>0</code>, <code>pData</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>dataSize</code> bytes",
          "page": "vkspec"
        }
      ]
    },
    "VkSpecializationMapEntry": {
      "core": [
        {
          "vuid": "VUID-VkSpecializationMapEntry-constantID-00776",
          "text": "For a <code>constantID</code> specialization constant declared in a shader, <code>size</code> <strong class=\"purple\">must</strong> match the byte size of the <code>constantID</code>. If the specialization constant is of type <code>boolean</code>, <code>size</code> <strong class=\"purple\">must</strong> be the byte size of <a href=\"#VkBool32\">VkBool32</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdBindPipeline": {
      "core": [
        {
          "vuid": "VUID-vkCmdBindPipeline-pipelineBindPoint-00777",
          "text": "If <code>pipelineBindPoint</code> is <code>VK_PIPELINE_BIND_POINT_COMPUTE</code>, the <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindPipeline-pipelineBindPoint-00778",
          "text": "If <code>pipelineBindPoint</code> is <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>, the <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindPipeline-pipelineBindPoint-00779",
          "text": "If <code>pipelineBindPoint</code> is <code>VK_PIPELINE_BIND_POINT_COMPUTE</code>, <code>pipeline</code> <strong class=\"purple\">must</strong> be a compute pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindPipeline-pipelineBindPoint-00780",
          "text": "If <code>pipelineBindPoint</code> is <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>, <code>pipeline</code> <strong class=\"purple\">must</strong> be a graphics pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindPipeline-pipeline-00781",
          "text": "If the <a href=\"#features-variableMultisampleRate\"><code>variableMultisampleRate</code></a> feature is not supported, <code>pipeline</code> is a graphics pipeline, the current subpass <a href=\"#renderpass-noattachments\">uses no attachments</a>, and this is not the first call to this function with a graphics pipeline after transitioning to the current subpass, then the sample count specified by this pipeline <strong class=\"purple\">must</strong> match that set in the previous pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindPipeline-variableSampleLocations-01525",
          "text": "If <a href=\"#VkPhysicalDeviceSampleLocationsPropertiesEXT\">VkPhysicalDeviceSampleLocationsPropertiesEXT</a>::<code>variableSampleLocations</code> is <code>VK_FALSE</code>, and <code>pipeline</code> is a graphics pipeline created with a <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a> structure having its <code>sampleLocationsEnable</code> member set to <code>VK_TRUE</code> but without <code>VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT</code> enabled then the current render pass instance <strong class=\"purple\">must</strong> have been begun by specifying a <a href=\"#VkRenderPassSampleLocationsBeginInfoEXT\">VkRenderPassSampleLocationsBeginInfoEXT</a> structure whose <code>pPostSubpassSampleLocations</code> member contains an element with a <code>subpassIndex</code> matching the current subpass index and the <code>sampleLocationsInfo</code> member of that element <strong class=\"purple\">must</strong> match the <code>sampleLocationsInfo</code> specified in <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a> when the pipeline was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindPipeline-commandBuffer-04809",
          "text": "If <code>commandBuffer</code> is a secondary command buffer with <code>VkCommandBufferInheritanceViewportScissorInfoNV</code>::<code>viewportScissor2D</code> enabled and <code>pipelineBindPoint</code> is <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code> and <code>pipeline</code> was created with <a href=\"#VkPipelineDiscardRectangleStateCreateInfoEXT\">VkPipelineDiscardRectangleStateCreateInfoEXT</a> structure and its <code>discardRectangleCount</code> member is not <code>0</code>, or the pipeline was created with <code>VK_DYNAMIC_STATE_DISCARD_RECTANGLE_ENABLE_EXT</code> enabled, then the pipeline <strong class=\"purple\">must</strong> have been created with <code>VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT</code> enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindPipeline-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindPipeline-pipelineBindPoint-parameter",
          "text": "<code>pipelineBindPoint</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineBindPoint\">VkPipelineBindPoint</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindPipeline-pipeline-parameter",
          "text": "<code>pipeline</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipeline\">VkPipeline</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindPipeline-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindPipeline-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindPipeline-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>pipeline</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceMemoryProperties": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceMemoryProperties-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceMemoryProperties-pMemoryProperties-parameter",
          "text": "<code>pMemoryProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkPhysicalDeviceMemoryProperties\">VkPhysicalDeviceMemoryProperties</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceMemoryProperties2": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceMemoryProperties2-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceMemoryProperties2-pMemoryProperties-parameter",
          "text": "<code>pMemoryProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkPhysicalDeviceMemoryProperties2\">VkPhysicalDeviceMemoryProperties2</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceMemoryProperties2": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceMemoryProperties2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceMemoryProperties2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkPhysicalDeviceMemoryBudgetPropertiesEXT\">VkPhysicalDeviceMemoryBudgetPropertiesEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceMemoryProperties2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceMemoryBudgetPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceMemoryBudgetPropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkAllocateMemory": {
      "core": [
        {
          "vuid": "VUID-vkAllocateMemory-pAllocateInfo-01713",
          "text": "<code>pAllocateInfo-&gt;allocationSize</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceMemoryProperties\">VkPhysicalDeviceMemoryProperties</a>::<code>memoryHeaps</code>[<code>memindex</code>].<code>size</code> where <code>memindex</code> = <a href=\"#VkPhysicalDeviceMemoryProperties\">VkPhysicalDeviceMemoryProperties</a>::<code>memoryTypes</code>[<code>pAllocateInfo-&gt;memoryTypeIndex</code>].<code>heapIndex</code> as returned by <a href=\"#vkGetPhysicalDeviceMemoryProperties\">vkGetPhysicalDeviceMemoryProperties</a> for the <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> that <code>device</code> was created from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateMemory-pAllocateInfo-01714",
          "text": "<code>pAllocateInfo-&gt;memoryTypeIndex</code> <strong class=\"purple\">must</strong> be less than <a href=\"#VkPhysicalDeviceMemoryProperties\">VkPhysicalDeviceMemoryProperties</a>::<code>memoryTypeCount</code> as returned by <a href=\"#vkGetPhysicalDeviceMemoryProperties\">vkGetPhysicalDeviceMemoryProperties</a> for the <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> that <code>device</code> was created from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateMemory-maxMemoryAllocationCount-04101",
          "text": "There <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxMemoryAllocationCount</code> device memory allocations currently allocated on the device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateMemory-device-05068",
          "text": "The number of device memory objects currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of device memory objects requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>deviceMemoryRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateMemory-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateMemory-pAllocateInfo-parameter",
          "text": "<code>pAllocateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkMemoryAllocateInfo\">VkMemoryAllocateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateMemory-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateMemory-pMemory-parameter",
          "text": "<code>pMemory</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkMemoryAllocateInfo": {
      "core": [
        {
          "vuid": "VUID-VkMemoryAllocateInfo-allocationSize-07897",
          "text": "If the parameters do not define an <a href=\"#memory-import-operation\">import or export operation</a>, <code>allocationSize</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-None-06657",
          "text": "The parameters <strong class=\"purple\">must</strong> not define more than one <a href=\"#memory-import-operation\">import operation</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-allocationSize-07899",
          "text": "If the parameters define an export operation , <code>allocationSize</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-allocationSize-01742",
          "text": "If the parameters define an import operation, the external handle specified was created by the Vulkan API, and the external handle type is <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT</code>, then the values of <code>allocationSize</code> and <code>memoryTypeIndex</code> <strong class=\"purple\">must</strong> match those specified when the payload being imported was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-memoryTypeIndex-00648",
          "text": "If the parameters define an import operation and the external handle is a POSIX file descriptor created outside of the Vulkan API, the value of <code>memoryTypeIndex</code> <strong class=\"purple\">must</strong> be one of those returned by <a href=\"#vkGetMemoryFdPropertiesKHR\">vkGetMemoryFdPropertiesKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-memoryTypeIndex-01872",
          "text": "If the <a href=\"#features-protectedMemory\"><code>protectedMemory</code></a> feature is not enabled, the <code>VkMemoryAllocateInfo</code>::<code>memoryTypeIndex</code> <strong class=\"purple\">must</strong> not indicate a memory type that reports <code>VK_MEMORY_PROPERTY_PROTECTED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-memoryTypeIndex-01744",
          "text": "If the parameters define an import operation and the external handle is a host pointer, the value of <code>memoryTypeIndex</code> <strong class=\"purple\">must</strong> be one of those returned by <a href=\"#vkGetMemoryHostPointerPropertiesEXT\">vkGetMemoryHostPointerPropertiesEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-allocationSize-01745",
          "text": "If the parameters define an import operation and the external handle is a host pointer, <code>allocationSize</code> <strong class=\"purple\">must</strong> be an integer multiple of <code>VkPhysicalDeviceExternalMemoryHostPropertiesEXT</code>::<code>minImportedHostPointerAlignment</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-screenBufferImport-08941",
          "text": "If the parameters define an import operation and the external handle type is <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCREEN_BUFFER_BIT_QNX</code>, <a href=\"#VkPhysicalDeviceExternalMemoryScreenBufferFeaturesQNX\">VkPhysicalDeviceExternalMemoryScreenBufferFeaturesQNX</a>::<code>screenBufferImport</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-allocationSize-08942",
          "text": "If the parameters define an import operation and the external handle type is <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCREEN_BUFFER_BIT_QNX</code>, <code>allocationSize</code> <strong class=\"purple\">must</strong> be the size returned by <a href=\"#vkGetScreenBufferPropertiesQNX\">vkGetScreenBufferPropertiesQNX</a> for the QNX Screen buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-memoryTypeIndex-08943",
          "text": "If the parameters define an import operation and the external handle type is <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCREEN_BUFFER_BIT_QNX</code>, <code>memoryTypeIndex</code> <strong class=\"purple\">must</strong> be one of those returned by <a href=\"#vkGetScreenBufferPropertiesQNX\">vkGetScreenBufferPropertiesQNX</a> for the QNX Screen buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-pNext-08944",
          "text": "If the parameters define an import operation, the external handle is a QNX Screen buffer, and the <code>pNext</code> chain includes a <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a> with <code>image</code> that is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, the QNX Screen&#8217;s buffer must be a <a href=\"#memory-external-screen-buffer-validity\">valid QNX Screen buffer</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-pNext-08945",
          "text": "If the parameters define an import operation, the external handle is an QNX Screen buffer, and the <code>pNext</code> chain includes a <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a> with <code>image</code> that is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, the format of <code>image</code> <strong class=\"purple\">must</strong> be <code>VK_FORMAT_UNDEFINED</code> or the format returned by <a href=\"#vkGetScreenBufferPropertiesQNX\">vkGetScreenBufferPropertiesQNX</a> in <a href=\"#VkScreenBufferFormatPropertiesQNX\">VkScreenBufferFormatPropertiesQNX</a>::<code>format</code> for the QNX Screen buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-pNext-08946",
          "text": "If the parameters define an import operation, the external handle is a QNX Screen buffer, and the <code>pNext</code> chain includes a <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a> structure with <code>image</code> that is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, the width, height, and array layer dimensions of <code>image</code> and the QNX Screen buffer&#8217;s <code>_screen_buffer</code> must be identical",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-opaqueCaptureAddress-03329",
          "text": "If <a href=\"#VkMemoryOpaqueCaptureAddressAllocateInfo\">VkMemoryOpaqueCaptureAddressAllocateInfo</a>::<code>opaqueCaptureAddress</code> is not zero, <code>VkMemoryAllocateFlagsInfo</code>::<code>flags</code> <strong class=\"purple\">must</strong> include <code>VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-flags-03330",
          "text": "If <code>VkMemoryAllocateFlagsInfo</code>::<code>flags</code> includes <code>VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT</code>, the <a href=\"#features-bufferDeviceAddressCaptureReplay\"><code>bufferDeviceAddressCaptureReplay</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-flags-03331",
          "text": "If <code>VkMemoryAllocateFlagsInfo</code>::<code>flags</code> includes <code>VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT</code>, the <a href=\"#features-bufferDeviceAddress\"><code>bufferDeviceAddress</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-pNext-03332",
          "text": "If the <code>pNext</code> chain includes a <code>VkImportMemoryHostPointerInfoEXT</code> structure, <a href=\"#VkMemoryOpaqueCaptureAddressAllocateInfo\">VkMemoryOpaqueCaptureAddressAllocateInfo</a>::<code>opaqueCaptureAddress</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-opaqueCaptureAddress-03333",
          "text": "If the parameters define an import operation, <a href=\"#VkMemoryOpaqueCaptureAddressAllocateInfo\">VkMemoryOpaqueCaptureAddressAllocateInfo</a>::<code>opaqueCaptureAddress</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-pNext-05097",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkExportMemorySciBufInfoNV\">VkExportMemorySciBufInfoNV</a> structure, <a href=\"#VkPhysicalDeviceExternalMemorySciBufFeaturesNV\">VkPhysicalDeviceExternalMemorySciBufFeaturesNV</a>::<code>sciBufExport</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-pNext-05098",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkImportMemorySciBufInfoNV\">VkImportMemorySciBufInfoNV</a> structure, <a href=\"#VkPhysicalDeviceExternalMemorySciBufFeaturesNV\">VkPhysicalDeviceExternalMemorySciBufFeaturesNV</a>::<code>sciBufImport</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-memoryTypeIndex-05099",
          "text": "If the parameters define an import operation and the external handle is a <code>NvSciBufObj</code>, the value of <code>memoryTypeIndex</code> <strong class=\"purple\">must</strong> be one of those returned by <a href=\"#vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV\">vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkExportMemoryAllocateInfo\">VkExportMemoryAllocateInfo</a>, <a href=\"#VkExportMemorySciBufInfoNV\">VkExportMemorySciBufInfoNV</a>, <a href=\"#VkImportMemoryFdInfoKHR\">VkImportMemoryFdInfoKHR</a>, <a href=\"#VkImportMemoryHostPointerInfoEXT\">VkImportMemoryHostPointerInfoEXT</a>, <a href=\"#VkImportMemorySciBufInfoNV\">VkImportMemorySciBufInfoNV</a>, <a href=\"#VkImportScreenBufferInfoQNX\">VkImportScreenBufferInfoQNX</a>, <a href=\"#VkMemoryAllocateFlagsInfo\">VkMemoryAllocateFlagsInfo</a>, <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>, or <a href=\"#VkMemoryOpaqueCaptureAddressAllocateInfo\">VkMemoryOpaqueCaptureAddressAllocateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        }
      ]
    },
    "VkMemoryDedicatedAllocateInfo": {
      "core": [
        {
          "vuid": "VUID-VkMemoryDedicatedAllocateInfo-image-01432",
          "text": "At least one of <code>image</code> and <code>buffer</code> <strong class=\"purple\">must</strong> be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryDedicatedAllocateInfo-image-02964",
          "text": "If <code>image</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>     and the memory is not an imported QNX Screen buffer     , <code>VkMemoryAllocateInfo</code>::<code>allocationSize</code> <strong class=\"purple\">must</strong> equal the     <code>VkMemoryRequirements</code>::<code>size</code> of the image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryDedicatedAllocateInfo-image-01434",
          "text": "If <code>image</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>image</code> <strong class=\"purple\">must</strong> have been created without <code>VK_IMAGE_CREATE_SPARSE_BINDING_BIT</code> set in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>flags</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryDedicatedAllocateInfo-buffer-02965",
          "text": "If <code>buffer</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>     and the memory is not an imported QNX Screen buffer     , <code>VkMemoryAllocateInfo</code>::<code>allocationSize</code> <strong class=\"purple\">must</strong> equal the     <code>VkMemoryRequirements</code>::<code>size</code> of the buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryDedicatedAllocateInfo-buffer-01436",
          "text": "If <code>buffer</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>buffer</code> <strong class=\"purple\">must</strong> have been created without <code>VK_BUFFER_CREATE_SPARSE_BINDING_BIT</code> set in <a href=\"#VkBufferCreateInfo\">VkBufferCreateInfo</a>::<code>flags</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryDedicatedAllocateInfo-image-01878",
          "text": "If <code>image</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> and <a href=\"#VkMemoryAllocateInfo\">VkMemoryAllocateInfo</a> defines a memory import operation with handle type <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT</code>, the memory being imported <strong class=\"purple\">must</strong> also be a dedicated image allocation and <code>image</code> <strong class=\"purple\">must</strong> be identical to the image associated with the imported memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryDedicatedAllocateInfo-buffer-01879",
          "text": "If <code>buffer</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> and <a href=\"#VkMemoryAllocateInfo\">VkMemoryAllocateInfo</a> defines a memory import operation with handle type <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT</code>, the memory being imported <strong class=\"purple\">must</strong> also be a dedicated buffer allocation and <code>buffer</code> <strong class=\"purple\">must</strong> be identical to the buffer associated with the imported memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryDedicatedAllocateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryDedicatedAllocateInfo-image-parameter",
          "text": "If <code>image</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryDedicatedAllocateInfo-buffer-parameter",
          "text": "If <code>buffer</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryDedicatedAllocateInfo-commonparent",
          "text": "Both of <code>buffer</code>, and <code>image</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkExportMemoryAllocateInfo": {
      "core": [
        {
          "vuid": "VUID-VkExportMemoryAllocateInfo-handleTypes-00656",
          "text": "The bits in <code>handleTypes</code> <strong class=\"purple\">must</strong> be supported and compatible, as reported by <a href=\"#VkExternalImageFormatProperties\">VkExternalImageFormatProperties</a> or <a href=\"#VkExternalBufferProperties\">VkExternalBufferProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExportMemoryAllocateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExportMemoryAllocateInfo-handleTypes-parameter",
          "text": "<code>handleTypes</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkImportMemoryFdInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkImportMemoryFdInfoKHR-handleType-00667",
          "text": "If <code>handleType</code> is not <code>0</code>, it <strong class=\"purple\">must</strong> be supported for import, as reported by <a href=\"#VkExternalImageFormatProperties\">VkExternalImageFormatProperties</a> or <a href=\"#VkExternalBufferProperties\">VkExternalBufferProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryFdInfoKHR-fd-00668",
          "text": "The memory from which <code>fd</code> was exported <strong class=\"purple\">must</strong> have been created on the same underlying physical device as <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryFdInfoKHR-handleType-00669",
          "text": "If <code>handleType</code> is not <code>0</code>, it <strong class=\"purple\">must</strong> be <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT</code> or <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryFdInfoKHR-handleType-00670",
          "text": "If <code>handleType</code> is not <code>0</code>, <code>fd</code> <strong class=\"purple\">must</strong> be a valid handle of the type specified by <code>handleType</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryFdInfoKHR-fd-01746",
          "text": "The memory represented by <code>fd</code> <strong class=\"purple\">must</strong> have been created from a physical device and driver that is compatible with <code>device</code> and <code>handleType</code>, as described in <a href=\"#external-memory-handle-types-compatibility\">External memory handle types compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryFdInfoKHR-fd-01520",
          "text": "<code>fd</code> <strong class=\"purple\">must</strong> obey any requirements listed for <code>handleType</code> in <a href=\"#external-memory-handle-types-compatibility\">external memory handle types compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryFdInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryFdInfoKHR-handleType-parameter",
          "text": "If <code>handleType</code> is not <code>0</code>, <code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkGetMemoryFdKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetMemoryFdKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryFdKHR-pGetFdInfo-parameter",
          "text": "<code>pGetFdInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkMemoryGetFdInfoKHR\">VkMemoryGetFdInfoKHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryFdKHR-pFd-parameter",
          "text": "<code>pFd</code> <strong class=\"purple\">must</strong> be a valid pointer to an <code>int</code> value",
          "page": "vkspec"
        }
      ]
    },
    "VkMemoryGetFdInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkMemoryGetFdInfoKHR-handleType-00671",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> have been included in <a href=\"#VkExportMemoryAllocateInfo\">VkExportMemoryAllocateInfo</a>::<code>handleTypes</code> when <code>memory</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryGetFdInfoKHR-handleType-00672",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT</code> or <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryGetFdInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryGetFdInfoKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryGetFdInfoKHR-memory-parameter",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryGetFdInfoKHR-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkGetMemoryFdPropertiesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetMemoryFdPropertiesKHR-fd-00673",
          "text": "<code>fd</code> <strong class=\"purple\">must</strong> point to a valid POSIX file descriptor memory handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryFdPropertiesKHR-handleType-00674",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> not be <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryFdPropertiesKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryFdPropertiesKHR-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryFdPropertiesKHR-pMemoryFdProperties-parameter",
          "text": "<code>pMemoryFdProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkMemoryFdPropertiesKHR\">VkMemoryFdPropertiesKHR</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkMemoryFdPropertiesKHR": {
      "core": [
        {
          "vuid": "VUID-VkMemoryFdPropertiesKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryFdPropertiesKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkImportMemoryHostPointerInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkImportMemoryHostPointerInfoEXT-handleType-01747",
          "text": "If <code>handleType</code> is not <code>0</code>, it <strong class=\"purple\">must</strong> be supported for import, as reported in <a href=\"#VkExternalMemoryProperties\">VkExternalMemoryProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryHostPointerInfoEXT-handleType-01748",
          "text": "If <code>handleType</code> is not <code>0</code>, it <strong class=\"purple\">must</strong> be <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT</code> or <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryHostPointerInfoEXT-pHostPointer-01749",
          "text": "<code>pHostPointer</code> <strong class=\"purple\">must</strong> be a pointer aligned to an integer multiple of <code>VkPhysicalDeviceExternalMemoryHostPropertiesEXT</code>::<code>minImportedHostPointerAlignment</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryHostPointerInfoEXT-handleType-01750",
          "text": "If <code>handleType</code> is <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT</code>, <code>pHostPointer</code> <strong class=\"purple\">must</strong> be a pointer to <code>allocationSize</code> number of bytes of host memory, where <code>allocationSize</code> is the member of the <code>VkMemoryAllocateInfo</code> structure this structure is chained to",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryHostPointerInfoEXT-handleType-01751",
          "text": "If <code>handleType</code> is <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT</code>, <code>pHostPointer</code> <strong class=\"purple\">must</strong> be a pointer to <code>allocationSize</code> number of bytes of host mapped foreign memory, where <code>allocationSize</code> is the member of the <code>VkMemoryAllocateInfo</code> structure this structure is chained to",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryHostPointerInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryHostPointerInfoEXT-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemoryHostPointerInfoEXT-pHostPointer-parameter",
          "text": "<code>pHostPointer</code> <strong class=\"purple\">must</strong> be a pointer value",
          "page": "vkspec"
        }
      ]
    },
    "vkGetMemoryHostPointerPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-vkGetMemoryHostPointerPropertiesEXT-handleType-01752",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT</code> or <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryHostPointerPropertiesEXT-pHostPointer-01753",
          "text": "<code>pHostPointer</code> <strong class=\"purple\">must</strong> be a pointer aligned to an integer multiple of <code>VkPhysicalDeviceExternalMemoryHostPropertiesEXT</code>::<code>minImportedHostPointerAlignment</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryHostPointerPropertiesEXT-handleType-01754",
          "text": "If <code>handleType</code> is <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT</code>, <code>pHostPointer</code> <strong class=\"purple\">must</strong> be a pointer to host memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryHostPointerPropertiesEXT-handleType-01755",
          "text": "If <code>handleType</code> is <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT</code>, <code>pHostPointer</code> <strong class=\"purple\">must</strong> be a pointer to host mapped foreign memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryHostPointerPropertiesEXT-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryHostPointerPropertiesEXT-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryHostPointerPropertiesEXT-pHostPointer-parameter",
          "text": "<code>pHostPointer</code> <strong class=\"purple\">must</strong> be a pointer value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemoryHostPointerPropertiesEXT-pMemoryHostPointerProperties-parameter",
          "text": "<code>pMemoryHostPointerProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkMemoryHostPointerPropertiesEXT\">VkMemoryHostPointerPropertiesEXT</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkMemoryHostPointerPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkMemoryHostPointerPropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryHostPointerPropertiesEXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkExportMemorySciBufInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkExportMemorySciBufInfoNV-pAttributes-05100",
          "text": "<code>pAttributes</code> <strong class=\"purple\">must</strong> be a reconciled <code>NvSciBufAttrList</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExportMemorySciBufInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXPORT_MEMORY_SCI_BUF_INFO_NV</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceSciBufAttributesNV": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceSciBufAttributesNV-pAttributes-05101",
          "text": "<code>pAttributes</code> <strong class=\"purple\">must</strong> be a valid <code>NvSciBufAttrList</code> and <strong class=\"purple\">must</strong> not be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSciBufAttributesNV-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkImportMemorySciBufInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkImportMemorySciBufInfoNV-handleType-05102",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCI_BUF_BIT_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemorySciBufInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMPORT_MEMORY_SCI_BUF_INFO_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportMemorySciBufInfoNV-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkGetMemorySciBufNV": {
      "core": [
        {
          "vuid": "VUID-vkGetMemorySciBufNV-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemorySciBufNV-pGetSciBufInfo-parameter",
          "text": "<code>pGetSciBufInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkMemoryGetSciBufInfoNV\">VkMemoryGetSciBufInfoNV</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetMemorySciBufNV-pHandle-parameter",
          "text": "<code>pHandle</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>NvSciBufObj</code> value",
          "page": "vkspec"
        }
      ]
    },
    "VkMemoryGetSciBufInfoNV": {
      "core": [
        {
          "vuid": "VUID-VkMemoryGetSciBufInfoNV-handleType-05103",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCI_BUF_BIT_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryGetSciBufInfoNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_GET_SCI_BUF_INFO_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryGetSciBufInfoNV-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryGetSciBufInfoNV-memory-parameter",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryGetSciBufInfoNV-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV-handleType-05104",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCI_BUF_BIT_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV-sciBufImport-05105",
          "text": "<a href=\"#VkPhysicalDeviceExternalMemorySciBufFeaturesNV\">VkPhysicalDeviceExternalMemorySciBufFeaturesNV</a>::<code>sciBufImport</code> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV-pMemorySciBufProperties-parameter",
          "text": "<code>pMemorySciBufProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkMemorySciBufPropertiesNV\">VkMemorySciBufPropertiesNV</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkMemorySciBufPropertiesNV": {
      "core": [
        {
          "vuid": "VUID-VkMemorySciBufPropertiesNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_SCI_BUF_PROPERTIES_NV</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemorySciBufPropertiesNV-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkImportScreenBufferInfoQNX": {
      "core": [
        {
          "vuid": "VUID-VkImportScreenBufferInfoQNX-buffer-08966",
          "text": "If <code>buffer</code> is not <code>NULL</code>, QNX Screen Buffers <strong class=\"purple\">must</strong> be supported for import, as reported by <a href=\"#VkExternalImageFormatProperties\">VkExternalImageFormatProperties</a> or <a href=\"#VkExternalBufferProperties\">VkExternalBufferProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportScreenBufferInfoQNX-buffer-08967",
          "text": "<code>buffer</code> is not <code>NULL</code>, it <strong class=\"purple\">must</strong> be a pointer to <a href=\"#memory-external-screen-buffer-validity\">valid QNX Screen buffer</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImportScreenBufferInfoQNX-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMPORT_SCREEN_BUFFER_INFO_QNX</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetScreenBufferPropertiesQNX": {
      "core": [
        {
          "vuid": "VUID-vkGetScreenBufferPropertiesQNX-buffer-08968",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a <a href=\"#memory-external-screen-buffer-validity\">valid QNX Screen buffer</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetScreenBufferPropertiesQNX-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetScreenBufferPropertiesQNX-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <code>_screen_buffer</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetScreenBufferPropertiesQNX-pProperties-parameter",
          "text": "<code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkScreenBufferPropertiesQNX\">VkScreenBufferPropertiesQNX</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkScreenBufferPropertiesQNX": {
      "core": [
        {
          "vuid": "VUID-VkScreenBufferPropertiesQNX-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SCREEN_BUFFER_PROPERTIES_QNX</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkScreenBufferPropertiesQNX-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkScreenBufferFormatPropertiesQNX\">VkScreenBufferFormatPropertiesQNX</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkScreenBufferPropertiesQNX-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        }
      ]
    },
    "VkScreenBufferFormatPropertiesQNX": {
      "core": [
        {
          "vuid": "VUID-VkScreenBufferFormatPropertiesQNX-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SCREEN_BUFFER_FORMAT_PROPERTIES_QNX</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkMemoryAllocateFlagsInfo": {
      "core": [
        {
          "vuid": "VUID-VkMemoryAllocateFlagsInfo-deviceMask-00675",
          "text": "If <code>VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT</code> is set, <code>deviceMask</code> <strong class=\"purple\">must</strong> be a valid device mask",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateFlagsInfo-deviceMask-00676",
          "text": "If <code>VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT</code> is set, <code>deviceMask</code> <strong class=\"purple\">must</strong> not be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateFlagsInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryAllocateFlagsInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkMemoryAllocateFlagBits\">VkMemoryAllocateFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkMemoryOpaqueCaptureAddressAllocateInfo": {
      "core": [
        {
          "vuid": "VUID-VkMemoryOpaqueCaptureAddressAllocateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkMapMemory": {
      "core": [
        {
          "vuid": "VUID-vkMapMemory-memory-00678",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> not be currently host mapped",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkMapMemory-offset-00679",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be less than the size of <code>memory</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkMapMemory-size-00680",
          "text": "If <code>size</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>size</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkMapMemory-size-00681",
          "text": "If <code>size</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>size</code> <strong class=\"purple\">must</strong> be less than or equal to the size of the <code>memory</code> minus <code>offset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkMapMemory-memory-00682",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> have been created with a memory type that reports <code>VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkMapMemory-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkMapMemory-memory-parameter",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkMapMemory-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkMapMemory-ppData-parameter",
          "text": "<code>ppData</code> <strong class=\"purple\">must</strong> be a valid pointer to a pointer value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkMapMemory-memory-parent",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkFlushMappedMemoryRanges": {
      "core": [
        {
          "vuid": "VUID-vkFlushMappedMemoryRanges-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFlushMappedMemoryRanges-pMemoryRanges-parameter",
          "text": "<code>pMemoryRanges</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>memoryRangeCount</code> valid <a href=\"#VkMappedMemoryRange\">VkMappedMemoryRange</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFlushMappedMemoryRanges-memoryRangeCount-arraylength",
          "text": "<code>memoryRangeCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkInvalidateMappedMemoryRanges": {
      "core": [
        {
          "vuid": "VUID-vkInvalidateMappedMemoryRanges-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkInvalidateMappedMemoryRanges-pMemoryRanges-parameter",
          "text": "<code>pMemoryRanges</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>memoryRangeCount</code> valid <a href=\"#VkMappedMemoryRange\">VkMappedMemoryRange</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkInvalidateMappedMemoryRanges-memoryRangeCount-arraylength",
          "text": "<code>memoryRangeCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkMappedMemoryRange": {
      "core": [
        {
          "vuid": "VUID-VkMappedMemoryRange-memory-00684",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> be currently host mapped",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMappedMemoryRange-size-00685",
          "text": "If <code>size</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>offset</code> and <code>size</code> <strong class=\"purple\">must</strong> specify a range contained within the currently mapped range of <code>memory</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMappedMemoryRange-size-00686",
          "text": "If <code>size</code> is equal to <code>VK_WHOLE_SIZE</code>, <code>offset</code> <strong class=\"purple\">must</strong> be within the currently mapped range of <code>memory</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMappedMemoryRange-offset-00687",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be a multiple of <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>nonCoherentAtomSize</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMappedMemoryRange-size-01389",
          "text": "If <code>size</code> is equal to <code>VK_WHOLE_SIZE</code>, the end of the current mapping of <code>memory</code> <strong class=\"purple\">must</strong> either be a multiple of <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>nonCoherentAtomSize</code> bytes from the beginning of the memory object, or be equal to the end of the memory object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMappedMemoryRange-size-01390",
          "text": "If <code>size</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>size</code> <strong class=\"purple\">must</strong> either be a multiple of <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>nonCoherentAtomSize</code>, or <code>offset</code> plus <code>size</code> <strong class=\"purple\">must</strong> equal the size of <code>memory</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMappedMemoryRange-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMappedMemoryRange-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMappedMemoryRange-memory-parameter",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkUnmapMemory": {
      "core": [
        {
          "vuid": "VUID-vkUnmapMemory-memory-00689",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> be currently host mapped",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkUnmapMemory-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkUnmapMemory-memory-parameter",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkUnmapMemory-memory-parent",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDeviceMemoryCommitment": {
      "core": [
        {
          "vuid": "VUID-vkGetDeviceMemoryCommitment-memory-00690",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> have been created with a memory type that reports <code>VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceMemoryCommitment-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceMemoryCommitment-memory-parameter",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceMemoryCommitment-pCommittedMemoryInBytes-parameter",
          "text": "<code>pCommittedMemoryInBytes</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkDeviceSize\">VkDeviceSize</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceMemoryCommitment-memory-parent",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDeviceGroupPeerMemoryFeatures": {
      "core": [
        {
          "vuid": "VUID-vkGetDeviceGroupPeerMemoryFeatures-heapIndex-00691",
          "text": "<code>heapIndex</code> <strong class=\"purple\">must</strong> be less than <code>memoryHeapCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceGroupPeerMemoryFeatures-localDeviceIndex-00692",
          "text": "<code>localDeviceIndex</code> <strong class=\"purple\">must</strong> be a valid device index",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceGroupPeerMemoryFeatures-remoteDeviceIndex-00693",
          "text": "<code>remoteDeviceIndex</code> <strong class=\"purple\">must</strong> be a valid device index",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceGroupPeerMemoryFeatures-localDeviceIndex-00694",
          "text": "<code>localDeviceIndex</code> <strong class=\"purple\">must</strong> not equal <code>remoteDeviceIndex</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceGroupPeerMemoryFeatures-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceGroupPeerMemoryFeatures-pPeerMemoryFeatures-parameter",
          "text": "<code>pPeerMemoryFeatures</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkPeerMemoryFeatureFlags\">VkPeerMemoryFeatureFlags</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDeviceMemoryOpaqueCaptureAddress": {
      "core": [
        {
          "vuid": "VUID-vkGetDeviceMemoryOpaqueCaptureAddress-None-03334",
          "text": "The <a href=\"#features-bufferDeviceAddress\"><code>bufferDeviceAddress</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceMemoryOpaqueCaptureAddress-device-03335",
          "text": "If <code>device</code> was created with multiple physical devices, then the <a href=\"#features-bufferDeviceAddressMultiDevice\"><code>bufferDeviceAddressMultiDevice</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceMemoryOpaqueCaptureAddress-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceMemoryOpaqueCaptureAddress-pInfo-parameter",
          "text": "<code>pInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDeviceMemoryOpaqueCaptureAddressInfo\">VkDeviceMemoryOpaqueCaptureAddressInfo</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceMemoryOpaqueCaptureAddressInfo": {
      "core": [
        {
          "vuid": "VUID-VkDeviceMemoryOpaqueCaptureAddressInfo-memory-03336",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> have been allocated with <code>VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceMemoryOpaqueCaptureAddressInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceMemoryOpaqueCaptureAddressInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceMemoryOpaqueCaptureAddressInfo-memory-parameter",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateBuffer": {
      "core": [
        {
          "vuid": "VUID-vkCreateBuffer-device-05068",
          "text": "The number of buffers currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of buffers requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>bufferRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateBuffer-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateBuffer-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkBufferCreateInfo\">VkBufferCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateBuffer-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateBuffer-pBuffer-parameter",
          "text": "<code>pBuffer</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkBufferCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkBufferCreateInfo-size-00912",
          "text": "<code>size</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-sharingMode-00913",
          "text": "If <code>sharingMode</code> is <code>VK_SHARING_MODE_CONCURRENT</code>, <code>pQueueFamilyIndices</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>queueFamilyIndexCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-sharingMode-00914",
          "text": "If <code>sharingMode</code> is <code>VK_SHARING_MODE_CONCURRENT</code>, <code>queueFamilyIndexCount</code> <strong class=\"purple\">must</strong> be greater than <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-sharingMode-01419",
          "text": "If <code>sharingMode</code> is <code>VK_SHARING_MODE_CONCURRENT</code>, each element of <code>pQueueFamilyIndices</code> <strong class=\"purple\">must</strong> be unique and <strong class=\"purple\">must</strong> be less than <code>pQueueFamilyPropertyCount</code> returned by either <a href=\"#vkGetPhysicalDeviceQueueFamilyProperties2\">vkGetPhysicalDeviceQueueFamilyProperties2</a> or <a href=\"#vkGetPhysicalDeviceQueueFamilyProperties\">vkGetPhysicalDeviceQueueFamilyProperties</a> for the <code>physicalDevice</code> that was used to create <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-flags-00915",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_BUFFER_CREATE_SPARSE_BINDING_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-flags-00916",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-flags-00917",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_BUFFER_CREATE_SPARSE_ALIASED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-pNext-00920",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkExternalMemoryBufferCreateInfo\">VkExternalMemoryBufferCreateInfo</a> structure, its <code>handleTypes</code> member <strong class=\"purple\">must</strong> only contain bits that are also in <a href=\"#VkExternalBufferProperties\">VkExternalBufferProperties</a>::<code>externalMemoryProperties.compatibleHandleTypes</code>, as returned by <a href=\"#vkGetPhysicalDeviceExternalBufferProperties\">vkGetPhysicalDeviceExternalBufferProperties</a> with <code>pExternalBufferInfo-&gt;handleType</code> equal to any one of the handle types specified in <a href=\"#VkExternalMemoryBufferCreateInfo\">VkExternalMemoryBufferCreateInfo</a>::<code>handleTypes</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-flags-01887",
          "text": "If the <a href=\"#features-protectedMemory\"><code>protectedMemory</code></a> feature is not enabled, <code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_BUFFER_CREATE_PROTECTED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-opaqueCaptureAddress-03337",
          "text": "If <a href=\"#VkBufferOpaqueCaptureAddressCreateInfo\">VkBufferOpaqueCaptureAddressCreateInfo</a>::<code>opaqueCaptureAddress</code> is not zero, <code>flags</code> <strong class=\"purple\">must</strong> include <code>VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-flags-03338",
          "text": "If <code>flags</code> includes <code>VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT</code>, the <a href=\"#features-bufferDeviceAddressCaptureReplay\"><code>bufferDeviceAddressCaptureReplay</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-None-09205",
          "text": "<code>usage</code> must be a valid combination of <a href=\"#VkBufferUsageFlagBits\">VkBufferUsageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-None-09206",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkBufferOpaqueCaptureAddressCreateInfo\">VkBufferOpaqueCaptureAddressCreateInfo</a> or <a href=\"#VkExternalMemoryBufferCreateInfo\">VkExternalMemoryBufferCreateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkBufferCreateFlagBits\">VkBufferCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCreateInfo-sharingMode-parameter",
          "text": "<code>sharingMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSharingMode\">VkSharingMode</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkExternalMemoryBufferCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkExternalMemoryBufferCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExternalMemoryBufferCreateInfo-handleTypes-parameter",
          "text": "<code>handleTypes</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkBufferOpaqueCaptureAddressCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkBufferOpaqueCaptureAddressCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyBuffer": {
      "core": [
        {
          "vuid": "VUID-vkDestroyBuffer-buffer-00922",
          "text": "All submitted commands that refer to <code>buffer</code>, either directly or via a <code>VkBufferView</code>, <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyBuffer-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyBuffer-buffer-parameter",
          "text": "If <code>buffer</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyBuffer-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyBuffer-buffer-parent",
          "text": "If <code>buffer</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateBufferView": {
      "core": [
        {
          "vuid": "VUID-vkCreateBufferView-device-05068",
          "text": "The number of buffer views currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of buffer views requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>bufferViewRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateBufferView-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateBufferView-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkBufferViewCreateInfo\">VkBufferViewCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateBufferView-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateBufferView-pView-parameter",
          "text": "<code>pView</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkBufferView\">VkBufferView</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkBufferViewCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkBufferViewCreateInfo-offset-00925",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be less than the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-range-00928",
          "text": "If <code>range</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>range</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-range-00929",
          "text": "If <code>range</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>range</code> <strong class=\"purple\">must</strong> be an integer multiple of the texel block size of <code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-range-00930",
          "text": "If <code>range</code> is not equal to <code>VK_WHOLE_SIZE</code>, the number of texel buffer elements given by <span class=\"eq\">(⌊<code>range</code> / (texel block size)⌋ × (texels per block))</span> where texel block size and texels per block are as defined in the <a href=\"#formats-compatibility\">Compatible Formats</a> table for <code>format</code>, <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxTexelBufferElements</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-offset-00931",
          "text": "If <code>range</code> is not equal to <code>VK_WHOLE_SIZE</code>, the sum of <code>offset</code> and <code>range</code> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-range-04059",
          "text": "If <code>range</code> is equal to <code>VK_WHOLE_SIZE</code>, the number of texel buffer elements given by <span class=\"eq\">(⌊(size - <code>offset</code>) / (texel block size)⌋ × (texels per block))</span> where size is the size of <code>buffer</code>, and texel block size and texels per block are as defined in the <a href=\"#formats-compatibility\">Compatible Formats</a> table for <code>format</code>, <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxTexelBufferElements</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-buffer-00932",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value containing at least one of <code>VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT</code> or <code>VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-format-08778",
          "text": "If the <a href=\"#resources-buffer-views-usage\">buffer view usage</a> contains <code>VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT</code>, then <a href=\"#resources-buffer-view-format-features\">format features</a> of <code>format</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-format-08779",
          "text": "If the <a href=\"#resources-buffer-views-usage\">buffer view usage</a> contains <code>VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT</code>, then <a href=\"#resources-buffer-view-format-features\">format features</a> of <code>format</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-buffer-00935",
          "text": "If <code>buffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-offset-02749",
          "text": "If the <a href=\"#features-texelBufferAlignment\"><code>texelBufferAlignment</code></a> feature is not enabled, <code>offset</code> <strong class=\"purple\">must</strong> be a multiple of <code>VkPhysicalDeviceLimits</code>::<code>minTexelBufferOffsetAlignment</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-buffer-02750",
          "text": "If the <a href=\"#features-texelBufferAlignment\"><code>texelBufferAlignment</code></a> feature is enabled and if <code>buffer</code> was created with <code>usage</code> containing <code>VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT</code>, <code>offset</code> <strong class=\"purple\">must</strong> be a multiple of the lesser of <a href=\"#VkPhysicalDeviceTexelBufferAlignmentProperties\">VkPhysicalDeviceTexelBufferAlignmentProperties</a>::<code>storageTexelBufferOffsetAlignmentBytes</code> or, if <a href=\"#VkPhysicalDeviceTexelBufferAlignmentProperties\">VkPhysicalDeviceTexelBufferAlignmentProperties</a>::<code>storageTexelBufferOffsetSingleTexelAlignment</code> is <code>VK_TRUE</code>, the size of a texel of the requested <code>format</code>. If the size of a texel is a multiple of three bytes, then the size of a single component of <code>format</code> is used instead",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-buffer-02751",
          "text": "If the <a href=\"#features-texelBufferAlignment\"><code>texelBufferAlignment</code></a> feature is enabled and if <code>buffer</code> was created with <code>usage</code> containing <code>VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT</code>, <code>offset</code> <strong class=\"purple\">must</strong> be a multiple of the lesser of <a href=\"#VkPhysicalDeviceTexelBufferAlignmentProperties\">VkPhysicalDeviceTexelBufferAlignmentProperties</a>::<code>uniformTexelBufferOffsetAlignmentBytes</code> or, if <a href=\"#VkPhysicalDeviceTexelBufferAlignmentProperties\">VkPhysicalDeviceTexelBufferAlignmentProperties</a>::<code>uniformTexelBufferOffsetSingleTexelAlignment</code> is <code>VK_TRUE</code>, the size of a texel of the requested <code>format</code>. If the size of a texel is a multiple of three bytes, then the size of a single component of <code>format</code> is used instead",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferViewCreateInfo-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyBufferView": {
      "core": [
        {
          "vuid": "VUID-vkDestroyBufferView-bufferView-00936",
          "text": "All submitted commands that refer to <code>bufferView</code> <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyBufferView-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyBufferView-bufferView-parameter",
          "text": "If <code>bufferView</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>bufferView</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBufferView\">VkBufferView</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyBufferView-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyBufferView-bufferView-parent",
          "text": "If <code>bufferView</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateImage": {
      "core": [
        {
          "vuid": "VUID-vkCreateImage-device-05068",
          "text": "The number of images currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of images requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>imageRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateImage-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateImage-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateImage-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateImage-pImage-parameter",
          "text": "<code>pImage</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkImageCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkImageCreateInfo-imageCreateMaxMipLevels-02251",
          "text": "Each of the following values (as described in <a href=\"#resources-image-creation-limits\">Image Creation Limits</a>) <strong class=\"purple\">must</strong> not be undefined : <code>imageCreateMaxMipLevels</code>, <code>imageCreateMaxArrayLayers</code>, <code>imageCreateMaxExtent</code>, and <code>imageCreateSampleCounts</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-sharingMode-00941",
          "text": "If <code>sharingMode</code> is <code>VK_SHARING_MODE_CONCURRENT</code>, <code>pQueueFamilyIndices</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>queueFamilyIndexCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-sharingMode-00942",
          "text": "If <code>sharingMode</code> is <code>VK_SHARING_MODE_CONCURRENT</code>, <code>queueFamilyIndexCount</code> <strong class=\"purple\">must</strong> be greater than <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-sharingMode-01420",
          "text": "If <code>sharingMode</code> is <code>VK_SHARING_MODE_CONCURRENT</code>, each element of <code>pQueueFamilyIndices</code> <strong class=\"purple\">must</strong> be unique and <strong class=\"purple\">must</strong> be less than <code>pQueueFamilyPropertyCount</code> returned by either <a href=\"#vkGetPhysicalDeviceQueueFamilyProperties\">vkGetPhysicalDeviceQueueFamilyProperties</a> or <a href=\"#vkGetPhysicalDeviceQueueFamilyProperties2\">vkGetPhysicalDeviceQueueFamilyProperties2</a> for the <code>physicalDevice</code> that was used to create <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-00943",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> not be <code>VK_FORMAT_UNDEFINED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-extent-00944",
          "text": "<code>extent.width</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-extent-00945",
          "text": "<code>extent.height</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-extent-00946",
          "text": "<code>extent.depth</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-mipLevels-00947",
          "text": "<code>mipLevels</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-arrayLayers-00948",
          "text": "<code>arrayLayers</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-flags-00949",
          "text": "If <code>flags</code> contains <code>VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT</code>, <code>imageType</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TYPE_2D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-flags-08865",
          "text": "If <code>flags</code> contains <code>VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT</code>, <code>extent.width</code> and <code>extent.height</code> <strong class=\"purple\">must</strong> be equal",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-flags-08866",
          "text": "If <code>flags</code> contains <code>VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT</code>, <code>arrayLayers</code> <strong class=\"purple\">must</strong> be greater than or equal to 6",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-flags-00950",
          "text": "If <code>flags</code> contains <code>VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT</code>, <code>imageType</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TYPE_3D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-flags-09403",
          "text": "If <code>flags</code> contains <code>VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT</code>, <code>flags</code> <strong class=\"purple\">must</strong> not include <code>VK_IMAGE_CREATE_SPARSE_ALIASED_BIT</code>, <code>VK_IMAGE_CREATE_SPARSE_BINDING_BIT</code>, or <code>VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-extent-02252",
          "text": "<code>extent.width</code> <strong class=\"purple\">must</strong> be less than or equal to <code>imageCreateMaxExtent.width</code> (as defined in <a href=\"#resources-image-creation-limits\">Image Creation Limits</a>)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-extent-02253",
          "text": "<code>extent.height</code> <strong class=\"purple\">must</strong> be less than or equal to <code>imageCreateMaxExtent.height</code> (as defined in <a href=\"#resources-image-creation-limits\">Image Creation Limits</a>)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-extent-02254",
          "text": "<code>extent.depth</code> <strong class=\"purple\">must</strong> be less than or equal to <code>imageCreateMaxExtent.depth</code> (as defined in <a href=\"#resources-image-creation-limits\">Image Creation Limits</a>)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-imageType-00956",
          "text": "If <code>imageType</code> is <code>VK_IMAGE_TYPE_1D</code>, both <code>extent.height</code> and <code>extent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-imageType-00957",
          "text": "If <code>imageType</code> is <code>VK_IMAGE_TYPE_2D</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-mipLevels-00958",
          "text": "<code>mipLevels</code> <strong class=\"purple\">must</strong> be less than or equal to the number of levels in the complete mipmap chain based on <span class=\"eq\"><code>extent.width</code></span>, <span class=\"eq\"><code>extent.height</code></span>, and <span class=\"eq\"><code>extent.depth</code></span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-mipLevels-02255",
          "text": "<code>mipLevels</code> <strong class=\"purple\">must</strong> be less than or equal to <code>imageCreateMaxMipLevels</code> (as defined in <a href=\"#resources-image-creation-limits\">Image Creation Limits</a>)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-arrayLayers-02256",
          "text": "<code>arrayLayers</code> <strong class=\"purple\">must</strong> be less than or equal to <code>imageCreateMaxArrayLayers</code> (as defined in <a href=\"#resources-image-creation-limits\">Image Creation Limits</a>)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-imageType-00961",
          "text": "If <code>imageType</code> is <code>VK_IMAGE_TYPE_3D</code>, <code>arrayLayers</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-samples-02257",
          "text": "If <code>samples</code> is not <code>VK_SAMPLE_COUNT_1_BIT</code>, then <code>imageType</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TYPE_2D</code>, <code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT</code>, <code>mipLevels</code> <strong class=\"purple\">must</strong> be equal to <code>1</code>, and <code>imageCreateMaybeLinear</code> (as defined in <a href=\"#resources-image-creation-limits\">Image Creation Limits</a>) <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>,",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-usage-00963",
          "text": "If <code>usage</code> includes <code>VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT</code>, then bits other than <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code>, <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, and <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code> <strong class=\"purple\">must</strong> not be set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-usage-00964",
          "text": "If <code>usage</code> includes <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code>, <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, <code>VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT</code>, or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>, <code>extent.width</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxFramebufferWidth</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-usage-00965",
          "text": "If <code>usage</code> includes <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code>, <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, <code>VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT</code>, or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>, <code>extent.height</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxFramebufferHeight</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-usage-00966",
          "text": "If <code>usage</code> includes <code>VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT</code>, <code>usage</code> <strong class=\"purple\">must</strong> also contain at least one of <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code>, <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-samples-02258",
          "text": "<code>samples</code> <strong class=\"purple\">must</strong> be a bit value that is set in <code>imageCreateSampleCounts</code> (as defined in <a href=\"#resources-image-creation-limits\">Image Creation Limits</a>)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-usage-00968",
          "text": "If the <a href=\"#features-shaderStorageImageMultisample\"><code>shaderStorageImageMultisample</code></a> feature is not enabled, and <code>usage</code> contains <code>VK_IMAGE_USAGE_STORAGE_BIT</code>, <code>samples</code> <strong class=\"purple\">must</strong> be <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-flags-05062",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_IMAGE_CREATE_SPARSE_BINDING_BIT</code>, <code>VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</code>, <code>VK_IMAGE_CREATE_SPARSE_ALIASED_BIT</code>, or <code>VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-flags-01890",
          "text": "If the <a href=\"#features-protectedMemory\"><code>protectedMemory</code></a> feature is not enabled, <code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_IMAGE_CREATE_PROTECTED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-pNext-00990",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkExternalMemoryImageCreateInfo\">VkExternalMemoryImageCreateInfo</a> structure, its <code>handleTypes</code> member <strong class=\"purple\">must</strong> only contain bits that are also in <a href=\"#VkExternalImageFormatProperties\">VkExternalImageFormatProperties</a>::<code>externalMemoryProperties.compatibleHandleTypes</code>, as returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a> with <code>format</code>, <code>imageType</code>, <code>tiling</code>, <code>usage</code>, and <code>flags</code> equal to those in this structure, and with a <a href=\"#VkPhysicalDeviceExternalImageFormatInfo\">VkPhysicalDeviceExternalImageFormatInfo</a> structure included in the <code>pNext</code> chain, with a <code>handleType</code> equal to any one of the handle types specified in <a href=\"#VkExternalMemoryImageCreateInfo\">VkExternalMemoryImageCreateInfo</a>::<code>handleTypes</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-flags-01572",
          "text": "If <code>flags</code> contains <code>VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT</code>, then <code>format</code> <strong class=\"purple\">must</strong> be a <a href=\"#compressed_image_formats\">compressed image format</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-flags-01573",
          "text": "If <code>flags</code> contains <code>VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT</code>, then <code>flags</code> <strong class=\"purple\">must</strong> also contain <code>VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-initialLayout-00993",
          "text": "<code>initialLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_UNDEFINED</code> or <code>VK_IMAGE_LAYOUT_PREINITIALIZED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-pNext-01443",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkExternalMemoryImageCreateInfo\">VkExternalMemoryImageCreateInfo</a> or <code>VkExternalMemoryImageCreateInfoNV</code> structure whose <code>handleTypes</code> member is not <code>0</code>, <code>initialLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_UNDEFINED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-06410",
          "text": "If the image <code>format</code> is one of the <a href=\"#formats-requiring-sampler-ycbcr-conversion\">formats that require a sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, <code>mipLevels</code> <strong class=\"purple\">must</strong> be 1",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-06411",
          "text": "If the image <code>format</code> is one of the <a href=\"#formats-requiring-sampler-ycbcr-conversion\">formats that require a sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, <code>samples</code> <strong class=\"purple\">must</strong> be <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-06412",
          "text": "If the image <code>format</code> is one of the <a href=\"#formats-requiring-sampler-ycbcr-conversion\">formats that require a sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, <code>imageType</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TYPE_2D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-imageCreateFormatFeatures-02260",
          "text": "If <code>format</code> is a <em>multi-planar</em> format, and if <code>imageCreateFormatFeatures</code> (as defined in <a href=\"#resources-image-creation-limits\">Image Creation Limits</a>) does not contain <code>VK_FORMAT_FEATURE_DISJOINT_BIT</code>, then <code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_IMAGE_CREATE_DISJOINT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-01577",
          "text": "If <code>format</code> is not a <em>multi-planar</em> format, and <code>flags</code> does not include <code>VK_IMAGE_CREATE_ALIAS_BIT</code>, <code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_IMAGE_CREATE_DISJOINT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-04712",
          "text": "If <code>format</code> has a <code>_422</code> or <code>_420</code> suffix, <code>width</code> <strong class=\"purple\">must</strong> be a multiple of 2",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-04713",
          "text": "If <code>format</code> has a <code>_420</code> suffix, <code>height</code> <strong class=\"purple\">must</strong> be a multiple of 2",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-tiling-02261",
          "text": "If <code>tiling</code> is <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code>, then the <code>pNext</code> chain <strong class=\"purple\">must</strong> include exactly one of <a href=\"#VkImageDrmFormatModifierListCreateInfoEXT\">VkImageDrmFormatModifierListCreateInfoEXT</a> or <a href=\"#VkImageDrmFormatModifierExplicitCreateInfoEXT\">VkImageDrmFormatModifierExplicitCreateInfoEXT</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-pNext-02262",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkImageDrmFormatModifierListCreateInfoEXT\">VkImageDrmFormatModifierListCreateInfoEXT</a> or <a href=\"#VkImageDrmFormatModifierExplicitCreateInfoEXT\">VkImageDrmFormatModifierExplicitCreateInfoEXT</a> structure, then <code>tiling</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-tiling-02353",
          "text": "If <code>tiling</code> is <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code> and <code>flags</code> contains <code>VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT</code>, then the <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a> structure with non-zero <code>viewFormatCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-flags-01533",
          "text": "If <code>flags</code> contains <code>VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT</code> <code>format</code> <strong class=\"purple\">must</strong> be a depth or depth/stencil format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-pNext-08951",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkExternalMemoryImageCreateInfo\">VkExternalMemoryImageCreateInfo</a> structure whose <code>handleTypes</code> member includes <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCREEN_BUFFER_BIT_QNX</code>, <code>imageType</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TYPE_2D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-pNext-08952",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkExternalMemoryImageCreateInfo\">VkExternalMemoryImageCreateInfo</a> structure whose <code>handleTypes</code> member includes <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCREEN_BUFFER_BIT_QNX</code>, <code>mipLevels</code> <strong class=\"purple\">must</strong> either be <code>1</code> or equal to the number of levels in the complete mipmap chain based on <span class=\"eq\"><code>extent.width</code></span>, <span class=\"eq\"><code>extent.height</code></span>, and <span class=\"eq\"><code>extent.depth</code></span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-pNext-08953",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkExternalFormatQNX\">VkExternalFormatQNX</a> structure whose <code>externalFormat</code> member is not <code>0</code>, <code>flags</code> <strong class=\"purple\">must</strong> not include <code>VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-pNext-08954",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkExternalFormatQNX\">VkExternalFormatQNX</a> structure whose <code>externalFormat</code> member is not <code>0</code>, <code>usage</code> <strong class=\"purple\">must</strong> not include any usages except <code>VK_IMAGE_USAGE_SAMPLED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-pNext-08955",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkExternalFormatQNX\">VkExternalFormatQNX</a> structure whose <code>externalFormat</code> member is not <code>0</code>, <code>tiling</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TILING_OPTIMAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-02795",
          "text": "If <code>format</code> is a depth-stencil format, <code>usage</code> includes <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, and the <code>pNext</code> chain includes a <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a> structure, then its <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a>::<code>stencilUsage</code> member <strong class=\"purple\">must</strong> also include <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-02796",
          "text": "If <code>format</code> is a depth-stencil format, <code>usage</code> does not include <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, and the <code>pNext</code> chain includes a <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a> structure, then its <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a>::<code>stencilUsage</code> member <strong class=\"purple\">must</strong> also not include <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-02797",
          "text": "If <code>format</code> is a depth-stencil format, <code>usage</code> includes <code>VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT</code>, and the <code>pNext</code> chain includes a <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a> structure, then its <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a>::<code>stencilUsage</code> member <strong class=\"purple\">must</strong> also include <code>VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-02798",
          "text": "If <code>format</code> is a depth-stencil format, <code>usage</code> does not include <code>VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT</code>, and the <code>pNext</code> chain includes a <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a> structure, then its <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a>::<code>stencilUsage</code> member <strong class=\"purple\">must</strong> also not include <code>VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-Format-02536",
          "text": "If <code>Format</code> is a depth-stencil format and the <code>pNext</code> chain includes a <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a> structure with its <code>stencilUsage</code> member including <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>, <code>extent.width</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxFramebufferWidth</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-02537",
          "text": "If <code>format</code> is a depth-stencil format and the <code>pNext</code> chain includes a <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a> structure with its <code>stencilUsage</code> member including <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>, <code>extent.height</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxFramebufferHeight</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-02538",
          "text": "If the <a href=\"#features-shaderStorageImageMultisample\"><code>shaderStorageImageMultisample</code></a> feature is not enabled, <code>format</code> is a depth-stencil format and the <code>pNext</code> chain includes a <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a> structure with its <code>stencilUsage</code> including <code>VK_IMAGE_USAGE_STORAGE_BIT</code>, <code>samples</code> <strong class=\"purple\">must</strong> be <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-imageType-02082",
          "text": "If <code>usage</code> includes <code>VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>, <code>imageType</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TYPE_2D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-samples-02083",
          "text": "If <code>usage</code> includes <code>VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>, <code>samples</code> <strong class=\"purple\">must</strong> be <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-pNext-06722",
          "text": "If a <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a> structure was included in the <code>pNext</code> chain and <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>::<code>viewFormatCount</code> is not zero, then each format in <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>::<code>pViewFormats</code> <strong class=\"purple\">must</strong> either be compatible with the <code>format</code> as described in the <a href=\"#formats-compatibility\">compatibility table</a> or, if <code>flags</code> contains <code>VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT</code>, be an uncompressed format that is size-compatible with <code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-flags-04738",
          "text": "If <code>flags</code> does not contain <code>VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT</code> and the <code>pNext</code> chain includes a <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a> structure, then <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>::<code>viewFormatCount</code> <strong class=\"purple\">must</strong> be <code>0</code> or <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkExternalFormatQNX\">VkExternalFormatQNX</a>, <a href=\"#VkExternalMemoryImageCreateInfo\">VkExternalMemoryImageCreateInfo</a>, <a href=\"#VkImageDrmFormatModifierExplicitCreateInfoEXT\">VkImageDrmFormatModifierExplicitCreateInfoEXT</a>, <a href=\"#VkImageDrmFormatModifierListCreateInfoEXT\">VkImageDrmFormatModifierListCreateInfoEXT</a>, <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>, <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a>, or <a href=\"#VkImageSwapchainCreateInfoKHR\">VkImageSwapchainCreateInfoKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageCreateFlagBits\">VkImageCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-imageType-parameter",
          "text": "<code>imageType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageType\">VkImageType</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-samples-parameter",
          "text": "<code>samples</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSampleCountFlagBits\">VkSampleCountFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-tiling-parameter",
          "text": "<code>tiling</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageTiling\">VkImageTiling</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-usage-parameter",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageUsageFlagBits\">VkImageUsageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-usage-requiredbitmask",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-sharingMode-parameter",
          "text": "<code>sharingMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSharingMode\">VkSharingMode</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCreateInfo-initialLayout-parameter",
          "text": "<code>initialLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkImageStencilUsageCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkImageStencilUsageCreateInfo-stencilUsage-02539",
          "text": "If <code>stencilUsage</code> includes <code>VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT</code>, it <strong class=\"purple\">must</strong> not include bits other than <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code> or <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageStencilUsageCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageStencilUsageCreateInfo-stencilUsage-parameter",
          "text": "<code>stencilUsage</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageUsageFlagBits\">VkImageUsageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageStencilUsageCreateInfo-stencilUsage-requiredbitmask",
          "text": "<code>stencilUsage</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkExternalMemoryImageCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkExternalMemoryImageCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExternalMemoryImageCreateInfo-handleTypes-parameter",
          "text": "<code>handleTypes</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkExternalFormatQNX": {
      "core": [
        {
          "vuid": "VUID-VkExternalFormatQNX-externalFormat-08956",
          "text": "<code>externalFormat</code> <strong class=\"purple\">must</strong> be <code>0</code> or a value returned in the <code>externalFormat</code> member of <a href=\"#VkScreenBufferFormatPropertiesQNX\">VkScreenBufferFormatPropertiesQNX</a> by an earlier call to <a href=\"#vkGetScreenBufferPropertiesQNX\">vkGetScreenBufferPropertiesQNX</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExternalFormatQNX-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_QNX</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkImageSwapchainCreateInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkImageSwapchainCreateInfoKHR-swapchain-00995",
          "text": "If <code>swapchain</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, the fields of <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> <strong class=\"purple\">must</strong> match the <a href=\"#swapchain-wsi-image-create-info\">implied image creation parameters</a> of the swapchain",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSwapchainCreateInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSwapchainCreateInfoKHR-swapchain-parameter",
          "text": "If <code>swapchain</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>swapchain</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSwapchainKHR\">VkSwapchainKHR</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkImageFormatListCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkImageFormatListCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageFormatListCreateInfo-pViewFormats-parameter",
          "text": "If <code>viewFormatCount</code> is not <code>0</code>, <code>pViewFormats</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>viewFormatCount</code> valid <a href=\"#VkFormat\">VkFormat</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkImageDrmFormatModifierListCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkImageDrmFormatModifierListCreateInfoEXT-pDrmFormatModifiers-02263",
          "text": "Each <em>modifier</em> in <code>pDrmFormatModifiers</code> <strong class=\"purple\">must</strong> be compatible with the parameters in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> and its <code>pNext</code> chain, as determined by querying <a href=\"#VkPhysicalDeviceImageFormatInfo2\">VkPhysicalDeviceImageFormatInfo2</a> extended with <a href=\"#VkPhysicalDeviceImageDrmFormatModifierInfoEXT\">VkPhysicalDeviceImageDrmFormatModifierInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageDrmFormatModifierListCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageDrmFormatModifierListCreateInfoEXT-pDrmFormatModifiers-parameter",
          "text": "<code>pDrmFormatModifiers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>drmFormatModifierCount</code> <code>uint64_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageDrmFormatModifierListCreateInfoEXT-drmFormatModifierCount-arraylength",
          "text": "<code>drmFormatModifierCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkImageDrmFormatModifierExplicitCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkImageDrmFormatModifierExplicitCreateInfoEXT-drmFormatModifier-02264",
          "text": "<code>drmFormatModifier</code> <strong class=\"purple\">must</strong> be compatible with the parameters in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> and its <code>pNext</code> chain, as determined by querying <a href=\"#VkPhysicalDeviceImageFormatInfo2\">VkPhysicalDeviceImageFormatInfo2</a> extended with <a href=\"#VkPhysicalDeviceImageDrmFormatModifierInfoEXT\">VkPhysicalDeviceImageDrmFormatModifierInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageDrmFormatModifierExplicitCreateInfoEXT-drmFormatModifierPlaneCount-02265",
          "text": "<code>drmFormatModifierPlaneCount</code> <strong class=\"purple\">must</strong> be equal to the <a href=\"#VkDrmFormatModifierPropertiesEXT\">VkDrmFormatModifierPropertiesEXT</a>::<code>drmFormatModifierPlaneCount</code> associated with <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>format</code> and <code>drmFormatModifier</code>, as found by querying <a href=\"#VkDrmFormatModifierPropertiesListEXT\">VkDrmFormatModifierPropertiesListEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageDrmFormatModifierExplicitCreateInfoEXT-size-02267",
          "text": "For each element of <code>pPlaneLayouts</code>, <code>size</code> <strong class=\"purple\">must</strong> be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageDrmFormatModifierExplicitCreateInfoEXT-arrayPitch-02268",
          "text": "For each element of <code>pPlaneLayouts</code>, <code>arrayPitch</code> <strong class=\"purple\">must</strong> be 0 if <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>arrayLayers</code> is 1",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageDrmFormatModifierExplicitCreateInfoEXT-depthPitch-02269",
          "text": "For each element of <code>pPlaneLayouts</code>, <code>depthPitch</code> <strong class=\"purple\">must</strong> be 0 if <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>extent.depth</code> is 1",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageDrmFormatModifierExplicitCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageDrmFormatModifierExplicitCreateInfoEXT-pPlaneLayouts-parameter",
          "text": "<code>pPlaneLayouts</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>drmFormatModifierPlaneCount</code> <a href=\"#VkSubresourceLayout\">VkSubresourceLayout</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageDrmFormatModifierExplicitCreateInfoEXT-drmFormatModifierPlaneCount-arraylength",
          "text": "<code>drmFormatModifierPlaneCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetImageSubresourceLayout": {
      "core": [
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-image-07790",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> have been created with <code>tiling</code> equal to <code>VK_IMAGE_TILING_LINEAR</code> or <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-aspectMask-00997",
          "text": "The <code>aspectMask</code> member of <code>pSubresource</code> <strong class=\"purple\">must</strong> only have a single bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-mipLevel-01716",
          "text": "The <code>mipLevel</code> member of <code>pSubresource</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-arrayLayer-01717",
          "text": "The <code>arrayLayer</code> member of <code>pSubresource</code> <strong class=\"purple\">must</strong> be less than the <code>arrayLayers</code> specified in <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-format-08886",
          "text": "If <code>format</code> of the <code>image</code> is a color format that is not a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a>, and <code>tiling</code> of the <code>image</code> is <code>VK_IMAGE_TILING_LINEAR</code> or <code>VK_IMAGE_TILING_OPTIMAL</code>, the <code>aspectMask</code> member of <code>pSubresource</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-format-04462",
          "text": "If <code>format</code> of the <code>image</code> has a depth component, the <code>aspectMask</code> member of <code>pSubresource</code> <strong class=\"purple\">must</strong> contain <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-format-04463",
          "text": "If <code>format</code> of the <code>image</code> has a stencil component, the <code>aspectMask</code> member of <code>pSubresource</code> <strong class=\"purple\">must</strong> contain <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-format-04464",
          "text": "If <code>format</code> of the <code>image</code> does not contain a stencil or depth component, the <code>aspectMask</code> member of <code>pSubresource</code> <strong class=\"purple\">must</strong> not contain <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> or <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-tiling-08717",
          "text": "If the <code>tiling</code> of the <code>image</code> is <code>VK_IMAGE_TILING_LINEAR</code> and has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a>, then the <code>aspectMask</code> member of <code>pSubresource</code> <strong class=\"purple\">must</strong> be a single valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-tiling-09433",
          "text": "If the <code>tiling</code> of the <code>image</code> is <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code>, then the <code>aspectMask</code> member of <code>pSubresource</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_ASPECT_MEMORY_PLANE<em>_i_</em>BIT_EXT</code> and the index <em>i</em> <strong class=\"purple\">must</strong> be less than the <a href=\"#VkDrmFormatModifierPropertiesEXT\">VkDrmFormatModifierPropertiesEXT</a>::<code>drmFormatModifierPlaneCount</code> associated with the image&#8217;s <code>format</code> and <a href=\"#VkImageDrmFormatModifierPropertiesEXT\">VkImageDrmFormatModifierPropertiesEXT</a>::<code>drmFormatModifier</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-image-parameter",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-pSubresource-parameter",
          "text": "<code>pSubresource</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkImageSubresource\">VkImageSubresource</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-pLayout-parameter",
          "text": "<code>pLayout</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkSubresourceLayout\">VkSubresourceLayout</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageSubresourceLayout-image-parent",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkImageSubresource": {
      "core": [
        {
          "vuid": "VUID-VkImageSubresource-aspectMask-parameter",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageAspectFlagBits\">VkImageAspectFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSubresource-aspectMask-requiredbitmask",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetImageDrmFormatModifierPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-vkGetImageDrmFormatModifierPropertiesEXT-image-02272",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> have been created with <a href=\"#VkImageCreateInfo\"><code>tiling</code></a> equal to <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageDrmFormatModifierPropertiesEXT-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageDrmFormatModifierPropertiesEXT-image-parameter",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageDrmFormatModifierPropertiesEXT-pProperties-parameter",
          "text": "<code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkImageDrmFormatModifierPropertiesEXT\">VkImageDrmFormatModifierPropertiesEXT</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageDrmFormatModifierPropertiesEXT-image-parent",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkImageDrmFormatModifierPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkImageDrmFormatModifierPropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageDrmFormatModifierPropertiesEXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyImage": {
      "core": [
        {
          "vuid": "VUID-vkDestroyImage-image-01000",
          "text": "All submitted commands that refer to <code>image</code>, either directly or via a <code>VkImageView</code>, <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyImage-image-04882",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> not have been acquired from <a href=\"#vkGetSwapchainImagesKHR\">vkGetSwapchainImagesKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyImage-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyImage-image-parameter",
          "text": "If <code>image</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyImage-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyImage-image-parent",
          "text": "If <code>image</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateImageView": {
      "core": [
        {
          "vuid": "VUID-vkCreateImageView-image-09179",
          "text": "<a href=\"#VkImageViewCreateInfo\">VkImageViewCreateInfo</a>::<code>image</code> <strong class=\"purple\">must</strong> have been created from <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateImageView-device-05068",
          "text": "The number of image views currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of image views requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>imageViewRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateImageView-subresourceRange-05063",
          "text": "If <a href=\"#VkImageViewCreateInfo\">VkImageViewCreateInfo</a>::<code>subresourceRange.layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code> and is greater than <code>1</code>, or if <a href=\"#VkImageViewCreateInfo\">VkImageViewCreateInfo</a>::<code>subresourceRange.layerCount</code> is <code>VK_REMAINING_ARRAY_LAYERS</code> and the remaining number of layers in <a href=\"#VkImageViewCreateInfo\">VkImageViewCreateInfo</a>::<code>image</code> is greater than <code>1</code>, the number of image views with more than one array layer currently allocated from <code>device</code> plus <code>1</code> <strong class=\"purple\">must</strong> be less than or equal to the total number of image views requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>layeredImageViewRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateImageView-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateImageView-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkImageViewCreateInfo\">VkImageViewCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateImageView-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateImageView-pView-parameter",
          "text": "<code>pView</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkImageView\">VkImageView</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkImageViewCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-01003",
          "text": "If <code>image</code> was not created with <code>VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT</code> then <code>viewType</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_VIEW_TYPE_CUBE</code> or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-viewType-01004",
          "text": "If the <a href=\"#features-imageCubeArray\"><code>imageCubeArray</code></a> feature is not enabled, <code>viewType</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-06723",
          "text": "If <code>image</code> was created with <code>VK_IMAGE_TYPE_3D</code> but without <code>VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT</code> set then <code>viewType</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-06727",
          "text": "If <code>image</code> was created with <code>VK_IMAGE_TYPE_3D</code> but without <code>VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT</code> set then <code>viewType</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_VIEW_TYPE_2D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-04970",
          "text": "If <code>image</code> was created with <code>VK_IMAGE_TYPE_3D</code> and <code>viewType</code> is <code>VK_IMAGE_VIEW_TYPE_2D</code> or <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code> then <code>subresourceRange.levelCount</code> <strong class=\"purple\">must</strong> be 1",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-04972",
          "text": "If <code>image</code> was created with a <code>samples</code> value not equal to <code>VK_SAMPLE_COUNT_1_BIT</code> then <code>viewType</code> <strong class=\"purple\">must</strong> be either <code>VK_IMAGE_VIEW_TYPE_2D</code> or <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-04441",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> have been created with a <code>usage</code> value containing at least one of the usages defined in the <a href=\"#valid-imageview-imageusage\">valid image usage</a> list for image views",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-None-02273",
          "text": "The <a href=\"#resources-image-view-format-features\">format features</a> of the resultant image view <strong class=\"purple\">must</strong> contain at least one bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-usage-02274",
          "text": "If <code>usage</code> contains <code>VK_IMAGE_USAGE_SAMPLED_BIT</code>, then the <a href=\"#resources-image-view-format-features\">format features</a> of the resultant image view <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-usage-02275",
          "text": "If <code>usage</code> contains <code>VK_IMAGE_USAGE_STORAGE_BIT</code>, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-usage-02276",
          "text": "If <code>usage</code> contains <code>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT</code>, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-usage-02277",
          "text": "If <code>usage</code> contains <code>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT</code>, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-usage-08932",
          "text": "If <code>usage</code> contains <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code>,<div class=\"paragraph\">\n<p>then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format\n    features</a> <strong class=\"purple\">must</strong> contain at least one of\n    <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT</code> or\n    <code>VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT</code></p>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subresourceRange-01478",
          "text": "<code>subresourceRange.baseMipLevel</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subresourceRange-01718",
          "text": "If <code>subresourceRange.levelCount</code> is not <code>VK_REMAINING_MIP_LEVELS</code>, <span class=\"eq\"><code>subresourceRange.baseMipLevel</code> +  <code>subresourceRange.levelCount</code></span> <strong class=\"purple\">must</strong> be less than or equal to the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-01482",
          "text": "If <code>image</code> is not a 3D image created with <code>VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT</code> set, or <code>viewType</code> is not <code>VK_IMAGE_VIEW_TYPE_2D</code> or <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code>, <code>subresourceRange.baseArrayLayer</code> <strong class=\"purple\">must</strong> be less than the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subresourceRange-01483",
          "text": "If <code>subresourceRange.layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code>, <code>image</code> is not a 3D image created with <code>VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT</code> set, or <code>viewType</code> is not <code>VK_IMAGE_VIEW_TYPE_2D</code> or <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code>, <code>subresourceRange.layerCount</code> <strong class=\"purple\">must</strong> be non-zero and <span class=\"eq\"><code>subresourceRange.baseArrayLayer</code> +  <code>subresourceRange.layerCount</code></span> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-02724",
          "text": "If <code>image</code> is a 3D image created with <code>VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT</code> set, and <code>viewType</code> is <code>VK_IMAGE_VIEW_TYPE_2D</code> or <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code>, <code>subresourceRange.baseArrayLayer</code> <strong class=\"purple\">must</strong> be less than the depth computed from <code>baseMipLevel</code> and <code>extent.depth</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created, according to the formula defined in <a href=\"#resources-image-mip-level-sizing\">Image Mip Level Sizing</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subresourceRange-02725",
          "text": "If <code>subresourceRange.layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code>, <code>image</code> is a 3D image created with <code>VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT</code> set, and <code>viewType</code> is <code>VK_IMAGE_VIEW_TYPE_2D</code> or <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code>, <code>subresourceRange.layerCount</code> <strong class=\"purple\">must</strong> be non-zero and <span class=\"eq\"><code>subresourceRange.baseArrayLayer</code> +  <code>subresourceRange.layerCount</code></span> <strong class=\"purple\">must</strong> be less than or equal to the depth computed from <code>baseMipLevel</code> and <code>extent.depth</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created, according to the formula defined in <a href=\"#resources-image-mip-level-sizing\">Image Mip Level Sizing</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-01761",
          "text": "If <code>image</code> was created with the <code>VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT</code> flag, but without the <code>VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT</code> flag, and if the <code>format</code> of the <code>image</code> is not a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar</a> format, <code>format</code> <strong class=\"purple\">must</strong> be compatible with the <code>format</code> used to create <code>image</code>, as defined in <a href=\"#formats-compatibility-classes\">Format Compatibility Classes</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-01583",
          "text": "If <code>image</code> was created with the <code>VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT</code> flag, <code>format</code> <strong class=\"purple\">must</strong> be compatible with, or <strong class=\"purple\">must</strong> be an uncompressed format that is size-compatible with, the <code>format</code> used to create <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-07072",
          "text": "If <code>image</code> was created with the <code>VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT</code> flag and <code>format</code> is a non-compressed format, the <code>levelCount</code> and <code>layerCount</code> members of <code>subresourceRange</code> <strong class=\"purple\">must</strong> both be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-pNext-01585",
          "text": "If a <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a> structure was included in the <code>pNext</code> chain of the <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> structure used when creating <code>image</code> and <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>::<code>viewFormatCount</code> is not zero then <code>format</code> <strong class=\"purple\">must</strong> be one of the formats in <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>::<code>pViewFormats</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-01586",
          "text": "If <code>image</code> was created with the <code>VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT</code> flag, if the <code>format</code> of the <code>image</code> is a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar</a> format, and if <code>subresourceRange.aspectMask</code> is one of the <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bits, then <code>format</code> <strong class=\"purple\">must</strong> be compatible with the <a href=\"#VkFormat\">VkFormat</a> for the plane of the <code>image</code> <code>format</code> indicated by <code>subresourceRange.aspectMask</code>, as defined in <a href=\"#formats-compatible-planes\">Compatible Formats of Planes of Multi-Planar Formats</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subresourceRange-07818",
          "text": "<code>subresourceRange.aspectMask</code> <strong class=\"purple\">must</strong> only have at most 1 valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-01762",
          "text": "If <code>image</code> was not created with the <code>VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT</code> flag, or if the <code>format</code> of the <code>image</code> is a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar</a> format and if <code>subresourceRange.aspectMask</code> is <code>VK_IMAGE_ASPECT_COLOR_BIT</code>, <code>format</code> <strong class=\"purple\">must</strong> be identical to the <code>format</code> used to create <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-format-06415",
          "text": "If the image view <a href=\"#image-views-requiring-sampler-ycbcr-conversion\">requires a sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a> and <code>usage</code> contains <code>VK_IMAGE_USAGE_SAMPLED_BIT</code>, then the <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkSamplerYcbcrConversionInfo\">VkSamplerYcbcrConversionInfo</a> structure with a conversion value other than <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-format-04714",
          "text": "If <code>format</code> has a <code>_422</code> or <code>_420</code> suffix then <code>image</code> <strong class=\"purple\">must</strong> have been created with a width that is a multiple of 2",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-format-04715",
          "text": "If <code>format</code> has a <code>_420</code> suffix then <code>image</code> <strong class=\"purple\">must</strong> have been created with a height that is a multiple of 2",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-pNext-01970",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkSamplerYcbcrConversionInfo\">VkSamplerYcbcrConversionInfo</a> structure with a <code>conversion</code> value other than <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, all members of <code>components</code> <strong class=\"purple\">must</strong> have the <a href=\"#resources-image-views-identity-mappings\">identity swizzle</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-pNext-06658",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkSamplerYcbcrConversionInfo\">VkSamplerYcbcrConversionInfo</a> structure with a <code>conversion</code> value other than <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>format</code> <strong class=\"purple\">must</strong> be the same used in <a href=\"#VkSamplerYcbcrConversionCreateInfo\">VkSamplerYcbcrConversionCreateInfo</a>::<code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-01020",
          "text": "If <code>image</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subResourceRange-01021",
          "text": "<code>viewType</code> <strong class=\"purple\">must</strong> be compatible with the type of <code>image</code> as shown in the <a href=\"#resources-image-views-compatibility\">view type compatibility table</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-08957",
          "text": "If <code>image</code> has an <a href=\"#memory-external-screen-buffer-external-formats\">QNX Screen external format</a>, <code>format</code> <strong class=\"purple\">must</strong> be <code>VK_FORMAT_UNDEFINED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-08958",
          "text": "If <code>image</code> has an <a href=\"#memory-external-screen-buffer-external-formats\">QNX Screen external format</a>, the <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkSamplerYcbcrConversionInfo\">VkSamplerYcbcrConversionInfo</a> structure with a <code>conversion</code> object created with the same external format as <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-08959",
          "text": "If <code>image</code> has an <a href=\"#memory-external-screen-buffer-external-formats\">QNX Screen external format</a>, all members of <code>components</code> <strong class=\"purple\">must</strong> be the <a href=\"#resources-image-views-identity-mappings\">identity swizzle</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-02086",
          "text": "If <code>image</code> was created with <code>usage</code> containing <code>VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>, <code>viewType</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_VIEW_TYPE_2D</code> or <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-usage-04550",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is enabled, and the <code>usage</code> for the image view includes <code>VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-usage-04551",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is enabled, the <code>usage</code> for the image view includes <code>VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>, and <a href=\"#limits-layeredShadingRateAttachments\"><code>layeredShadingRateAttachments</code></a> is <code>VK_FALSE</code>, <code>subresourceRange.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-pNext-02662",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkImageViewUsageCreateInfo\">VkImageViewUsageCreateInfo</a> structure, and <code>image</code> was not created with a <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a> structure included in the <code>pNext</code> chain of <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>, its <code>usage</code> member <strong class=\"purple\">must</strong> not include any bits that were not set in the <code>usage</code> member of the <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> structure used to create <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-pNext-02663",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkImageViewUsageCreateInfo\">VkImageViewUsageCreateInfo</a> structure, <code>image</code> was created with a <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a> structure included in the <code>pNext</code> chain of <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>, and <code>subresourceRange.aspectMask</code> includes <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>, the <code>usage</code> member of the <a href=\"#VkImageViewUsageCreateInfo\">VkImageViewUsageCreateInfo</a> structure <strong class=\"purple\">must</strong> not include any bits that were not set in the <code>usage</code> member of the <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a> structure used to create <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-pNext-02664",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkImageViewUsageCreateInfo\">VkImageViewUsageCreateInfo</a> structure, <code>image</code> was created with a <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a> structure included in the <code>pNext</code> chain of <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>, and <code>subresourceRange.aspectMask</code> includes bits other than <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>, the <code>usage</code> member of the <a href=\"#VkImageViewUsageCreateInfo\">VkImageViewUsageCreateInfo</a> structure <strong class=\"purple\">must</strong> not include any bits that were not set in the <code>usage</code> member of the <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> structure used to create <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-imageViewType-04973",
          "text": "If <code>viewType</code> is <code>VK_IMAGE_VIEW_TYPE_1D</code>, <code>VK_IMAGE_VIEW_TYPE_2D</code>, or <code>VK_IMAGE_VIEW_TYPE_3D</code>; and <code>subresourceRange.layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code>, then <code>subresourceRange.layerCount</code> <strong class=\"purple\">must</strong> be 1",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-imageViewType-04974",
          "text": "If <code>viewType</code> is <code>VK_IMAGE_VIEW_TYPE_1D</code>, <code>VK_IMAGE_VIEW_TYPE_2D</code>, or <code>VK_IMAGE_VIEW_TYPE_3D</code>; and <code>subresourceRange.layerCount</code> is <code>VK_REMAINING_ARRAY_LAYERS</code>, then the remaining number of layers <strong class=\"purple\">must</strong> be 1",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-viewType-02960",
          "text": "If <code>viewType</code> is <code>VK_IMAGE_VIEW_TYPE_CUBE</code> and <code>subresourceRange.layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code>, <code>subresourceRange.layerCount</code> <strong class=\"purple\">must</strong> be <code>6</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-viewType-02961",
          "text": "If <code>viewType</code> is <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code> and <code>subresourceRange.layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code>, <code>subresourceRange.layerCount</code> <strong class=\"purple\">must</strong> be a multiple of <code>6</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-viewType-02962",
          "text": "If <code>viewType</code> is <code>VK_IMAGE_VIEW_TYPE_CUBE</code> and <code>subresourceRange.layerCount</code> is <code>VK_REMAINING_ARRAY_LAYERS</code>, the remaining number of layers <strong class=\"purple\">must</strong> be <code>6</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-viewType-02963",
          "text": "If <code>viewType</code> is <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code> and <code>subresourceRange.layerCount</code> is <code>VK_REMAINING_ARRAY_LAYERS</code>, the remaining number of layers <strong class=\"purple\">must</strong> be a multiple of <code>6</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subresourceRange-05064",
          "text": "If <code>subresourceRange.levelCount</code> is not <code>VK_REMAINING_MIP_LEVELS</code>, <code>subresourceRange.levelCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>maxImageViewMipLevels</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subresourceRange-05200",
          "text": "If <code>subresourceRange.levelCount</code> is <code>VK_REMAINING_MIP_LEVELS</code>, the remaining number of mip levels <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>maxImageViewMipLevels</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subresourceRange-05065",
          "text": "If <code>subresourceRange.layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code>, <code>subresourceRange.layerCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>maxImageViewArrayLayers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subresourceRange-05201",
          "text": "If <code>subresourceRange.layerCount</code> is <code>VK_REMAINING_ARRAY_LAYERS</code>, the remaining number of layers <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>maxImageViewMipLevels</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subresourceRange-05066",
          "text": "If <code>subresourceRange.layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code> and is greater than <code>1</code>, or if <code>subresourceRange.layerCount</code> is <code>VK_REMAINING_ARRAY_LAYERS</code> and the remaining number of layers is greater than <code>1</code>, then if <code>subresourceRange.levelCount</code> is not <code>VK_REMAINING_MIP_LEVELS</code>, <code>subresourceRange.levelCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>maxLayeredImageViewMipLevels</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subresourceRange-05202",
          "text": "If <code>subresourceRange.layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code> and is greater than <code>1</code>, or if <code>subresourceRange.layerCount</code> is <code>VK_REMAINING_ARRAY_LAYERS</code> and the remaining number of layers is greater than <code>1</code>, then if <code>subresourceRange.levelCount</code> is <code>VK_REMAINING_MIP_LEVELS</code>, the remaining number of mip levels <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>maxLayeredImageViewMipLevels</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkImageViewASTCDecodeModeEXT\">VkImageViewASTCDecodeModeEXT</a>, <a href=\"#VkImageViewUsageCreateInfo\">VkImageViewUsageCreateInfo</a>, or <a href=\"#VkSamplerYcbcrConversionInfo\">VkSamplerYcbcrConversionInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-image-parameter",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-viewType-parameter",
          "text": "<code>viewType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageViewType\">VkImageViewType</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-components-parameter",
          "text": "<code>components</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkComponentMapping\">VkComponentMapping</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewCreateInfo-subresourceRange-parameter",
          "text": "<code>subresourceRange</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkImageViewUsageCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkImageViewUsageCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewUsageCreateInfo-usage-parameter",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageUsageFlagBits\">VkImageUsageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewUsageCreateInfo-usage-requiredbitmask",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkImageSubresourceRange": {
      "core": [
        {
          "vuid": "VUID-VkImageSubresourceRange-levelCount-01720",
          "text": "If <code>levelCount</code> is not <code>VK_REMAINING_MIP_LEVELS</code>, it <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSubresourceRange-layerCount-01721",
          "text": "If <code>layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code>, it <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSubresourceRange-aspectMask-01670",
          "text": "If <code>aspectMask</code> includes <code>VK_IMAGE_ASPECT_COLOR_BIT</code>, then it <strong class=\"purple\">must</strong> not include any of <code>VK_IMAGE_ASPECT_PLANE_0_BIT</code>, <code>VK_IMAGE_ASPECT_PLANE_1_BIT</code>, or <code>VK_IMAGE_ASPECT_PLANE_2_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSubresourceRange-aspectMask-02278",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> not include <code>VK_IMAGE_ASPECT_MEMORY_PLANE<em>_i_</em>BIT_EXT</code> for any index <em>i</em>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSubresourceRange-aspectMask-parameter",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageAspectFlagBits\">VkImageAspectFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSubresourceRange-aspectMask-requiredbitmask",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkComponentMapping": {
      "core": [
        {
          "vuid": "VUID-VkComponentMapping-r-parameter",
          "text": "<code>r</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkComponentSwizzle\">VkComponentSwizzle</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComponentMapping-g-parameter",
          "text": "<code>g</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkComponentSwizzle\">VkComponentSwizzle</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComponentMapping-b-parameter",
          "text": "<code>b</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkComponentSwizzle\">VkComponentSwizzle</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkComponentMapping-a-parameter",
          "text": "<code>a</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkComponentSwizzle\">VkComponentSwizzle</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkImageViewASTCDecodeModeEXT": {
      "core": [
        {
          "vuid": "VUID-VkImageViewASTCDecodeModeEXT-decodeMode-02230",
          "text": "<code>decodeMode</code> <strong class=\"purple\">must</strong> be one of <code>VK_FORMAT_R16G16B16A16_SFLOAT</code>, <code>VK_FORMAT_R8G8B8A8_UNORM</code>, or <code>VK_FORMAT_E5B9G9R9_UFLOAT_PACK32</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewASTCDecodeModeEXT-decodeMode-02231",
          "text": "If the <a href=\"#features-astc-decodeModeSharedExponent\"><code>decodeModeSharedExponent</code></a> feature is not enabled, <code>decodeMode</code> <strong class=\"purple\">must</strong> not be <code>VK_FORMAT_E5B9G9R9_UFLOAT_PACK32</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewASTCDecodeModeEXT-decodeMode-02232",
          "text": "If <code>decodeMode</code> is <code>VK_FORMAT_R8G8B8A8_UNORM</code> the image view <strong class=\"purple\">must</strong> not include blocks using any of the ASTC HDR modes",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewASTCDecodeModeEXT-format-04084",
          "text": "<code>format</code> of the image view <strong class=\"purple\">must</strong> be one of the <a href=\"#appendix-compressedtex-astc\">ASTC Compressed Image Formats</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewASTCDecodeModeEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageViewASTCDecodeModeEXT-decodeMode-parameter",
          "text": "<code>decodeMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyImageView": {
      "core": [
        {
          "vuid": "VUID-vkDestroyImageView-imageView-01026",
          "text": "All submitted commands that refer to <code>imageView</code> <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyImageView-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyImageView-imageView-parameter",
          "text": "If <code>imageView</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>imageView</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageView\">VkImageView</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyImageView-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyImageView-imageView-parent",
          "text": "If <code>imageView</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetBufferMemoryRequirements": {
      "core": [
        {
          "vuid": "VUID-vkGetBufferMemoryRequirements-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetBufferMemoryRequirements-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetBufferMemoryRequirements-pMemoryRequirements-parameter",
          "text": "<code>pMemoryRequirements</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkMemoryRequirements\">VkMemoryRequirements</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetBufferMemoryRequirements-buffer-parent",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetImageMemoryRequirements": {
      "core": [
        {
          "vuid": "VUID-vkGetImageMemoryRequirements-image-01588",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> not have been created with the <code>VK_IMAGE_CREATE_DISJOINT_BIT</code> flag set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageMemoryRequirements-image-08960",
          "text": "If <code>image</code> was created with the <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCREEN_BUFFER_BIT_QNX</code> external memory handle type, then <code>image</code> <strong class=\"purple\">must</strong> be bound to memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageMemoryRequirements-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageMemoryRequirements-image-parameter",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageMemoryRequirements-pMemoryRequirements-parameter",
          "text": "<code>pMemoryRequirements</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkMemoryRequirements\">VkMemoryRequirements</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageMemoryRequirements-image-parent",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetBufferMemoryRequirements2": {
      "core": [
        {
          "vuid": "VUID-vkGetBufferMemoryRequirements2-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetBufferMemoryRequirements2-pInfo-parameter",
          "text": "<code>pInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkBufferMemoryRequirementsInfo2\">VkBufferMemoryRequirementsInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetBufferMemoryRequirements2-pMemoryRequirements-parameter",
          "text": "<code>pMemoryRequirements</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkMemoryRequirements2\">VkMemoryRequirements2</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkBufferMemoryRequirementsInfo2": {
      "core": [
        {
          "vuid": "VUID-VkBufferMemoryRequirementsInfo2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryRequirementsInfo2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferMemoryRequirementsInfo2-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkGetImageMemoryRequirements2": {
      "core": [
        {
          "vuid": "VUID-vkGetImageMemoryRequirements2-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageMemoryRequirements2-pInfo-parameter",
          "text": "<code>pInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkImageMemoryRequirementsInfo2\">VkImageMemoryRequirementsInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetImageMemoryRequirements2-pMemoryRequirements-parameter",
          "text": "<code>pMemoryRequirements</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkMemoryRequirements2\">VkMemoryRequirements2</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkImageMemoryRequirementsInfo2": {
      "core": [
        {
          "vuid": "VUID-VkImageMemoryRequirementsInfo2-image-01589",
          "text": "If <code>image</code> was created with a <em>multi-planar</em> format and the <code>VK_IMAGE_CREATE_DISJOINT_BIT</code> flag, there <strong class=\"purple\">must</strong> be a <a href=\"#VkImagePlaneMemoryRequirementsInfo\">VkImagePlaneMemoryRequirementsInfo</a> included in the <code>pNext</code> chain of the <a href=\"#VkImageMemoryRequirementsInfo2\">VkImageMemoryRequirementsInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryRequirementsInfo2-image-02279",
          "text": "If <code>image</code> was created with <code>VK_IMAGE_CREATE_DISJOINT_BIT</code> and with <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code>, then there <strong class=\"purple\">must</strong> be a <a href=\"#VkImagePlaneMemoryRequirementsInfo\">VkImagePlaneMemoryRequirementsInfo</a> included in the <code>pNext</code> chain of the <a href=\"#VkImageMemoryRequirementsInfo2\">VkImageMemoryRequirementsInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryRequirementsInfo2-image-01590",
          "text": "If <code>image</code> was not created with the <code>VK_IMAGE_CREATE_DISJOINT_BIT</code> flag, there <strong class=\"purple\">must</strong> not be a <a href=\"#VkImagePlaneMemoryRequirementsInfo\">VkImagePlaneMemoryRequirementsInfo</a> included in the <code>pNext</code> chain of the <a href=\"#VkImageMemoryRequirementsInfo2\">VkImageMemoryRequirementsInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryRequirementsInfo2-image-02280",
          "text": "If <code>image</code> was created with a single-plane format and with any <code>tiling</code> other than <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code>, then there <strong class=\"purple\">must</strong> not be a <a href=\"#VkImagePlaneMemoryRequirementsInfo\">VkImagePlaneMemoryRequirementsInfo</a> included in the <code>pNext</code> chain of the <a href=\"#VkImageMemoryRequirementsInfo2\">VkImageMemoryRequirementsInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryRequirementsInfo2-image-08961",
          "text": "If <code>image</code> was created with the <code>VK_EXTERNAL_MEMORY_HANDLE_TYPE_SCREEN_BUFFER_BIT_QNX</code> external memory handle type, then <code>image</code> <strong class=\"purple\">must</strong> be bound to memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryRequirementsInfo2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryRequirementsInfo2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkImagePlaneMemoryRequirementsInfo\">VkImagePlaneMemoryRequirementsInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryRequirementsInfo2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageMemoryRequirementsInfo2-image-parameter",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkImagePlaneMemoryRequirementsInfo": {
      "core": [
        {
          "vuid": "VUID-VkImagePlaneMemoryRequirementsInfo-planeAspect-02281",
          "text": "If the image&#8217;s <code>tiling</code> is <code>VK_IMAGE_TILING_LINEAR</code> or <code>VK_IMAGE_TILING_OPTIMAL</code>, then <code>planeAspect</code> <strong class=\"purple\">must</strong> be a single valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImagePlaneMemoryRequirementsInfo-planeAspect-02282",
          "text": "If the image&#8217;s <code>tiling</code> is <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code>, then <code>planeAspect</code> <strong class=\"purple\">must</strong> be a single valid <em>memory plane</em> for the image (that is, <code>aspectMask</code> <strong class=\"purple\">must</strong> specify a plane index that is less than the <a href=\"#VkDrmFormatModifierPropertiesEXT\">VkDrmFormatModifierPropertiesEXT</a>::<code>drmFormatModifierPlaneCount</code> associated with the image&#8217;s <code>format</code> and <a href=\"#VkImageDrmFormatModifierPropertiesEXT\">VkImageDrmFormatModifierPropertiesEXT</a>::<code>drmFormatModifier</code>)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImagePlaneMemoryRequirementsInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImagePlaneMemoryRequirementsInfo-planeAspect-parameter",
          "text": "<code>planeAspect</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageAspectFlagBits\">VkImageAspectFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkMemoryRequirements2": {
      "core": [
        {
          "vuid": "VUID-VkMemoryRequirements2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryRequirements2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkMemoryDedicatedRequirements\">VkMemoryDedicatedRequirements</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMemoryRequirements2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        }
      ]
    },
    "VkMemoryDedicatedRequirements": {
      "core": [
        {
          "vuid": "VUID-VkMemoryDedicatedRequirements-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkBindBufferMemory": {
      "core": [
        {
          "vuid": "VUID-vkBindBufferMemory-buffer-07459",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> not have been bound to a memory object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-buffer-01030",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> not have been created with any sparse memory binding flags",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-memoryOffset-01031",
          "text": "<code>memoryOffset</code> <strong class=\"purple\">must</strong> be less than the size of <code>memory</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-memory-01035",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> have been allocated using one of the memory types allowed in the <code>memoryTypeBits</code> member of the <code>VkMemoryRequirements</code> structure returned from a call to <code>vkGetBufferMemoryRequirements</code> with <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-memoryOffset-01036",
          "text": "<code>memoryOffset</code> <strong class=\"purple\">must</strong> be an integer multiple of the <code>alignment</code> member of the <code>VkMemoryRequirements</code> structure returned from a call to <code>vkGetBufferMemoryRequirements</code> with <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-size-01037",
          "text": "The <code>size</code> member of the <code>VkMemoryRequirements</code> structure returned from a call to <code>vkGetBufferMemoryRequirements</code> with <code>buffer</code> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>memory</code> minus <code>memoryOffset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-buffer-01444",
          "text": "If <code>buffer</code> requires a dedicated allocation (as reported by <a href=\"#vkGetBufferMemoryRequirements2\">vkGetBufferMemoryRequirements2</a> in <a href=\"#VkMemoryDedicatedRequirements\">VkMemoryDedicatedRequirements</a>::<code>requiresDedicatedAllocation</code> for <code>buffer</code>), <code>memory</code> <strong class=\"purple\">must</strong> have been allocated with <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>::<code>buffer</code> equal to <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-memory-01508",
          "text": "If the <code>VkMemoryAllocateInfo</code> provided when <code>memory</code> was allocated included a <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a> structure in its <code>pNext</code> chain, and <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>::<code>buffer</code> was not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, then <code>buffer</code> <strong class=\"purple\">must</strong> equal <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>::<code>buffer</code>, and <code>memoryOffset</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-None-01898",
          "text": "If <code>buffer</code> was created with the <code>VK_BUFFER_CREATE_PROTECTED_BIT</code> bit set, the buffer <strong class=\"purple\">must</strong> be bound to a memory object allocated with a memory type that reports <code>VK_MEMORY_PROPERTY_PROTECTED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-None-01899",
          "text": "If <code>buffer</code> was created with the <code>VK_BUFFER_CREATE_PROTECTED_BIT</code> bit not set, the buffer <strong class=\"purple\">must</strong> not be bound to a memory object allocated with a memory type that reports <code>VK_MEMORY_PROPERTY_PROTECTED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-memory-02726",
          "text": "If the value of <a href=\"#VkExportMemoryAllocateInfo\">VkExportMemoryAllocateInfo</a>::<code>handleTypes</code> used to allocate <code>memory</code> is not <code>0</code>, it <strong class=\"purple\">must</strong> include at least one of the handles set in <a href=\"#VkExternalMemoryBufferCreateInfo\">VkExternalMemoryBufferCreateInfo</a>::<code>handleTypes</code> when <code>buffer</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-memory-02985",
          "text": "If <code>memory</code> was allocated by a memory import operation, the external handle type of the imported memory <strong class=\"purple\">must</strong> also have been set in <a href=\"#VkExternalMemoryBufferCreateInfo\">VkExternalMemoryBufferCreateInfo</a>::<code>handleTypes</code> when <code>buffer</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-bufferDeviceAddress-03339",
          "text": "If the <a href=\"#VkPhysicalDeviceBufferDeviceAddressFeatures\">VkPhysicalDeviceBufferDeviceAddressFeatures</a>::<code>bufferDeviceAddress</code> feature is enabled and <code>buffer</code> was created with the <code>VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT</code> bit set, <code>memory</code> <strong class=\"purple\">must</strong> have been allocated with the <code>VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-bufferDeviceAddressCaptureReplay-09200",
          "text": "If the <a href=\"#VkPhysicalDeviceBufferDeviceAddressFeatures\">VkPhysicalDeviceBufferDeviceAddressFeatures</a>::<code>bufferDeviceAddressCaptureReplay</code> feature is enabled and <code>buffer</code> was created with the <code>VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT</code> bit set, <code>memory</code> <strong class=\"purple\">must</strong> have been allocated with the <code>VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-memory-parameter",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-buffer-parent",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory-memory-parent",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkBindBufferMemory2": {
      "core": [
        {
          "vuid": "VUID-vkBindBufferMemory2-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory2-pBindInfos-parameter",
          "text": "<code>pBindInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bindInfoCount</code> valid <a href=\"#VkBindBufferMemoryInfo\">VkBindBufferMemoryInfo</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindBufferMemory2-bindInfoCount-arraylength",
          "text": "<code>bindInfoCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkBindBufferMemoryInfo": {
      "core": [
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-buffer-07459",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> not have been bound to a memory object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-buffer-01030",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> not have been created with any sparse memory binding flags",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-memoryOffset-01031",
          "text": "<code>memoryOffset</code> <strong class=\"purple\">must</strong> be less than the size of <code>memory</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-memory-01035",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> have been allocated using one of the memory types allowed in the <code>memoryTypeBits</code> member of the <code>VkMemoryRequirements</code> structure returned from a call to <code>vkGetBufferMemoryRequirements</code> with <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-memoryOffset-01036",
          "text": "<code>memoryOffset</code> <strong class=\"purple\">must</strong> be an integer multiple of the <code>alignment</code> member of the <code>VkMemoryRequirements</code> structure returned from a call to <code>vkGetBufferMemoryRequirements</code> with <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-size-01037",
          "text": "The <code>size</code> member of the <code>VkMemoryRequirements</code> structure returned from a call to <code>vkGetBufferMemoryRequirements</code> with <code>buffer</code> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>memory</code> minus <code>memoryOffset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-buffer-01444",
          "text": "If <code>buffer</code> requires a dedicated allocation (as reported by <a href=\"#vkGetBufferMemoryRequirements2\">vkGetBufferMemoryRequirements2</a> in <a href=\"#VkMemoryDedicatedRequirements\">VkMemoryDedicatedRequirements</a>::<code>requiresDedicatedAllocation</code> for <code>buffer</code>), <code>memory</code> <strong class=\"purple\">must</strong> have been allocated with <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>::<code>buffer</code> equal to <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-memory-01508",
          "text": "If the <code>VkMemoryAllocateInfo</code> provided when <code>memory</code> was allocated included a <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a> structure in its <code>pNext</code> chain, and <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>::<code>buffer</code> was not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, then <code>buffer</code> <strong class=\"purple\">must</strong> equal <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>::<code>buffer</code>, and <code>memoryOffset</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-None-01898",
          "text": "If <code>buffer</code> was created with the <code>VK_BUFFER_CREATE_PROTECTED_BIT</code> bit set, the buffer <strong class=\"purple\">must</strong> be bound to a memory object allocated with a memory type that reports <code>VK_MEMORY_PROPERTY_PROTECTED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-None-01899",
          "text": "If <code>buffer</code> was created with the <code>VK_BUFFER_CREATE_PROTECTED_BIT</code> bit not set, the buffer <strong class=\"purple\">must</strong> not be bound to a memory object allocated with a memory type that reports <code>VK_MEMORY_PROPERTY_PROTECTED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-memory-02726",
          "text": "If the value of <a href=\"#VkExportMemoryAllocateInfo\">VkExportMemoryAllocateInfo</a>::<code>handleTypes</code> used to allocate <code>memory</code> is not <code>0</code>, it <strong class=\"purple\">must</strong> include at least one of the handles set in <a href=\"#VkExternalMemoryBufferCreateInfo\">VkExternalMemoryBufferCreateInfo</a>::<code>handleTypes</code> when <code>buffer</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-memory-02985",
          "text": "If <code>memory</code> was allocated by a memory import operation, the external handle type of the imported memory <strong class=\"purple\">must</strong> also have been set in <a href=\"#VkExternalMemoryBufferCreateInfo\">VkExternalMemoryBufferCreateInfo</a>::<code>handleTypes</code> when <code>buffer</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-bufferDeviceAddress-03339",
          "text": "If the <a href=\"#VkPhysicalDeviceBufferDeviceAddressFeatures\">VkPhysicalDeviceBufferDeviceAddressFeatures</a>::<code>bufferDeviceAddress</code> feature is enabled and <code>buffer</code> was created with the <code>VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT</code> bit set, <code>memory</code> <strong class=\"purple\">must</strong> have been allocated with the <code>VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-bufferDeviceAddressCaptureReplay-09200",
          "text": "If the <a href=\"#VkPhysicalDeviceBufferDeviceAddressFeatures\">VkPhysicalDeviceBufferDeviceAddressFeatures</a>::<code>bufferDeviceAddressCaptureReplay</code> feature is enabled and <code>buffer</code> was created with the <code>VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT</code> bit set, <code>memory</code> <strong class=\"purple\">must</strong> have been allocated with the <code>VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-pNext-01605",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkBindBufferMemoryDeviceGroupInfo\">VkBindBufferMemoryDeviceGroupInfo</a> structure, all instances of <code>memory</code> specified by <a href=\"#VkBindBufferMemoryDeviceGroupInfo\">VkBindBufferMemoryDeviceGroupInfo</a>::<code>pDeviceIndices</code> <strong class=\"purple\">must</strong> have been allocated",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkBindBufferMemoryDeviceGroupInfo\">VkBindBufferMemoryDeviceGroupInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-memory-parameter",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryInfo-commonparent",
          "text": "Both of <code>buffer</code>, and <code>memory</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkBindBufferMemoryDeviceGroupInfo": {
      "core": [
        {
          "vuid": "VUID-VkBindBufferMemoryDeviceGroupInfo-deviceIndexCount-01606",
          "text": "<code>deviceIndexCount</code> <strong class=\"purple\">must</strong> either be zero or equal to the number of physical devices in the logical device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryDeviceGroupInfo-pDeviceIndices-01607",
          "text": "All elements of <code>pDeviceIndices</code> <strong class=\"purple\">must</strong> be valid device indices",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryDeviceGroupInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindBufferMemoryDeviceGroupInfo-pDeviceIndices-parameter",
          "text": "If <code>deviceIndexCount</code> is not <code>0</code>, <code>pDeviceIndices</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>deviceIndexCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        }
      ]
    },
    "vkBindImageMemory": {
      "core": [
        {
          "vuid": "VUID-vkBindImageMemory-image-07460",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> not have been bound to a memory object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-image-01045",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> not have been created with any sparse memory binding flags",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-memoryOffset-01046",
          "text": "<code>memoryOffset</code> <strong class=\"purple\">must</strong> be less than the size of <code>memory</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-image-01445",
          "text": "If <code>image</code> requires a dedicated allocation (as reported by <a href=\"#vkGetImageMemoryRequirements2\">vkGetImageMemoryRequirements2</a> in <a href=\"#VkMemoryDedicatedRequirements\">VkMemoryDedicatedRequirements</a>::<code>requiresDedicatedAllocation</code> for <code>image</code>), <code>memory</code> <strong class=\"purple\">must</strong> have been created with <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>::<code>image</code> equal to <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-memory-02628",
          "text": "If the <code>VkMemoryAllocateInfo</code> provided when <code>memory</code> was allocated included a <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a> structure in its <code>pNext</code> chain, and <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>::<code>image</code> was not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, then <code>image</code> <strong class=\"purple\">must</strong> equal <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>::<code>image</code> and <code>memoryOffset</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-None-01901",
          "text": "If image was created with the <code>VK_IMAGE_CREATE_PROTECTED_BIT</code> bit set, the image <strong class=\"purple\">must</strong> be bound to a memory object allocated with a memory type that reports <code>VK_MEMORY_PROPERTY_PROTECTED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-None-01902",
          "text": "If image was created with the <code>VK_IMAGE_CREATE_PROTECTED_BIT</code> bit not set, the image <strong class=\"purple\">must</strong> not be bound to a memory object created with a memory type that reports <code>VK_MEMORY_PROPERTY_PROTECTED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-memory-02728",
          "text": "If the value of <a href=\"#VkExportMemoryAllocateInfo\">VkExportMemoryAllocateInfo</a>::<code>handleTypes</code> used to allocate <code>memory</code> is not <code>0</code>, it <strong class=\"purple\">must</strong> include at least one of the handles set in <a href=\"#VkExternalMemoryImageCreateInfo\">VkExternalMemoryImageCreateInfo</a>::<code>handleTypes</code> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-memory-02989",
          "text": "If <code>memory</code> was created by a memory import operation, the external handle type of the imported memory <strong class=\"purple\">must</strong> also have been set in <a href=\"#VkExternalMemoryImageCreateInfo\">VkExternalMemoryImageCreateInfo</a>::<code>handleTypes</code> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-image-01608",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> not have been created with the <code>VK_IMAGE_CREATE_DISJOINT_BIT</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-memory-01047",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> have been allocated using one of the memory types allowed in the <code>memoryTypeBits</code> member of the <code>VkMemoryRequirements</code> structure returned from a call to <a href=\"#vkGetImageMemoryRequirements\">vkGetImageMemoryRequirements</a> with <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-memoryOffset-01048",
          "text": "<code>memoryOffset</code> <strong class=\"purple\">must</strong> be an integer multiple of the <code>alignment</code> member of the <code>VkMemoryRequirements</code> structure returned from a call to <a href=\"#vkGetImageMemoryRequirements\">vkGetImageMemoryRequirements</a> with <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-size-01049",
          "text": "The difference of the size of <code>memory</code> and <code>memoryOffset</code> <strong class=\"purple\">must</strong> be greater than or equal to the <code>size</code> member of the <a href=\"#VkMemoryRequirements\">VkMemoryRequirements</a> structure returned from a call to <a href=\"#vkGetImageMemoryRequirements\">vkGetImageMemoryRequirements</a> with the same <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-image-parameter",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-memory-parameter",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-image-parent",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory-memory-parent",
          "text": "<code>memory</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkBindImageMemory2": {
      "core": [
        {
          "vuid": "VUID-vkBindImageMemory2-pBindInfos-02858",
          "text": "If any <a href=\"#VkBindImageMemoryInfo\">VkBindImageMemoryInfo</a>::<code>image</code> was created with <code>VK_IMAGE_CREATE_DISJOINT_BIT</code> then all planes of <a href=\"#VkBindImageMemoryInfo\">VkBindImageMemoryInfo</a>::<code>image</code> <strong class=\"purple\">must</strong> be bound individually in separate <code>pBindInfos</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory2-pBindInfos-04006",
          "text": "<code>pBindInfos</code> <strong class=\"purple\">must</strong> not refer to the same image subresource more than once",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory2-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory2-pBindInfos-parameter",
          "text": "<code>pBindInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bindInfoCount</code> valid <a href=\"#VkBindImageMemoryInfo\">VkBindImageMemoryInfo</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkBindImageMemory2-bindInfoCount-arraylength",
          "text": "<code>bindInfoCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkBindImageMemoryInfo": {
      "core": [
        {
          "vuid": "VUID-VkBindImageMemoryInfo-image-07460",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> not have been bound to a memory object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-image-01045",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> not have been created with any sparse memory binding flags",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-memoryOffset-01046",
          "text": "<code>memoryOffset</code> <strong class=\"purple\">must</strong> be less than the size of <code>memory</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-image-01445",
          "text": "If <code>image</code> requires a dedicated allocation (as reported by <a href=\"#vkGetImageMemoryRequirements2\">vkGetImageMemoryRequirements2</a> in <a href=\"#VkMemoryDedicatedRequirements\">VkMemoryDedicatedRequirements</a>::<code>requiresDedicatedAllocation</code> for <code>image</code>), <code>memory</code> <strong class=\"purple\">must</strong> have been created with <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>::<code>image</code> equal to <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-memory-02628",
          "text": "If the <code>VkMemoryAllocateInfo</code> provided when <code>memory</code> was allocated included a <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a> structure in its <code>pNext</code> chain, and <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>::<code>image</code> was not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, then <code>image</code> <strong class=\"purple\">must</strong> equal <a href=\"#VkMemoryDedicatedAllocateInfo\">VkMemoryDedicatedAllocateInfo</a>::<code>image</code> and <code>memoryOffset</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-None-01901",
          "text": "If image was created with the <code>VK_IMAGE_CREATE_PROTECTED_BIT</code> bit set, the image <strong class=\"purple\">must</strong> be bound to a memory object allocated with a memory type that reports <code>VK_MEMORY_PROPERTY_PROTECTED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-None-01902",
          "text": "If image was created with the <code>VK_IMAGE_CREATE_PROTECTED_BIT</code> bit not set, the image <strong class=\"purple\">must</strong> not be bound to a memory object created with a memory type that reports <code>VK_MEMORY_PROPERTY_PROTECTED_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-memory-02728",
          "text": "If the value of <a href=\"#VkExportMemoryAllocateInfo\">VkExportMemoryAllocateInfo</a>::<code>handleTypes</code> used to allocate <code>memory</code> is not <code>0</code>, it <strong class=\"purple\">must</strong> include at least one of the handles set in <a href=\"#VkExternalMemoryImageCreateInfo\">VkExternalMemoryImageCreateInfo</a>::<code>handleTypes</code> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-memory-02989",
          "text": "If <code>memory</code> was created by a memory import operation, the external handle type of the imported memory <strong class=\"purple\">must</strong> also have been set in <a href=\"#VkExternalMemoryImageCreateInfo\">VkExternalMemoryImageCreateInfo</a>::<code>handleTypes</code> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-pNext-01615",
          "text": "If the <code>pNext</code> chain does not include a <a href=\"#VkBindImagePlaneMemoryInfo\">VkBindImagePlaneMemoryInfo</a> structure, <code>memory</code> <strong class=\"purple\">must</strong> have been allocated using one of the memory types allowed in the <code>memoryTypeBits</code> member of the <a href=\"#VkMemoryRequirements\">VkMemoryRequirements</a> structure returned from a call to <a href=\"#vkGetImageMemoryRequirements2\">vkGetImageMemoryRequirements2</a> with <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-pNext-01616",
          "text": "If the <code>pNext</code> chain does not include a <a href=\"#VkBindImagePlaneMemoryInfo\">VkBindImagePlaneMemoryInfo</a> structure, <code>memoryOffset</code> <strong class=\"purple\">must</strong> be an integer multiple of the <code>alignment</code> member of the <a href=\"#VkMemoryRequirements\">VkMemoryRequirements</a> structure returned from a call to <a href=\"#vkGetImageMemoryRequirements2\">vkGetImageMemoryRequirements2</a> with <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-pNext-01617",
          "text": "If the <code>pNext</code> chain does not include a <a href=\"#VkBindImagePlaneMemoryInfo\">VkBindImagePlaneMemoryInfo</a> structure, the difference of the size of <code>memory</code> and <code>memoryOffset</code> <strong class=\"purple\">must</strong> be greater than or equal to the <code>size</code> member of the <a href=\"#VkMemoryRequirements\">VkMemoryRequirements</a> structure returned from a call to <a href=\"#vkGetImageMemoryRequirements2\">vkGetImageMemoryRequirements2</a> with the same <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-pNext-01618",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkBindImagePlaneMemoryInfo\">VkBindImagePlaneMemoryInfo</a> structure, <code>image</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_IMAGE_CREATE_DISJOINT_BIT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-image-07736",
          "text": "If <code>image</code> was created with the <code>VK_IMAGE_CREATE_DISJOINT_BIT</code> bit set, then the <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkBindImagePlaneMemoryInfo\">VkBindImagePlaneMemoryInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-pNext-01619",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkBindImagePlaneMemoryInfo\">VkBindImagePlaneMemoryInfo</a> structure, <code>memory</code> <strong class=\"purple\">must</strong> have been allocated using one of the memory types allowed in the <code>memoryTypeBits</code> member of the <a href=\"#VkMemoryRequirements\">VkMemoryRequirements</a> structure returned from a call to <a href=\"#vkGetImageMemoryRequirements2\">vkGetImageMemoryRequirements2</a> with <code>image</code> and where <a href=\"#VkBindImagePlaneMemoryInfo\">VkBindImagePlaneMemoryInfo</a>::<code>planeAspect</code> corresponds to the <a href=\"#VkImagePlaneMemoryRequirementsInfo\">VkImagePlaneMemoryRequirementsInfo</a>::<code>planeAspect</code> in the <a href=\"#VkImageMemoryRequirementsInfo2\">VkImageMemoryRequirementsInfo2</a> structure&#8217;s <code>pNext</code> chain",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-pNext-01620",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkBindImagePlaneMemoryInfo\">VkBindImagePlaneMemoryInfo</a> structure, <code>memoryOffset</code> <strong class=\"purple\">must</strong> be an integer multiple of the <code>alignment</code> member of the <a href=\"#VkMemoryRequirements\">VkMemoryRequirements</a> structure returned from a call to <a href=\"#vkGetImageMemoryRequirements2\">vkGetImageMemoryRequirements2</a> with <code>image</code> and where <a href=\"#VkBindImagePlaneMemoryInfo\">VkBindImagePlaneMemoryInfo</a>::<code>planeAspect</code> corresponds to the <a href=\"#VkImagePlaneMemoryRequirementsInfo\">VkImagePlaneMemoryRequirementsInfo</a>::<code>planeAspect</code> in the <a href=\"#VkImageMemoryRequirementsInfo2\">VkImageMemoryRequirementsInfo2</a> structure&#8217;s <code>pNext</code> chain",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-pNext-01621",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkBindImagePlaneMemoryInfo\">VkBindImagePlaneMemoryInfo</a> structure, the difference of the size of <code>memory</code> and <code>memoryOffset</code> <strong class=\"purple\">must</strong> be greater than or equal to the <code>size</code> member of the <a href=\"#VkMemoryRequirements\">VkMemoryRequirements</a> structure returned from a call to <a href=\"#vkGetImageMemoryRequirements2\">vkGetImageMemoryRequirements2</a> with the same <code>image</code> and where <a href=\"#VkBindImagePlaneMemoryInfo\">VkBindImagePlaneMemoryInfo</a>::<code>planeAspect</code> corresponds to the <a href=\"#VkImagePlaneMemoryRequirementsInfo\">VkImagePlaneMemoryRequirementsInfo</a>::<code>planeAspect</code> in the <a href=\"#VkImageMemoryRequirementsInfo2\">VkImageMemoryRequirementsInfo2</a> structure&#8217;s <code>pNext</code> chain",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-pNext-01626",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkBindImageMemoryDeviceGroupInfo\">VkBindImageMemoryDeviceGroupInfo</a> structure, all instances of <code>memory</code> specified by <a href=\"#VkBindImageMemoryDeviceGroupInfo\">VkBindImageMemoryDeviceGroupInfo</a>::<code>pDeviceIndices</code> <strong class=\"purple\">must</strong> have been allocated",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-image-01630",
          "text": "If <code>image</code> was created with a valid swapchain handle in <a href=\"#VkImageSwapchainCreateInfoKHR\">VkImageSwapchainCreateInfoKHR</a>::<code>swapchain</code>, then the <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkBindImageMemorySwapchainInfoKHR\">VkBindImageMemorySwapchainInfoKHR</a> structure containing the same swapchain handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-pNext-01631",
          "text": "If the <code>pNext</code> chain includes a <a href=\"#VkBindImageMemorySwapchainInfoKHR\">VkBindImageMemorySwapchainInfoKHR</a> structure, <code>memory</code> <strong class=\"purple\">must</strong> be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-pNext-01632",
          "text": "If the <code>pNext</code> chain does not include a <a href=\"#VkBindImageMemorySwapchainInfoKHR\">VkBindImageMemorySwapchainInfoKHR</a> structure, <code>memory</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkBindImageMemoryDeviceGroupInfo\">VkBindImageMemoryDeviceGroupInfo</a>, <a href=\"#VkBindImageMemorySwapchainInfoKHR\">VkBindImageMemorySwapchainInfoKHR</a>, or <a href=\"#VkBindImagePlaneMemoryInfo\">VkBindImagePlaneMemoryInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-image-parameter",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryInfo-commonparent",
          "text": "Both of <code>image</code>, and <code>memory</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkBindImageMemoryDeviceGroupInfo": {
      "core": [
        {
          "vuid": "VUID-VkBindImageMemoryDeviceGroupInfo-deviceIndexCount-01634",
          "text": "<code>deviceIndexCount</code> <strong class=\"purple\">must</strong> either be zero or equal to the number of physical devices in the logical device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryDeviceGroupInfo-pDeviceIndices-01635",
          "text": "All elements of <code>pDeviceIndices</code> <strong class=\"purple\">must</strong> be valid device indices",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryDeviceGroupInfo-splitInstanceBindRegionCount-05067",
          "text": "<code>splitInstanceBindRegionCount</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryDeviceGroupInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryDeviceGroupInfo-pDeviceIndices-parameter",
          "text": "If <code>deviceIndexCount</code> is not <code>0</code>, <code>pDeviceIndices</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>deviceIndexCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemoryDeviceGroupInfo-pSplitInstanceBindRegions-parameter",
          "text": "If <code>splitInstanceBindRegionCount</code> is not <code>0</code>, <code>pSplitInstanceBindRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>splitInstanceBindRegionCount</code> <a href=\"#VkRect2D\">VkRect2D</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkBindImageMemorySwapchainInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkBindImageMemorySwapchainInfoKHR-imageIndex-01644",
          "text": "<code>imageIndex</code> <strong class=\"purple\">must</strong> be less than the number of images in <code>swapchain</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemorySwapchainInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImageMemorySwapchainInfoKHR-swapchain-parameter",
          "text": "<code>swapchain</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSwapchainKHR\">VkSwapchainKHR</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkBindImagePlaneMemoryInfo": {
      "core": [
        {
          "vuid": "VUID-VkBindImagePlaneMemoryInfo-planeAspect-02283",
          "text": "If the image&#8217;s <code>tiling</code> is <code>VK_IMAGE_TILING_LINEAR</code> or <code>VK_IMAGE_TILING_OPTIMAL</code>, then <code>planeAspect</code> <strong class=\"purple\">must</strong> be a single valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImagePlaneMemoryInfo-planeAspect-02284",
          "text": "If the image&#8217;s <code>tiling</code> is <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code>, then <code>planeAspect</code> <strong class=\"purple\">must</strong> be a single valid <em>memory plane</em> for the image (that is, <code>aspectMask</code> <strong class=\"purple\">must</strong> specify a plane index that is less than the <a href=\"#VkDrmFormatModifierPropertiesEXT\">VkDrmFormatModifierPropertiesEXT</a>::<code>drmFormatModifierPlaneCount</code> associated with the image&#8217;s <code>format</code> and <a href=\"#VkImageDrmFormatModifierPropertiesEXT\">VkImageDrmFormatModifierPropertiesEXT</a>::<code>drmFormatModifier</code>)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImagePlaneMemoryInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBindImagePlaneMemoryInfo-planeAspect-parameter",
          "text": "<code>planeAspect</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageAspectFlagBits\">VkImageAspectFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateSampler": {
      "core": [
        {
          "vuid": "VUID-vkCreateSampler-maxSamplerAllocationCount-04110",
          "text": "There <strong class=\"purple\">must</strong> be less than <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>maxSamplerAllocationCount</code> <a href=\"#VkSampler\">VkSampler</a> objects currently created on the device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSampler-device-05068",
          "text": "The number of samplers currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of samplers requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>samplerRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSampler-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSampler-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSamplerCreateInfo\">VkSamplerCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSampler-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSampler-pSampler-parameter",
          "text": "<code>pSampler</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkSampler\">VkSampler</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkSamplerCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkSamplerCreateInfo-mipLodBias-01069",
          "text": "The absolute value of <code>mipLodBias</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxSamplerLodBias</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-maxLod-01973",
          "text": "<code>maxLod</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>minLod</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-anisotropyEnable-01070",
          "text": "If the <a href=\"#features-samplerAnisotropy\"><code>samplerAnisotropy</code></a> feature is not enabled, <code>anisotropyEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-anisotropyEnable-01071",
          "text": "If <code>anisotropyEnable</code> is <code>VK_TRUE</code>, <code>maxAnisotropy</code> <strong class=\"purple\">must</strong> be between <code>1.0</code> and <code>VkPhysicalDeviceLimits</code>::<code>maxSamplerAnisotropy</code>, inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-minFilter-01645",
          "text": "If <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a> is enabled and the <a href=\"#potential-format-features\">potential format features</a> of the sampler Y′C<sub>B</sub>C<sub>R</sub> conversion do not support <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT</code>, <code>minFilter</code> and <code>magFilter</code> <strong class=\"purple\">must</strong> be equal to the sampler Y′C<sub>B</sub>C<sub>R</sub> conversion&#8217;s <code>chromaFilter</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-unnormalizedCoordinates-01072",
          "text": "If <code>unnormalizedCoordinates</code> is <code>VK_TRUE</code>, <code>minFilter</code> and <code>magFilter</code> <strong class=\"purple\">must</strong> be equal",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-unnormalizedCoordinates-01073",
          "text": "If <code>unnormalizedCoordinates</code> is <code>VK_TRUE</code>, <code>mipmapMode</code> <strong class=\"purple\">must</strong> be <code>VK_SAMPLER_MIPMAP_MODE_NEAREST</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-unnormalizedCoordinates-01074",
          "text": "If <code>unnormalizedCoordinates</code> is <code>VK_TRUE</code>, <code>minLod</code> and <code>maxLod</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-unnormalizedCoordinates-01075",
          "text": "If <code>unnormalizedCoordinates</code> is <code>VK_TRUE</code>, <code>addressModeU</code> and <code>addressModeV</code> <strong class=\"purple\">must</strong> each be either <code>VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE</code> or <code>VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-unnormalizedCoordinates-01076",
          "text": "If <code>unnormalizedCoordinates</code> is <code>VK_TRUE</code>, <code>anisotropyEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-unnormalizedCoordinates-01077",
          "text": "If <code>unnormalizedCoordinates</code> is <code>VK_TRUE</code>, <code>compareEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-addressModeU-01078",
          "text": "If any of <code>addressModeU</code>, <code>addressModeV</code> or <code>addressModeW</code> are <code>VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER</code>, <code>borderColor</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBorderColor\">VkBorderColor</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-addressModeU-01646",
          "text": "If <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a> is enabled, <code>addressModeU</code>, <code>addressModeV</code>, and <code>addressModeW</code> <strong class=\"purple\">must</strong> be <code>VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE</code>, <code>anisotropyEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>, and <code>unnormalizedCoordinates</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-None-01647",
          "text": "If <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a> is enabled and the <code>pNext</code> chain includes a <a href=\"#VkSamplerReductionModeCreateInfo\">VkSamplerReductionModeCreateInfo</a> structure, then the sampler reduction mode <strong class=\"purple\">must</strong> be set to <code>VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-pNext-06726",
          "text": "If <a href=\"#features-samplerFilterMinmax\"><code>samplerFilterMinmax</code></a> is not enabled and the <code>pNext</code> chain includes a <a href=\"#VkSamplerReductionModeCreateInfo\">VkSamplerReductionModeCreateInfo</a> structure, then the sampler reduction mode <strong class=\"purple\">must</strong> be set to <code>VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-addressModeU-01079",
          "text": "If <a href=\"#features-samplerMirrorClampToEdge\"><code>samplerMirrorClampToEdge</code></a> is not enabled, and if the <code><code>VK_KHR_sampler_mirror_clamp_to_edge</code></code> extension is not enabled, <code>addressModeU</code>, <code>addressModeV</code> and <code>addressModeW</code> <strong class=\"purple\">must</strong> not be <code>VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-compareEnable-01080",
          "text": "If <code>compareEnable</code> is <code>VK_TRUE</code>, <code>compareOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCompareOp\">VkCompareOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-magFilter-01081",
          "text": "If either <code>magFilter</code> or <code>minFilter</code> is <code>VK_FILTER_CUBIC_EXT</code>, <code>anisotropyEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-compareEnable-01423",
          "text": "If <code>compareEnable</code> is <code>VK_TRUE</code>, the <code>reductionMode</code> member of <a href=\"#VkSamplerReductionModeCreateInfo\">VkSamplerReductionModeCreateInfo</a> <strong class=\"purple\">must</strong> be <code>VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-borderColor-04011",
          "text": "If <code>borderColor</code> is one of <code>VK_BORDER_COLOR_FLOAT_CUSTOM_EXT</code> or <code>VK_BORDER_COLOR_INT_CUSTOM_EXT</code>, then a <a href=\"#VkSamplerCustomBorderColorCreateInfoEXT\">VkSamplerCustomBorderColorCreateInfoEXT</a> <strong class=\"purple\">must</strong> be included in the <code>pNext</code> chain",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-customBorderColors-04085",
          "text": "If the <a href=\"#features-customBorderColors\"><code>customBorderColors</code></a> feature is not enabled, <code>borderColor</code> <strong class=\"purple\">must</strong> not be <code>VK_BORDER_COLOR_FLOAT_CUSTOM_EXT</code> or <code>VK_BORDER_COLOR_INT_CUSTOM_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-borderColor-04442",
          "text": "If <code>borderColor</code> is one of <code>VK_BORDER_COLOR_FLOAT_CUSTOM_EXT</code> or <code>VK_BORDER_COLOR_INT_CUSTOM_EXT</code>, and <a href=\"#VkSamplerCustomBorderColorCreateInfoEXT\">VkSamplerCustomBorderColorCreateInfoEXT</a>::<code>format</code> is not <code>VK_FORMAT_UNDEFINED</code>, <a href=\"#VkSamplerCustomBorderColorCreateInfoEXT\">VkSamplerCustomBorderColorCreateInfoEXT</a>::<code>customBorderColor</code> <strong class=\"purple\">must</strong> be within the range of values representable in <code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-None-04012",
          "text": "The maximum number of samplers with custom border colors which <strong class=\"purple\">can</strong> be simultaneously created on a device is implementation-dependent and specified by the <a href=\"#limits-maxCustomBorderColorSamplers\"><code>maxCustomBorderColorSamplers</code></a> member of the <a href=\"#VkPhysicalDeviceCustomBorderColorPropertiesEXT\">VkPhysicalDeviceCustomBorderColorPropertiesEXT</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkSamplerCustomBorderColorCreateInfoEXT\">VkSamplerCustomBorderColorCreateInfoEXT</a>, <a href=\"#VkSamplerReductionModeCreateInfo\">VkSamplerReductionModeCreateInfo</a>, or <a href=\"#VkSamplerYcbcrConversionInfo\">VkSamplerYcbcrConversionInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-magFilter-parameter",
          "text": "<code>magFilter</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFilter\">VkFilter</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-minFilter-parameter",
          "text": "<code>minFilter</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFilter\">VkFilter</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-mipmapMode-parameter",
          "text": "<code>mipmapMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSamplerMipmapMode\">VkSamplerMipmapMode</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-addressModeU-parameter",
          "text": "<code>addressModeU</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSamplerAddressMode\">VkSamplerAddressMode</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-addressModeV-parameter",
          "text": "<code>addressModeV</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSamplerAddressMode\">VkSamplerAddressMode</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCreateInfo-addressModeW-parameter",
          "text": "<code>addressModeW</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSamplerAddressMode\">VkSamplerAddressMode</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkSamplerReductionModeCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkSamplerReductionModeCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerReductionModeCreateInfo-reductionMode-parameter",
          "text": "<code>reductionMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSamplerReductionMode\">VkSamplerReductionMode</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroySampler": {
      "core": [
        {
          "vuid": "VUID-vkDestroySampler-sampler-01082",
          "text": "All submitted commands that refer to <code>sampler</code> <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySampler-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySampler-sampler-parameter",
          "text": "If <code>sampler</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>sampler</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSampler\">VkSampler</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySampler-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySampler-sampler-parent",
          "text": "If <code>sampler</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkSamplerYcbcrConversionInfo": {
      "core": [
        {
          "vuid": "VUID-VkSamplerYcbcrConversionInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionInfo-conversion-parameter",
          "text": "<code>conversion</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSamplerYcbcrConversion\">VkSamplerYcbcrConversion</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateSamplerYcbcrConversion": {
      "core": [
        {
          "vuid": "VUID-vkCreateSamplerYcbcrConversion-None-01648",
          "text": "The <a href=\"#features-samplerYcbcrConversion\"><code>samplerYcbcrConversion</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSamplerYcbcrConversion-device-05068",
          "text": "The number of sampler conversions currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of sampler conversions requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>samplerYcbcrConversionRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSamplerYcbcrConversion-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSamplerYcbcrConversion-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSamplerYcbcrConversionCreateInfo\">VkSamplerYcbcrConversionCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSamplerYcbcrConversion-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSamplerYcbcrConversion-pYcbcrConversion-parameter",
          "text": "<code>pYcbcrConversion</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkSamplerYcbcrConversion\">VkSamplerYcbcrConversion</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkSamplerYcbcrConversionCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-format-04061",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> represent unsigned normalized values (i.e. the format <strong class=\"purple\">must</strong> be a <code>UNORM</code> format)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-format-01650",
          "text": "The <a href=\"#potential-format-features\">potential format features</a> of the sampler Y′C<sub>B</sub>C<sub>R</sub> conversion <strong class=\"purple\">must</strong> support <code>VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT</code> or <code>VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-xChromaOffset-01651",
          "text": "If the <a href=\"#potential-format-features\">potential format features</a> of the sampler Y′C<sub>B</sub>C<sub>R</sub> conversion do not support <code>VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT</code>, <code>xChromaOffset</code> and <code>yChromaOffset</code> <strong class=\"purple\">must</strong> not be <code>VK_CHROMA_LOCATION_COSITED_EVEN</code> if the corresponding components are <a href=\"#textures-chroma-reconstruction\">downsampled</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-xChromaOffset-01652",
          "text": "If the <a href=\"#potential-format-features\">potential format features</a> of the sampler Y′C<sub>B</sub>C<sub>R</sub> conversion do not support <code>VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT</code>, <code>xChromaOffset</code> and <code>yChromaOffset</code> <strong class=\"purple\">must</strong> not be <code>VK_CHROMA_LOCATION_MIDPOINT</code> if the corresponding components are <a href=\"#textures-chroma-reconstruction\">downsampled</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-components-02581",
          "text": "If the format has a <code>_422</code> or <code>_420</code> suffix, then <code>components.g</code> <strong class=\"purple\">must</strong> be the <a href=\"#resources-image-views-identity-mappings\">identity swizzle</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-components-02582",
          "text": "If the format has a <code>_422</code> or <code>_420</code> suffix, then <code>components.a</code> <strong class=\"purple\">must</strong> be the <a href=\"#resources-image-views-identity-mappings\">identity swizzle</a>, <code>VK_COMPONENT_SWIZZLE_ONE</code>, or <code>VK_COMPONENT_SWIZZLE_ZERO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-components-02583",
          "text": "If the format has a <code>_422</code> or <code>_420</code> suffix, then <code>components.r</code> <strong class=\"purple\">must</strong> be the <a href=\"#resources-image-views-identity-mappings\">identity swizzle</a> or <code>VK_COMPONENT_SWIZZLE_B</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-components-02584",
          "text": "If the format has a <code>_422</code> or <code>_420</code> suffix, then <code>components.b</code> <strong class=\"purple\">must</strong> be the <a href=\"#resources-image-views-identity-mappings\">identity swizzle</a> or <code>VK_COMPONENT_SWIZZLE_R</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-components-02585",
          "text": "If the format has a <code>_422</code> or <code>_420</code> suffix, and if either <code>components.r</code> or <code>components.b</code> is the <a href=\"#resources-image-views-identity-mappings\">identity swizzle</a>, both values <strong class=\"purple\">must</strong> be the identity swizzle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-ycbcrModel-01655",
          "text": "If <code>ycbcrModel</code> is not <code>VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY</code>, then <code>components.r</code>, <code>components.g</code>, and <code>components.b</code> <strong class=\"purple\">must</strong> correspond to components of the <code>format</code>; that is, <code>components.r</code>, <code>components.g</code>, and <code>components.b</code> <strong class=\"purple\">must</strong> not be <code>VK_COMPONENT_SWIZZLE_ZERO</code> or <code>VK_COMPONENT_SWIZZLE_ONE</code>, and <strong class=\"purple\">must</strong> not correspond to a component containing zero or one as a consequence of <a href=\"#textures-conversion-to-rgba\">conversion to RGBA</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-ycbcrRange-02748",
          "text": "If <code>ycbcrRange</code> is <code>VK_SAMPLER_YCBCR_RANGE_ITU_NARROW</code> then the R, G and B components obtained by applying the <code>component</code> swizzle to <code>format</code> <strong class=\"purple\">must</strong> each have a bit-depth greater than or equal to 8",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-forceExplicitReconstruction-01656",
          "text": "If the <a href=\"#potential-format-features\">potential format features</a> of the sampler Y′C<sub>B</sub>C<sub>R</sub> conversion do not support <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT</code> <code>forceExplicitReconstruction</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-chromaFilter-01657",
          "text": "If the <a href=\"#potential-format-features\">potential format features</a> of the sampler Y′C<sub>B</sub>C<sub>R</sub> conversion do not support <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT</code>, <code>chromaFilter</code> <strong class=\"purple\">must</strong> not be <code>VK_FILTER_LINEAR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkExternalFormatQNX\">VkExternalFormatQNX</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-ycbcrModel-parameter",
          "text": "<code>ycbcrModel</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSamplerYcbcrModelConversion\">VkSamplerYcbcrModelConversion</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-ycbcrRange-parameter",
          "text": "<code>ycbcrRange</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSamplerYcbcrRange\">VkSamplerYcbcrRange</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-components-parameter",
          "text": "<code>components</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkComponentMapping\">VkComponentMapping</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-xChromaOffset-parameter",
          "text": "<code>xChromaOffset</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkChromaLocation\">VkChromaLocation</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-yChromaOffset-parameter",
          "text": "<code>yChromaOffset</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkChromaLocation\">VkChromaLocation</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerYcbcrConversionCreateInfo-chromaFilter-parameter",
          "text": "<code>chromaFilter</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFilter\">VkFilter</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroySamplerYcbcrConversion": {
      "core": [
        {
          "vuid": "VUID-vkDestroySamplerYcbcrConversion-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySamplerYcbcrConversion-ycbcrConversion-parameter",
          "text": "If <code>ycbcrConversion</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>ycbcrConversion</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSamplerYcbcrConversion\">VkSamplerYcbcrConversion</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySamplerYcbcrConversion-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySamplerYcbcrConversion-ycbcrConversion-parent",
          "text": "If <code>ycbcrConversion</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkSamplerCustomBorderColorCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkSamplerCustomBorderColorCreateInfoEXT-format-07605",
          "text": "If <code>format</code> is not <code>VK_FORMAT_UNDEFINED</code> and <code>format</code> is not a depth/stencil format then the <a href=\"#VkSamplerCreateInfo\">VkSamplerCreateInfo</a>::<code>borderColor</code> type <strong class=\"purple\">must</strong> match the sampled type of the provided <code>format</code>, as shown in the <em>SPIR-V Type</em> column of the <a href=\"#formats-numericformat\">Interpretation of Numeric Format</a> table",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCustomBorderColorCreateInfoEXT-format-04014",
          "text": "If the <a href=\"#features-customBorderColorWithoutFormat\"><code>customBorderColorWithoutFormat</code></a> feature is not enabled then <code>format</code> <strong class=\"purple\">must</strong> not be <code>VK_FORMAT_UNDEFINED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCustomBorderColorCreateInfoEXT-format-04015",
          "text": "If the sampler is used to sample an image view of <code>VK_FORMAT_B4G4R4A4_UNORM_PACK16</code>, <code>VK_FORMAT_B5G6R5_UNORM_PACK16</code>, or <code>VK_FORMAT_B5G5R5A1_UNORM_PACK16</code> format then <code>format</code> <strong class=\"purple\">must</strong> not be <code>VK_FORMAT_UNDEFINED</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCustomBorderColorCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSamplerCustomBorderColorCreateInfoEXT-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateDescriptorSetLayout": {
      "core": [
        {
          "vuid": "VUID-vkCreateDescriptorSetLayout-device-05068",
          "text": "The number of descriptor set layouts currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of descriptor set layouts requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>descriptorSetLayoutRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDescriptorSetLayout-layoutbindings-device-05089",
          "text": "The number of descriptor set layout bindings currently allocated from <code>device</code> across all <a href=\"#VkDescriptorSetLayout\">VkDescriptorSetLayout</a> objects plus <code>pCreateInfo-&gt;bindingCount</code> <strong class=\"purple\">must</strong> be less than or equal to the total number of descriptor set layout bindings requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>descriptorSetLayoutBindingRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDescriptorSetLayout-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDescriptorSetLayout-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDescriptorSetLayoutCreateInfo\">VkDescriptorSetLayoutCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDescriptorSetLayout-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDescriptorSetLayout-pSetLayout-parameter",
          "text": "<code>pSetLayout</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkDescriptorSetLayout\">VkDescriptorSetLayout</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkDescriptorSetLayoutCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkDescriptorSetLayoutCreateInfo-binding-00279",
          "text": "The <a href=\"#VkDescriptorSetLayoutBinding\">VkDescriptorSetLayoutBinding</a>::<code>binding</code> members of the elements of the <code>pBindings</code> array <strong class=\"purple\">must</strong> each have different values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutCreateInfo-flags-03000",
          "text": "If any binding has the <code>VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT</code> bit set, <code>flags</code> <strong class=\"purple\">must</strong> include <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutCreateInfo-descriptorType-03001",
          "text": "If any binding has the <code>VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT</code> bit set, then all bindings <strong class=\"purple\">must</strong> not have <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code> or <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutCreateInfo-bindingCount-05011",
          "text": "<code>bindingCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxDescriptorSetLayoutBindings\">maxDescriptorSetLayoutBindings</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutCreateInfo-descriptorCount-05071",
          "text": "The sum of <code>descriptorCount</code> over all bindings in <code>pBindings</code> that have <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_SAMPLER</code> or <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code> and <code>pImmutableSamplers</code> not equal to <code>NULL</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>maxImmutableSamplersPerDescriptorSetLayout</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkDescriptorSetLayoutBindingFlagsCreateInfo\">VkDescriptorSetLayoutBindingFlagsCreateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkDescriptorSetLayoutCreateFlagBits\">VkDescriptorSetLayoutCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutCreateInfo-pBindings-parameter",
          "text": "If <code>bindingCount</code> is not <code>0</code>, <code>pBindings</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bindingCount</code> valid <a href=\"#VkDescriptorSetLayoutBinding\">VkDescriptorSetLayoutBinding</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkDescriptorSetLayoutBinding": {
      "core": [
        {
          "vuid": "VUID-VkDescriptorSetLayoutBinding-descriptorType-00282",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_SAMPLER</code> or <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code>, and <code>descriptorCount</code> is not <code>0</code> and <code>pImmutableSamplers</code> is not <code>NULL</code>, <code>pImmutableSamplers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>descriptorCount</code> valid <code>VkSampler</code> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBinding-descriptorCount-00283",
          "text": "If <code>descriptorCount</code> is not <code>0</code>, <code>stageFlags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkShaderStageFlagBits\">VkShaderStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBinding-descriptorType-01510",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT</code> and <code>descriptorCount</code> is not <code>0</code>, then <code>stageFlags</code> <strong class=\"purple\">must</strong> be <code>0</code> or <code>VK_SHADER_STAGE_FRAGMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBinding-pImmutableSamplers-04009",
          "text": "The sampler objects indicated by <code>pImmutableSamplers</code> <strong class=\"purple\">must</strong> not have a <code>borderColor</code> with one of the values <code>VK_BORDER_COLOR_FLOAT_CUSTOM_EXT</code> or <code>VK_BORDER_COLOR_INT_CUSTOM_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBinding-binding-05012",
          "text": "<code>binding</code> <strong class=\"purple\">must</strong> be less than the value of <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>descriptorSetLayoutBindingLimit</code> provided when the device was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBinding-descriptorType-parameter",
          "text": "<code>descriptorType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDescriptorType\">VkDescriptorType</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkDescriptorSetLayoutBindingFlagsCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-bindingCount-03002",
          "text": "If <code>bindingCount</code> is not zero, <code>bindingCount</code> <strong class=\"purple\">must</strong> equal <a href=\"#VkDescriptorSetLayoutCreateInfo\">VkDescriptorSetLayoutCreateInfo</a>::<code>bindingCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-pBindingFlags-03004",
          "text": "If an element of <code>pBindingFlags</code> includes <code>VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT</code>, then all other elements of <a href=\"#VkDescriptorSetLayoutCreateInfo\">VkDescriptorSetLayoutCreateInfo</a>::<code>pBindings</code> <strong class=\"purple\">must</strong> have a smaller value of <code>binding</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-pBindingFlags-09379",
          "text": "If an element of <code>pBindingFlags</code> includes <code>VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT</code>, then it <strong class=\"purple\">must</strong> be the element with the the highest <code>binding</code> number",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-descriptorBindingUniformBufferUpdateAfterBind-03005",
          "text": "If <a href=\"#VkPhysicalDeviceDescriptorIndexingFeatures\">VkPhysicalDeviceDescriptorIndexingFeatures</a>::<code>descriptorBindingUniformBufferUpdateAfterBind</code> is not enabled, all bindings with descriptor type <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER</code> <strong class=\"purple\">must</strong> not use <code>VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-descriptorBindingSampledImageUpdateAfterBind-03006",
          "text": "If <a href=\"#VkPhysicalDeviceDescriptorIndexingFeatures\">VkPhysicalDeviceDescriptorIndexingFeatures</a>::<code>descriptorBindingSampledImageUpdateAfterBind</code> is not enabled, all bindings with descriptor type <code>VK_DESCRIPTOR_TYPE_SAMPLER</code>, <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code>, or <code>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE</code> <strong class=\"purple\">must</strong> not use <code>VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-descriptorBindingStorageImageUpdateAfterBind-03007",
          "text": "If <a href=\"#VkPhysicalDeviceDescriptorIndexingFeatures\">VkPhysicalDeviceDescriptorIndexingFeatures</a>::<code>descriptorBindingStorageImageUpdateAfterBind</code> is not enabled, all bindings with descriptor type <code>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</code> <strong class=\"purple\">must</strong> not use <code>VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-descriptorBindingStorageBufferUpdateAfterBind-03008",
          "text": "If <a href=\"#VkPhysicalDeviceDescriptorIndexingFeatures\">VkPhysicalDeviceDescriptorIndexingFeatures</a>::<code>descriptorBindingStorageBufferUpdateAfterBind</code> is not enabled, all bindings with descriptor type <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER</code> <strong class=\"purple\">must</strong> not use <code>VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-descriptorBindingUniformTexelBufferUpdateAfterBind-03009",
          "text": "If <a href=\"#VkPhysicalDeviceDescriptorIndexingFeatures\">VkPhysicalDeviceDescriptorIndexingFeatures</a>::<code>descriptorBindingUniformTexelBufferUpdateAfterBind</code> is not enabled, all bindings with descriptor type <code>VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER</code> <strong class=\"purple\">must</strong> not use <code>VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-descriptorBindingStorageTexelBufferUpdateAfterBind-03010",
          "text": "If <a href=\"#VkPhysicalDeviceDescriptorIndexingFeatures\">VkPhysicalDeviceDescriptorIndexingFeatures</a>::<code>descriptorBindingStorageTexelBufferUpdateAfterBind</code> is not enabled, all bindings with descriptor type <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> <strong class=\"purple\">must</strong> not use <code>VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-None-03011",
          "text": "All bindings with descriptor type <code>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT</code>, <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code>, or <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code> <strong class=\"purple\">must</strong> not use <code>VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-descriptorBindingUpdateUnusedWhilePending-03012",
          "text": "If <a href=\"#VkPhysicalDeviceDescriptorIndexingFeatures\">VkPhysicalDeviceDescriptorIndexingFeatures</a>::<code>descriptorBindingUpdateUnusedWhilePending</code> is not enabled, all elements of <code>pBindingFlags</code> <strong class=\"purple\">must</strong> not include <code>VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-descriptorBindingPartiallyBound-03013",
          "text": "If <a href=\"#VkPhysicalDeviceDescriptorIndexingFeatures\">VkPhysicalDeviceDescriptorIndexingFeatures</a>::<code>descriptorBindingPartiallyBound</code> is not enabled, all elements of <code>pBindingFlags</code> <strong class=\"purple\">must</strong> not include <code>VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-descriptorBindingVariableDescriptorCount-03014",
          "text": "If <a href=\"#VkPhysicalDeviceDescriptorIndexingFeatures\">VkPhysicalDeviceDescriptorIndexingFeatures</a>::<code>descriptorBindingVariableDescriptorCount</code> is not enabled, all elements of <code>pBindingFlags</code> <strong class=\"purple\">must</strong> not include <code>VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-pBindingFlags-03015",
          "text": "If an element of <code>pBindingFlags</code> includes <code>VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT</code>, that element&#8217;s <code>descriptorType</code> <strong class=\"purple\">must</strong> not be <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code> or <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutBindingFlagsCreateInfo-pBindingFlags-parameter",
          "text": "If <code>bindingCount</code> is not <code>0</code>, <code>pBindingFlags</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bindingCount</code> valid combinations of <a href=\"#VkDescriptorBindingFlagBits\">VkDescriptorBindingFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDescriptorSetLayoutSupport": {
      "core": [
        {
          "vuid": "VUID-vkGetDescriptorSetLayoutSupport-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDescriptorSetLayoutSupport-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDescriptorSetLayoutCreateInfo\">VkDescriptorSetLayoutCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDescriptorSetLayoutSupport-pSupport-parameter",
          "text": "<code>pSupport</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkDescriptorSetLayoutSupport\">VkDescriptorSetLayoutSupport</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkDescriptorSetLayoutSupport": {
      "core": [
        {
          "vuid": "VUID-VkDescriptorSetLayoutSupport-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutSupport-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkDescriptorSetVariableDescriptorCountLayoutSupport\">VkDescriptorSetVariableDescriptorCountLayoutSupport</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetLayoutSupport-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        }
      ]
    },
    "VkDescriptorSetVariableDescriptorCountLayoutSupport": {
      "core": [
        {
          "vuid": "VUID-VkDescriptorSetVariableDescriptorCountLayoutSupport-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyDescriptorSetLayout": {
      "core": [
        {
          "vuid": "VUID-vkDestroyDescriptorSetLayout-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyDescriptorSetLayout-descriptorSetLayout-parameter",
          "text": "If <code>descriptorSetLayout</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>descriptorSetLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDescriptorSetLayout\">VkDescriptorSetLayout</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyDescriptorSetLayout-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyDescriptorSetLayout-descriptorSetLayout-parent",
          "text": "If <code>descriptorSetLayout</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreatePipelineLayout": {
      "core": [
        {
          "vuid": "VUID-vkCreatePipelineLayout-device-05068",
          "text": "The number of pipeline layouts currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of pipeline layouts requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>pipelineLayoutRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreatePipelineLayout-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreatePipelineLayout-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPipelineLayoutCreateInfo\">VkPipelineLayoutCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreatePipelineLayout-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreatePipelineLayout-pPipelineLayout-parameter",
          "text": "<code>pPipelineLayout</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineLayoutCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-setLayoutCount-00286",
          "text": "<code>setLayoutCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxBoundDescriptorSets</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03016",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_SAMPLER</code> and <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code> accessible to any given shader stage across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxPerStageDescriptorSamplers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03017",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER</code> and <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code> accessible to any given shader stage across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxPerStageDescriptorUniformBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03018",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER</code> and <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code> accessible to any given shader stage across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxPerStageDescriptorStorageBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-06939",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code>, <code>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE</code>, and <code>VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER</code>, accessible to any given shader stage across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxPerStageDescriptorSampledImages</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03020",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</code>, and <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> accessible to any given shader stage across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxPerStageDescriptorStorageImages</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03021",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT</code> accessible to any given shader stage across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxPerStageDescriptorInputAttachments</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03022",
          "text": "The total number of descriptors with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_SAMPLER</code> and <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code> accessible to any given shader stage across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxPerStageDescriptorUpdateAfterBindSamplers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03023",
          "text": "The total number of descriptors with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER</code> and <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code> accessible to any given shader stage across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxPerStageDescriptorUpdateAfterBindUniformBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03024",
          "text": "The total number of descriptors with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER</code> and <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code> accessible to any given shader stage across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxPerStageDescriptorUpdateAfterBindStorageBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03025",
          "text": "The total number of descriptors with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code>, <code>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE</code>, and <code>VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER</code> accessible to any given shader stage across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxPerStageDescriptorUpdateAfterBindSampledImages</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03026",
          "text": "The total number of descriptors with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</code>, and <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> accessible to any given shader stage across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxPerStageDescriptorUpdateAfterBindStorageImages</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03027",
          "text": "The total number of descriptors with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT</code> accessible to any given shader stage across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxPerStageDescriptorUpdateAfterBindInputAttachments</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03028",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_SAMPLER</code> and <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxDescriptorSetSamplers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03029",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxDescriptorSetUniformBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03030",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxDescriptorSetUniformBuffersDynamic</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03031",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxDescriptorSetStorageBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03032",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxDescriptorSetStorageBuffersDynamic</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03033",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code>, <code>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE</code>, and <code>VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxDescriptorSetSampledImages</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03034",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</code>, and <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxDescriptorSetStorageImages</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-descriptorType-03035",
          "text": "The total number of descriptors in descriptor set layouts created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set with a <code>descriptorType</code> of <code>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxDescriptorSetInputAttachments</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-pSetLayouts-03036",
          "text": "The total number of descriptors of the type <code>VK_DESCRIPTOR_TYPE_SAMPLER</code> and <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxDescriptorSetUpdateAfterBindSamplers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-pSetLayouts-03037",
          "text": "The total number of descriptors of the type <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxDescriptorSetUpdateAfterBindUniformBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-pSetLayouts-03038",
          "text": "The total number of descriptors of the type <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxDescriptorSetUpdateAfterBindUniformBuffersDynamic</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-pSetLayouts-03039",
          "text": "The total number of descriptors of the type <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxDescriptorSetUpdateAfterBindStorageBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-pSetLayouts-03040",
          "text": "The total number of descriptors of the type <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxDescriptorSetUpdateAfterBindStorageBuffersDynamic</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-pSetLayouts-03041",
          "text": "The total number of descriptors of the type <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code>, <code>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE</code>, and <code>VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxDescriptorSetUpdateAfterBindSampledImages</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-pSetLayouts-03042",
          "text": "The total number of descriptors of the type <code>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</code>, and <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxDescriptorSetUpdateAfterBindStorageImages</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-pSetLayouts-03043",
          "text": "The total number of descriptors of the type <code>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT</code> accessible across all shader stages and across all elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDescriptorIndexingProperties</code>::<code>maxDescriptorSetUpdateAfterBindInputAttachments</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-pPushConstantRanges-00292",
          "text": "Any two elements of <code>pPushConstantRanges</code> <strong class=\"purple\">must</strong> not include the same stage in <code>stageFlags</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-graphicsPipelineLibrary-06753",
          "text": "Elements     of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be valid <a href=\"#VkDescriptorSetLayout\">VkDescriptorSetLayout</a> objects",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-pSetLayouts-parameter",
          "text": "If <code>setLayoutCount</code> is not <code>0</code>, <code>pSetLayouts</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>setLayoutCount</code> valid or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> <a href=\"#VkDescriptorSetLayout\">VkDescriptorSetLayout</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineLayoutCreateInfo-pPushConstantRanges-parameter",
          "text": "If <code>pushConstantRangeCount</code> is not <code>0</code>, <code>pPushConstantRanges</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pushConstantRangeCount</code> valid <a href=\"#VkPushConstantRange\">VkPushConstantRange</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkPushConstantRange": {
      "core": [
        {
          "vuid": "VUID-VkPushConstantRange-offset-00294",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxPushConstantsSize</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPushConstantRange-offset-00295",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPushConstantRange-size-00296",
          "text": "<code>size</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPushConstantRange-size-00297",
          "text": "<code>size</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPushConstantRange-size-00298",
          "text": "<code>size</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxPushConstantsSize</code> minus <code>offset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPushConstantRange-stageFlags-parameter",
          "text": "<code>stageFlags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkShaderStageFlagBits\">VkShaderStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPushConstantRange-stageFlags-requiredbitmask",
          "text": "<code>stageFlags</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyPipelineLayout": {
      "core": [
        {
          "vuid": "VUID-vkDestroyPipelineLayout-pipelineLayout-02004",
          "text": "<code>pipelineLayout</code> <strong class=\"purple\">must</strong> not have been passed to any <code>vkCmd*</code> command for any command buffers that are still in the <a href=\"#commandbuffers-lifecycle\">recording state</a> when <code>vkDestroyPipelineLayout</code> is called",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyPipelineLayout-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyPipelineLayout-pipelineLayout-parameter",
          "text": "If <code>pipelineLayout</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>pipelineLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyPipelineLayout-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyPipelineLayout-pipelineLayout-parent",
          "text": "If <code>pipelineLayout</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateDescriptorPool": {
      "core": [
        {
          "vuid": "VUID-vkCreateDescriptorPool-device-05068",
          "text": "The number of descriptor pools currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of descriptor pools requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>descriptorPoolRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDescriptorPool-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDescriptorPool-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDescriptorPoolCreateInfo\">VkDescriptorPoolCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDescriptorPool-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDescriptorPool-pDescriptorPool-parameter",
          "text": "<code>pDescriptorPool</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkDescriptorPool\">VkDescriptorPool</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkDescriptorPoolCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkDescriptorPoolCreateInfo-descriptorPoolOverallocation-09227",
          "text": "<code>maxSets</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorPoolCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorPoolCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorPoolCreateInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkDescriptorPoolCreateFlagBits\">VkDescriptorPoolCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorPoolCreateInfo-pPoolSizes-parameter",
          "text": "If <code>poolSizeCount</code> is not <code>0</code>, <code>pPoolSizes</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>poolSizeCount</code> valid <a href=\"#VkDescriptorPoolSize\">VkDescriptorPoolSize</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkDescriptorPoolSize": {
      "core": [
        {
          "vuid": "VUID-VkDescriptorPoolSize-descriptorCount-00302",
          "text": "<code>descriptorCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorPoolSize-type-parameter",
          "text": "<code>type</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDescriptorType\">VkDescriptorType</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkAllocateDescriptorSets": {
      "core": [
        {
          "vuid": "VUID-vkAllocateDescriptorSets-device-05068",
          "text": "The number of descriptor sets currently allocated from <code>device</code> plus <a href=\"#VkDescriptorSetAllocateInfo\">VkDescriptorSetAllocateInfo</a>::<code>descriptorSetCount</code> <strong class=\"purple\">must</strong> be less than or equal to the total number of descriptor sets requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>descriptorSetRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateDescriptorSets-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateDescriptorSets-pAllocateInfo-parameter",
          "text": "<code>pAllocateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDescriptorSetAllocateInfo\">VkDescriptorSetAllocateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateDescriptorSets-pDescriptorSets-parameter",
          "text": "<code>pDescriptorSets</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pAllocateInfo-&gt;descriptorSetCount</code> <a href=\"#VkDescriptorSet\">VkDescriptorSet</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAllocateDescriptorSets-pAllocateInfo::descriptorSetCount-arraylength",
          "text": "<code>pAllocateInfo-&gt;descriptorSetCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkDescriptorSetAllocateInfo": {
      "core": [
        {
          "vuid": "VUID-VkDescriptorSetAllocateInfo-pSetLayouts-03044",
          "text": "If any element of <code>pSetLayouts</code> was created with the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> bit set, <code>descriptorPool</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT</code> flag set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetAllocateInfo-pSetLayouts-09380",
          "text": "If <code>pSetLayouts</code>[i] was created with an element of <code>pBindingFlags</code> that includes <code>VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT</code>, and <a href=\"#VkDescriptorSetVariableDescriptorCountAllocateInfo\">VkDescriptorSetVariableDescriptorCountAllocateInfo</a> is included in the <code>pNext</code> chain, and <code>VkDescriptorSetVariableDescriptorCountAllocateInfo</code>::<code>descriptorSetCount</code> is not zero, then <a href=\"#VkDescriptorSetVariableDescriptorCountAllocateInfo\">VkDescriptorSetVariableDescriptorCountAllocateInfo</a>::pDescriptorCounts[i] <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkDescriptorSetLayoutBinding\">VkDescriptorSetLayoutBinding</a>::descriptorCount for the corresponding binding used to create <code>pSetLayouts</code>[i]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetAllocateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetAllocateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkDescriptorSetVariableDescriptorCountAllocateInfo\">VkDescriptorSetVariableDescriptorCountAllocateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetAllocateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetAllocateInfo-descriptorPool-parameter",
          "text": "<code>descriptorPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDescriptorPool\">VkDescriptorPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetAllocateInfo-pSetLayouts-parameter",
          "text": "<code>pSetLayouts</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>descriptorSetCount</code> valid <a href=\"#VkDescriptorSetLayout\">VkDescriptorSetLayout</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetAllocateInfo-descriptorSetCount-arraylength",
          "text": "<code>descriptorSetCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetAllocateInfo-commonparent",
          "text": "Both of <code>descriptorPool</code>, and the elements of <code>pSetLayouts</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkDescriptorSetVariableDescriptorCountAllocateInfo": {
      "core": [
        {
          "vuid": "VUID-VkDescriptorSetVariableDescriptorCountAllocateInfo-descriptorSetCount-03045",
          "text": "If <code>descriptorSetCount</code> is not zero, <code>descriptorSetCount</code> <strong class=\"purple\">must</strong> equal <a href=\"#VkDescriptorSetAllocateInfo\">VkDescriptorSetAllocateInfo</a>::<code>descriptorSetCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetVariableDescriptorCountAllocateInfo-pSetLayouts-03046",
          "text": "If <a href=\"#VkDescriptorSetAllocateInfo\">VkDescriptorSetAllocateInfo</a>::<code>pSetLayouts</code>[i] has a variable-sized descriptor binding, then <code>pDescriptorCounts</code>[i] <strong class=\"purple\">must</strong> be less than or equal to the descriptor count specified for that binding when the descriptor set layout was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetVariableDescriptorCountAllocateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorSetVariableDescriptorCountAllocateInfo-pDescriptorCounts-parameter",
          "text": "If <code>descriptorSetCount</code> is not <code>0</code>, <code>pDescriptorCounts</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>descriptorSetCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        }
      ]
    },
    "vkFreeDescriptorSets": {
      "core": [
        {
          "vuid": "VUID-vkFreeDescriptorSets-pDescriptorSets-00309",
          "text": "All submitted commands that refer to any element of <code>pDescriptorSets</code> <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeDescriptorSets-pDescriptorSets-00310",
          "text": "<code>pDescriptorSets</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>descriptorSetCount</code> <code>VkDescriptorSet</code> handles, each element of which <strong class=\"purple\">must</strong> either be a valid handle or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeDescriptorSets-descriptorPool-00312",
          "text": "<code>descriptorPool</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT</code> flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeDescriptorSets-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeDescriptorSets-descriptorPool-parameter",
          "text": "<code>descriptorPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDescriptorPool\">VkDescriptorPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeDescriptorSets-descriptorSetCount-arraylength",
          "text": "<code>descriptorSetCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeDescriptorSets-descriptorPool-parent",
          "text": "<code>descriptorPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkFreeDescriptorSets-pDescriptorSets-parent",
          "text": "Each element of <code>pDescriptorSets</code> that is a valid handle <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>descriptorPool</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkResetDescriptorPool": {
      "core": [
        {
          "vuid": "VUID-vkResetDescriptorPool-descriptorPool-00313",
          "text": "All uses of <code>descriptorPool</code> (via any allocated descriptor sets) <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetDescriptorPool-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetDescriptorPool-descriptorPool-parameter",
          "text": "<code>descriptorPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDescriptorPool\">VkDescriptorPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetDescriptorPool-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetDescriptorPool-descriptorPool-parent",
          "text": "<code>descriptorPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkUpdateDescriptorSets": {
      "core": [
        {
          "vuid": "VUID-vkUpdateDescriptorSets-pDescriptorWrites-06236",
          "text": "For each element <span class=\"eq\">i</span> where <code>pDescriptorWrites</code>[i].<code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER</code> or <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code>, elements of the <code>pTexelBufferView</code> member of <code>pDescriptorWrites</code>[i] <strong class=\"purple\">must</strong> have been created on <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkUpdateDescriptorSets-pDescriptorWrites-06237",
          "text": "For each element <span class=\"eq\">i</span> where <code>pDescriptorWrites</code>[i].<code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER</code>, <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER</code>, <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code>, or <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code>, the <code>buffer</code> member of any element of the <code>pBufferInfo</code> member of <code>pDescriptorWrites</code>[i] <strong class=\"purple\">must</strong> have been created on <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkUpdateDescriptorSets-pDescriptorWrites-06238",
          "text": "For each element <span class=\"eq\">i</span> where <code>pDescriptorWrites</code>[i].<code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_SAMPLER</code> or <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code>, and <code>dstSet</code> was not allocated with a layout that included immutable samplers for <code>dstBinding</code> with <code>descriptorType</code>, the <code>sampler</code> member of any element of the <code>pImageInfo</code> member of <code>pDescriptorWrites</code>[i] <strong class=\"purple\">must</strong> have been created on <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkUpdateDescriptorSets-pDescriptorWrites-06239",
          "text": "For each element <span class=\"eq\">i</span> where <code>pDescriptorWrites</code>[i].<code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE</code>, <code>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</code>, <code>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT</code>, or <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code> the <code>imageView</code> member of any element of <code>pDescriptorWrites</code>[i] <strong class=\"purple\">must</strong> have been created on <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkUpdateDescriptorSets-pDescriptorWrites-06493",
          "text": "For each element <span class=\"eq\">i</span> where <code>pDescriptorWrites</code>[i].<code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_SAMPLER</code>, <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code>, <code>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE</code>, <code>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</code>, or <code>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT</code>, <code>pDescriptorWrites</code>[i].<code>pImageInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pDescriptorWrites</code>[i].<code>descriptorCount</code> valid <code>VkDescriptorImageInfo</code> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkUpdateDescriptorSets-None-03047",
          "text": "The <code>dstSet</code> member of each element of <code>pDescriptorWrites</code> or <code>pDescriptorCopies</code> for bindings which were created without the <code>VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT</code> or <code>VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT</code> bits set <strong class=\"purple\">must</strong> not be used by any command that was recorded to a command buffer which is in the <a href=\"#commandbuffers-lifecycle\">pending state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkUpdateDescriptorSets-pDescriptorWrites-06993",
          "text": "Host access to <code>pDescriptorWrites</code>[i].<code>dstSet</code> and <code>pDescriptorCopies</code>[i].<code>dstSet</code> <strong class=\"purple\">must</strong> be <a href=\"#fundamentals-threadingbehavior\">externally synchronized</a> unless explicitly denoted otherwise for specific flags",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkUpdateDescriptorSets-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkUpdateDescriptorSets-pDescriptorWrites-parameter",
          "text": "If <code>descriptorWriteCount</code> is not <code>0</code>, <code>pDescriptorWrites</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>descriptorWriteCount</code> valid <a href=\"#VkWriteDescriptorSet\">VkWriteDescriptorSet</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkUpdateDescriptorSets-pDescriptorCopies-parameter",
          "text": "If <code>descriptorCopyCount</code> is not <code>0</code>, <code>pDescriptorCopies</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>descriptorCopyCount</code> valid <a href=\"#VkCopyDescriptorSet\">VkCopyDescriptorSet</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkWriteDescriptorSet": {
      "core": [
        {
          "vuid": "VUID-VkWriteDescriptorSet-dstBinding-00315",
          "text": "<code>dstBinding</code> <strong class=\"purple\">must</strong> be less than or equal to the maximum value of <code>binding</code> of all <a href=\"#VkDescriptorSetLayoutBinding\">VkDescriptorSetLayoutBinding</a> structures specified when <code>dstSet</code>&#8217;s descriptor set layout was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-dstBinding-00316",
          "text": "<code>dstBinding</code> <strong class=\"purple\">must</strong> be a binding with a non-zero <code>descriptorCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorCount-00317",
          "text": "All consecutive bindings updated via a single <code>VkWriteDescriptorSet</code> structure, except those with a <code>descriptorCount</code> of zero, <strong class=\"purple\">must</strong> have identical <code>descriptorType</code> and <code>stageFlags</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorCount-00318",
          "text": "All consecutive bindings updated via a single <code>VkWriteDescriptorSet</code> structure, except those with a <code>descriptorCount</code> of zero, <strong class=\"purple\">must</strong> all either use immutable samplers or <strong class=\"purple\">must</strong> all not use immutable samplers",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00319",
          "text": "<code>descriptorType</code> <strong class=\"purple\">must</strong> match the type of <code>dstBinding</code> within <code>dstSet</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-dstSet-00320",
          "text": "<code>dstSet</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDescriptorSet\">VkDescriptorSet</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-dstArrayElement-00321",
          "text": "The sum of <code>dstArrayElement</code> and <code>descriptorCount</code> <strong class=\"purple\">must</strong> be less than or equal to the number of array elements in the descriptor set binding specified by <code>dstBinding</code>, and all applicable consecutive bindings, as described by <a href=\"#descriptorsets-updates-consecutive\">consecutive binding updates</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-02994",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER</code> or <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code>, each element of <code>pTexelBufferView</code> <strong class=\"purple\">must</strong> be either a valid <code>VkBufferView</code> handle or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-02995",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER</code> or <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> and the <a href=\"#features-nullDescriptor\"><code>nullDescriptor</code></a> feature is not enabled, each element of <code>pTexelBufferView</code> <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00324",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER</code>, <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER</code>, <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code>, or <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code>, <code>pBufferInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>descriptorCount</code> valid <code>VkDescriptorBufferInfo</code> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00325",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_SAMPLER</code> or <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code>, and <code>dstSet</code> was not allocated with a layout that included immutable samplers for <code>dstBinding</code> with <code>descriptorType</code>, the <code>sampler</code> member of each element of <code>pImageInfo</code> <strong class=\"purple\">must</strong> be a valid <code>VkSampler</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-02996",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code>, <code>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE</code>, or <code>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</code>, the <code>imageView</code> member of each element of <code>pImageInfo</code> <strong class=\"purple\">must</strong> be either a valid <code>VkImageView</code> handle or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-02997",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code>, <code>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE</code>, or <code>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</code>, and the <a href=\"#features-nullDescriptor\"><code>nullDescriptor</code></a> feature is not enabled, the <code>imageView</code> member of each element of <code>pImageInfo</code> <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-07683",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT</code>, the <code>imageView</code> member of each element of <code>pImageInfo</code> <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00327",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER</code> or <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code>, the <code>offset</code> member of each element of <code>pBufferInfo</code> <strong class=\"purple\">must</strong> be a multiple of <code>VkPhysicalDeviceLimits</code>::<code>minUniformBufferOffsetAlignment</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00328",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER</code> or <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code>, the <code>offset</code> member of each element of <code>pBufferInfo</code> <strong class=\"purple\">must</strong> be a multiple of <code>VkPhysicalDeviceLimits</code>::<code>minStorageBufferOffsetAlignment</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00329",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER</code>, <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code>, <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER</code>, or <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code>, and the <code>buffer</code> member of any element of <code>pBufferInfo</code> is the handle of a non-sparse buffer, then that buffer <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00330",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER</code> or <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code>, the <code>buffer</code> member of each element of <code>pBufferInfo</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00331",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER</code> or <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code>, the <code>buffer</code> member of each element of <code>pBufferInfo</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_STORAGE_BUFFER_BIT</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00332",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER</code> or <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code>, the <code>range</code> member of each element of <code>pBufferInfo</code>, or the <a href=\"#buffer-info-effective-range\">effective range</a> if <code>range</code> is <code>VK_WHOLE_SIZE</code>, <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxUniformBufferRange</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00333",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER</code> or <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code>, the <code>range</code> member of each element of <code>pBufferInfo</code>, or the <a href=\"#buffer-info-effective-range\">effective range</a> if <code>range</code> is <code>VK_WHOLE_SIZE</code>, <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxStorageBufferRange</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-08765",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER</code>, the <code>pTexelBufferView</code> <a href=\"#resources-buffer-views-usage\">buffer view usage</a> <strong class=\"purple\">must</strong> include <code>VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-08766",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code>, the <code>pTexelBufferView</code> <a href=\"#resources-buffer-views-usage\">buffer view usage</a> <strong class=\"purple\">must</strong> include <code>VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00336",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</code> or <code>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT</code>, the <code>imageView</code> member of each element of <code>pImageInfo</code> <strong class=\"purple\">must</strong> have been created with the identity swizzle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00337",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE</code> or <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code>, the <code>imageView</code> member of each element of <code>pImageInfo</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_SAMPLED_BIT</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-04149",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE</code> the <code>imageLayout</code> member of each element of <code>pImageInfo</code> <strong class=\"purple\">must</strong> be a member of the list given in <a href=\"#descriptorsets-sampledimage\">Sampled Image</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-04150",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER</code> the <code>imageLayout</code> member of each element of <code>pImageInfo</code> <strong class=\"purple\">must</strong> be a member of the list given in <a href=\"#descriptorsets-combinedimagesampler\">Combined Image Sampler</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-04151",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT</code> the <code>imageLayout</code> member of each element of <code>pImageInfo</code> <strong class=\"purple\">must</strong> be a member of the list given in <a href=\"#descriptorsets-inputattachment\">Input Attachment</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-04152",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</code> the <code>imageLayout</code> member of each element of <code>pImageInfo</code> <strong class=\"purple\">must</strong> be a member of the list given in <a href=\"#descriptorsets-storageimage\">Storage Image</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00338",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT</code>, the <code>imageView</code> member of each element of <code>pImageInfo</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-00339",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE</code>, the <code>imageView</code> member of each element of <code>pImageInfo</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_STORAGE_BIT</code> set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-02752",
          "text": "If <code>descriptorType</code> is <code>VK_DESCRIPTOR_TYPE_SAMPLER</code>, then <code>dstSet</code> <strong class=\"purple\">must</strong> not have been allocated with a layout that included immutable samplers for <code>dstBinding</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorType-parameter",
          "text": "<code>descriptorType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDescriptorType\">VkDescriptorType</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-descriptorCount-arraylength",
          "text": "<code>descriptorCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkWriteDescriptorSet-commonparent",
          "text": "Both of <code>dstSet</code>, and the elements of <code>pTexelBufferView</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkDescriptorBufferInfo": {
      "core": [
        {
          "vuid": "VUID-VkDescriptorBufferInfo-offset-00340",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be less than the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorBufferInfo-range-00341",
          "text": "If <code>range</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>range</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorBufferInfo-range-00342",
          "text": "If <code>range</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>range</code> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code> minus <code>offset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorBufferInfo-buffer-02998",
          "text": "If the <a href=\"#features-nullDescriptor\"><code>nullDescriptor</code></a> feature is not enabled, <code>buffer</code> <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorBufferInfo-buffer-02999",
          "text": "If <code>buffer</code> is <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>offset</code> <strong class=\"purple\">must</strong> be zero and <code>range</code> <strong class=\"purple\">must</strong> be <code>VK_WHOLE_SIZE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorBufferInfo-buffer-parameter",
          "text": "If <code>buffer</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkDescriptorImageInfo": {
      "core": [
        {
          "vuid": "VUID-VkDescriptorImageInfo-imageView-06712",
          "text": "<code>imageView</code> <strong class=\"purple\">must</strong> not be a 2D array image view created from a 3D image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorImageInfo-descriptorType-06713",
          "text": "<code>imageView</code> <strong class=\"purple\">must</strong> not be a 2D view created from a 3D image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorImageInfo-descriptorType-06714",
          "text": "<code>imageView</code> <strong class=\"purple\">must</strong> not be a 2D view created from a 3D image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorImageInfo-imageView-01976",
          "text": "If <code>imageView</code> is created from a depth/stencil image, the <code>aspectMask</code> used to create the <code>imageView</code> <strong class=\"purple\">must</strong> include either <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> or <code>VK_IMAGE_ASPECT_STENCIL_BIT</code> but not both",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorImageInfo-imageLayout-09425",
          "text": "If <code>imageLayout</code> is <code>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL</code>, then the <code>aspectMask</code> used to create <code>imageView</code> <strong class=\"purple\">must</strong> not include either <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> or <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorImageInfo-imageLayout-09426",
          "text": "If <code>imageLayout</code> is <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL</code>, <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL</code>, then the <code>aspectMask</code> used to create <code>imageView</code> <strong class=\"purple\">must</strong> not include <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorImageInfo-imageLayout-00344",
          "text": "<code>imageLayout</code> <strong class=\"purple\">must</strong> match the actual <a href=\"#VkImageLayout\">VkImageLayout</a> of each subresource accessible from <code>imageView</code> at the time this descriptor is accessed as defined by the <a href=\"#resources-image-layouts-matching-rule\">image layout matching rules</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorImageInfo-sampler-01564",
          "text": "If <code>sampler</code> is used and the <a href=\"#VkFormat\">VkFormat</a> of the image is a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar format</a>, the image <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT</code>, and the <code>aspectMask</code> of the <code>imageView</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDescriptorImageInfo-commonparent",
          "text": "Both of <code>imageView</code>, and <code>sampler</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkCopyDescriptorSet": {
      "core": [
        {
          "vuid": "VUID-VkCopyDescriptorSet-srcBinding-00345",
          "text": "<code>srcBinding</code> <strong class=\"purple\">must</strong> be a valid binding within <code>srcSet</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-srcArrayElement-00346",
          "text": "The sum of <code>srcArrayElement</code> and <code>descriptorCount</code> <strong class=\"purple\">must</strong> be less than or equal to the number of array elements in the descriptor set binding specified by <code>srcBinding</code>, and all applicable consecutive bindings, as described by <a href=\"#descriptorsets-updates-consecutive\">consecutive binding updates</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-dstBinding-00347",
          "text": "<code>dstBinding</code> <strong class=\"purple\">must</strong> be a valid binding within <code>dstSet</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-dstArrayElement-00348",
          "text": "The sum of <code>dstArrayElement</code> and <code>descriptorCount</code> <strong class=\"purple\">must</strong> be less than or equal to the number of array elements in the descriptor set binding specified by <code>dstBinding</code>, and all applicable consecutive bindings, as described by <a href=\"#descriptorsets-updates-consecutive\">consecutive binding updates</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-dstBinding-02632",
          "text": "The type of <code>dstBinding</code> within <code>dstSet</code> <strong class=\"purple\">must</strong> be equal to the type of <code>srcBinding</code> within <code>srcSet</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-srcSet-00349",
          "text": "If <code>srcSet</code> is equal to <code>dstSet</code>, then the source and destination ranges of descriptors <strong class=\"purple\">must</strong> not overlap, where the ranges <strong class=\"purple\">may</strong> include array elements from consecutive bindings as described by <a href=\"#descriptorsets-updates-consecutive\">consecutive binding updates</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-srcSet-01918",
          "text": "If <code>srcSet</code>&#8217;s layout was created with the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> flag set, then <code>dstSet</code>&#8217;s layout <strong class=\"purple\">must</strong> also have been created with the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> flag set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-srcSet-04885",
          "text": "If <code>srcSet</code>&#8217;s layout was created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> flag set, then <code>dstSet</code>&#8217;s layout <strong class=\"purple\">must</strong> have been created without the <code>VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT</code> flag set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-srcSet-01920",
          "text": "If the descriptor pool from which <code>srcSet</code> was allocated was created with the <code>VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT</code> flag set, then the descriptor pool from which <code>dstSet</code> was allocated <strong class=\"purple\">must</strong> also have been created with the <code>VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT</code> flag set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-srcSet-04887",
          "text": "If the descriptor pool from which <code>srcSet</code> was allocated was created without the <code>VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT</code> flag set, then the descriptor pool from which <code>dstSet</code> was allocated <strong class=\"purple\">must</strong> have been created without the <code>VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT</code> flag set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-dstBinding-02753",
          "text": "If the descriptor type of the descriptor set binding specified by <code>dstBinding</code> is <code>VK_DESCRIPTOR_TYPE_SAMPLER</code>, then <code>dstSet</code> <strong class=\"purple\">must</strong> not have been allocated with a layout that included immutable samplers for <code>dstBinding</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-srcSet-parameter",
          "text": "<code>srcSet</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDescriptorSet\">VkDescriptorSet</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-dstSet-parameter",
          "text": "<code>dstSet</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDescriptorSet\">VkDescriptorSet</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyDescriptorSet-commonparent",
          "text": "Both of <code>dstSet</code>, and <code>srcSet</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdBindDescriptorSets": {
      "core": [
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-pDescriptorSets-00358",
          "text": "Each element of <code>pDescriptorSets</code> <strong class=\"purple\">must</strong> have been allocated with a <code>VkDescriptorSetLayout</code> that matches (is the same as, or identically defined as) the <code>VkDescriptorSetLayout</code> at set <em>n</em> in <code>layout</code>, where <em>n</em> is the sum of <code>firstSet</code> and the index into <code>pDescriptorSets</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-dynamicOffsetCount-00359",
          "text": "<code>dynamicOffsetCount</code> <strong class=\"purple\">must</strong> be equal to the total number of dynamic descriptors in <code>pDescriptorSets</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-firstSet-00360",
          "text": "The sum of <code>firstSet</code> and <code>descriptorSetCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPipelineLayoutCreateInfo\">VkPipelineLayoutCreateInfo</a>::<code>setLayoutCount</code> provided when <code>layout</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-pipelineBindPoint-00361",
          "text": "<code>pipelineBindPoint</code> <strong class=\"purple\">must</strong> be supported by the <code>commandBuffer</code>&#8217;s parent <code>VkCommandPool</code>&#8217;s queue family",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-pDynamicOffsets-01971",
          "text": "Each element of <code>pDynamicOffsets</code> which corresponds to a descriptor binding with type <code>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC</code> <strong class=\"purple\">must</strong> be a multiple of <code>VkPhysicalDeviceLimits</code>::<code>minUniformBufferOffsetAlignment</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-pDynamicOffsets-01972",
          "text": "Each element of <code>pDynamicOffsets</code> which corresponds to a descriptor binding with type <code>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC</code> <strong class=\"purple\">must</strong> be a multiple of <code>VkPhysicalDeviceLimits</code>::<code>minStorageBufferOffsetAlignment</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-pDescriptorSets-01979",
          "text": "For each dynamic uniform or storage buffer binding in <code>pDescriptorSets</code>, the sum of the <a href=\"#dynamic-effective-offset\">effective offset</a> and the range of the binding <strong class=\"purple\">must</strong> be less than or equal to the size of the buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-pDescriptorSets-06715",
          "text": "For each dynamic uniform or storage buffer binding in <code>pDescriptorSets</code>, if the range was set with <code>VK_WHOLE_SIZE</code> then <code>pDynamicOffsets</code> which corresponds to the descriptor binding <strong class=\"purple\">must</strong> be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-graphicsPipelineLibrary-06754",
          "text": "Each     element of <code>pDescriptorSets</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDescriptorSet\">VkDescriptorSet</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-pipelineBindPoint-parameter",
          "text": "<code>pipelineBindPoint</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineBindPoint\">VkPipelineBindPoint</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-layout-parameter",
          "text": "<code>layout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-pDescriptorSets-parameter",
          "text": "<code>pDescriptorSets</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>descriptorSetCount</code> valid or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> <a href=\"#VkDescriptorSet\">VkDescriptorSet</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-pDynamicOffsets-parameter",
          "text": "If <code>dynamicOffsetCount</code> is not <code>0</code>, <code>pDynamicOffsets</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>dynamicOffsetCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-descriptorSetCount-arraylength",
          "text": "<code>descriptorSetCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindDescriptorSets-commonparent",
          "text": "Each of <code>commandBuffer</code>, <code>layout</code>, and the elements of <code>pDescriptorSets</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdPushConstants": {
      "core": [
        {
          "vuid": "VUID-vkCmdPushConstants-offset-01795",
          "text": "For each byte in the range specified by <code>offset</code> and <code>size</code> and for each shader stage in <code>stageFlags</code>, there <strong class=\"purple\">must</strong> be a push constant range in <code>layout</code> that includes that byte and that stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-offset-01796",
          "text": "For each byte in the range specified by <code>offset</code> and <code>size</code> and for each push constant range that overlaps that byte, <code>stageFlags</code> <strong class=\"purple\">must</strong> include all stages in that push constant range&#8217;s <a href=\"#VkPushConstantRange\">VkPushConstantRange</a>::<code>stageFlags</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-offset-00368",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-size-00369",
          "text": "<code>size</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-offset-00370",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxPushConstantsSize</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-size-00371",
          "text": "<code>size</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxPushConstantsSize</code> minus <code>offset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-layout-parameter",
          "text": "<code>layout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-stageFlags-parameter",
          "text": "<code>stageFlags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkShaderStageFlagBits\">VkShaderStageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-stageFlags-requiredbitmask",
          "text": "<code>stageFlags</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-pValues-parameter",
          "text": "<code>pValues</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>size</code> bytes",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-size-arraylength",
          "text": "<code>size</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdPushConstants-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>layout</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetBufferDeviceAddress": {
      "core": [
        {
          "vuid": "VUID-vkGetBufferDeviceAddress-bufferDeviceAddress-03324",
          "text": "The <a href=\"#features-bufferDeviceAddress\"><code>bufferDeviceAddress</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetBufferDeviceAddress-device-03325",
          "text": "If <code>device</code> was created with multiple physical devices, then the <a href=\"#features-bufferDeviceAddressMultiDevice\"><code>bufferDeviceAddressMultiDevice</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetBufferDeviceAddress-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetBufferDeviceAddress-pInfo-parameter",
          "text": "<code>pInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkBufferDeviceAddressInfo\">VkBufferDeviceAddressInfo</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkBufferDeviceAddressInfo": {
      "core": [
        {
          "vuid": "VUID-VkBufferDeviceAddressInfo-buffer-02600",
          "text": "If <code>buffer</code> is non-sparse and was not created with the <code>VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT</code> flag, then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferDeviceAddressInfo-buffer-02601",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferDeviceAddressInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferDeviceAddressInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferDeviceAddressInfo-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkGetBufferOpaqueCaptureAddress": {
      "core": [
        {
          "vuid": "VUID-vkGetBufferOpaqueCaptureAddress-None-03326",
          "text": "The <a href=\"#features-bufferDeviceAddress\"><code>bufferDeviceAddress</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetBufferOpaqueCaptureAddress-device-03327",
          "text": "If <code>device</code> was created with multiple physical devices, then the <a href=\"#features-bufferDeviceAddressMultiDevice\"><code>bufferDeviceAddressMultiDevice</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetBufferOpaqueCaptureAddress-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetBufferOpaqueCaptureAddress-pInfo-parameter",
          "text": "<code>pInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkBufferDeviceAddressInfo\">VkBufferDeviceAddressInfo</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "BaseInstance": {
      "core": [
        {
          "vuid": "VUID-BaseInstance-BaseInstance-04181",
          "text": "The <code>BaseInstance</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Vertex</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-BaseInstance-BaseInstance-04182",
          "text": "The variable decorated with <code>BaseInstance</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-BaseInstance-BaseInstance-04183",
          "text": "The variable decorated with <code>BaseInstance</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "BaseVertex": {
      "core": [
        {
          "vuid": "VUID-BaseVertex-BaseVertex-04184",
          "text": "The <code>BaseVertex</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Vertex</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-BaseVertex-BaseVertex-04185",
          "text": "The variable decorated with <code>BaseVertex</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-BaseVertex-BaseVertex-04186",
          "text": "The variable decorated with <code>BaseVertex</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "ClipDistance": {
      "core": [
        {
          "vuid": "VUID-ClipDistance-ClipDistance-04187",
          "text": "The <code>ClipDistance</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>MeshEXT</code>, <code>MeshNV</code>, <code>Vertex</code>, <code>Fragment</code>, <code>TessellationControl</code>, <code>TessellationEvaluation</code>, or <code>Geometry</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ClipDistance-ClipDistance-04188",
          "text": "The variable decorated with <code>ClipDistance</code> within the <code>MeshEXT</code>, <code>MeshNV</code>, or <code>Vertex</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ClipDistance-ClipDistance-04189",
          "text": "The variable decorated with <code>ClipDistance</code> within the <code>Fragment</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ClipDistance-ClipDistance-04190",
          "text": "The variable decorated with <code>ClipDistance</code> within the <code>TessellationControl</code>, <code>TessellationEvaluation</code>, or <code>Geometry</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> not be declared in a <code>Storage</code> <code>Class</code> other than <code>Input</code> or <code>Output</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ClipDistance-ClipDistance-04191",
          "text": "The variable decorated with <code>ClipDistance</code> <strong class=\"purple\">must</strong> be declared as an array of 32-bit floating-point values",
          "page": "vkspec"
        }
      ]
    },
    "CullDistance": {
      "core": [
        {
          "vuid": "VUID-CullDistance-CullDistance-04196",
          "text": "The <code>CullDistance</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>MeshEXT</code>, <code>MeshNV</code>, <code>Vertex</code>, <code>Fragment</code>, <code>TessellationControl</code>, <code>TessellationEvaluation</code>, or <code>Geometry</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-CullDistance-CullDistance-04197",
          "text": "The variable decorated with <code>CullDistance</code> within the <code>MeshEXT</code>, <code>MeshNV</code> or <code>Vertex</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-CullDistance-CullDistance-04198",
          "text": "The variable decorated with <code>CullDistance</code> within the <code>Fragment</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-CullDistance-CullDistance-04199",
          "text": "The variable decorated with <code>CullDistance</code> within the <code>TessellationControl</code>, <code>TessellationEvaluation</code>, or <code>Geometry</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> not be declared using a <code>Storage</code> <code>Class</code> other than <code>Input</code> or <code>Output</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-CullDistance-CullDistance-04200",
          "text": "The variable decorated with <code>CullDistance</code> <strong class=\"purple\">must</strong> be declared as an array of 32-bit floating-point values",
          "page": "vkspec"
        }
      ]
    },
    "DeviceIndex": {
      "core": [
        {
          "vuid": "VUID-DeviceIndex-DeviceIndex-04205",
          "text": "The variable decorated with <code>DeviceIndex</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-DeviceIndex-DeviceIndex-04206",
          "text": "The variable decorated with <code>DeviceIndex</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "DrawIndex": {
      "core": [
        {
          "vuid": "VUID-DrawIndex-DrawIndex-04207",
          "text": "The <code>DrawIndex</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Vertex</code>, <code>MeshEXT</code>, <code>TaskEXT</code>, <code>MeshNV</code>, or <code>TaskNV</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-DrawIndex-DrawIndex-04208",
          "text": "The variable decorated with <code>DrawIndex</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-DrawIndex-DrawIndex-04209",
          "text": "The variable decorated with <code>DrawIndex</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "FragCoord": {
      "core": [
        {
          "vuid": "VUID-FragCoord-FragCoord-04210",
          "text": "The <code>FragCoord</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-FragCoord-FragCoord-04211",
          "text": "The variable decorated with <code>FragCoord</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-FragCoord-FragCoord-04212",
          "text": "The variable decorated with <code>FragCoord</code> <strong class=\"purple\">must</strong> be declared as a four-component vector of 32-bit floating-point values",
          "page": "vkspec"
        }
      ]
    },
    "FragDepth": {
      "core": [
        {
          "vuid": "VUID-FragDepth-FragDepth-04213",
          "text": "The <code>FragDepth</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-FragDepth-FragDepth-04214",
          "text": "The variable decorated with <code>FragDepth</code> <strong class=\"purple\">must</strong> be declared using the <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-FragDepth-FragDepth-04215",
          "text": "The variable decorated with <code>FragDepth</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit floating-point value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-FragDepth-FragDepth-04216",
          "text": "If the shader dynamically writes to the variable decorated with <code>FragDepth</code>, the <code>DepthReplacing</code> <code>Execution</code> <code>Mode</code> <strong class=\"purple\">must</strong> be declared",
          "page": "vkspec"
        }
      ]
    },
    "FragStencilRefEXT": {
      "core": [
        {
          "vuid": "VUID-FragStencilRefEXT-FragStencilRefEXT-04223",
          "text": "The <code>FragStencilRefEXT</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-FragStencilRefEXT-FragStencilRefEXT-04224",
          "text": "The variable decorated with <code>FragStencilRefEXT</code> <strong class=\"purple\">must</strong> be declared using the <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-FragStencilRefEXT-FragStencilRefEXT-04225",
          "text": "The variable decorated with <code>FragStencilRefEXT</code> <strong class=\"purple\">must</strong> be declared as a scalar integer value",
          "page": "vkspec"
        }
      ]
    },
    "FrontFacing": {
      "core": [
        {
          "vuid": "VUID-FrontFacing-FrontFacing-04229",
          "text": "The <code>FrontFacing</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-FrontFacing-FrontFacing-04230",
          "text": "The variable decorated with <code>FrontFacing</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-FrontFacing-FrontFacing-04231",
          "text": "The variable decorated with <code>FrontFacing</code> <strong class=\"purple\">must</strong> be declared as a boolean value",
          "page": "vkspec"
        }
      ]
    },
    "FullyCoveredEXT": {
      "core": [
        {
          "vuid": "VUID-FullyCoveredEXT-FullyCoveredEXT-04232",
          "text": "The <code>FullyCoveredEXT</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-FullyCoveredEXT-FullyCoveredEXT-04233",
          "text": "The variable decorated with <code>FullyCoveredEXT</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-FullyCoveredEXT-FullyCoveredEXT-04234",
          "text": "The variable decorated with <code>FullyCoveredEXT</code> <strong class=\"purple\">must</strong> be declared as a boolean value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-FullyCoveredEXT-conservativeRasterizationPostDepthCoverage-04235",
          "text": "If <code>VkPhysicalDeviceConservativeRasterizationPropertiesEXT</code>::<code>conservativeRasterizationPostDepthCoverage</code> is not supported the <code>PostDepthCoverage</code> <code>Execution</code> <code>Mode</code> <strong class=\"purple\">must</strong> not be declared, when a variable with the <code>FullyCoveredEXT</code> decoration is declared",
          "page": "vkspec"
        }
      ]
    },
    "GlobalInvocationId": {
      "core": [
        {
          "vuid": "VUID-GlobalInvocationId-GlobalInvocationId-04236",
          "text": "The <code>GlobalInvocationId</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>GLCompute</code>, <code>MeshEXT</code>, <code>TaskEXT</code>, <code>MeshNV</code>, or <code>TaskNV</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-GlobalInvocationId-GlobalInvocationId-04237",
          "text": "The variable decorated with <code>GlobalInvocationId</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-GlobalInvocationId-GlobalInvocationId-04238",
          "text": "The variable decorated with <code>GlobalInvocationId</code> <strong class=\"purple\">must</strong> be declared as a three-component vector of 32-bit integer values",
          "page": "vkspec"
        }
      ]
    },
    "HelperInvocation": {
      "core": [
        {
          "vuid": "VUID-HelperInvocation-HelperInvocation-04239",
          "text": "The <code>HelperInvocation</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-HelperInvocation-HelperInvocation-04240",
          "text": "The variable decorated with <code>HelperInvocation</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-HelperInvocation-HelperInvocation-04241",
          "text": "The variable decorated with <code>HelperInvocation</code> <strong class=\"purple\">must</strong> be declared as a boolean value",
          "page": "vkspec"
        }
      ]
    },
    "InvocationId": {
      "core": [
        {
          "vuid": "VUID-InvocationId-InvocationId-04257",
          "text": "The <code>InvocationId</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>TessellationControl</code> or <code>Geometry</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-InvocationId-InvocationId-04258",
          "text": "The variable decorated with <code>InvocationId</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-InvocationId-InvocationId-04259",
          "text": "The variable decorated with <code>InvocationId</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "InstanceIndex": {
      "core": [
        {
          "vuid": "VUID-InstanceIndex-InstanceIndex-04263",
          "text": "The <code>InstanceIndex</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Vertex</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-InstanceIndex-InstanceIndex-04264",
          "text": "The variable decorated with <code>InstanceIndex</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-InstanceIndex-InstanceIndex-04265",
          "text": "The variable decorated with <code>InstanceIndex</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "Layer": {
      "core": [
        {
          "vuid": "VUID-Layer-Layer-04272",
          "text": "The <code>Layer</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>MeshEXT</code>, <code>MeshNV</code>, <code>Vertex</code>, <code>TessellationEvaluation</code>, <code>Geometry</code>, or <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-Layer-Layer-04273",
          "text": "If the <a href=\"#features-shaderOutputLayer\"><code>shaderOutputLayer</code></a> feature is not enabled then the <code>Layer</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Geometry</code> or <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-Layer-Layer-04274",
          "text": "The variable decorated with <code>Layer</code> within the <code>MeshEXT</code>, <code>MeshNV</code>, <code>Vertex</code>, <code>TessellationEvaluation</code>, or <code>Geometry</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-Layer-Layer-04275",
          "text": "The variable decorated with <code>Layer</code> within the <code>Fragment</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-Layer-Layer-04276",
          "text": "The variable decorated with <code>Layer</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-Layer-Layer-07039",
          "text": "The variable decorated with <code>Layer</code> within the <code>MeshEXT</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> also be decorated with the <code>PerPrimitiveEXT</code> decoration",
          "page": "vkspec"
        }
      ]
    },
    "LocalInvocationId": {
      "core": [
        {
          "vuid": "VUID-LocalInvocationId-LocalInvocationId-04281",
          "text": "The <code>LocalInvocationId</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>GLCompute</code>, <code>MeshEXT</code>, <code>TaskEXT</code>, <code>MeshNV</code>, or <code>TaskNV</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-LocalInvocationId-LocalInvocationId-04282",
          "text": "The variable decorated with <code>LocalInvocationId</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-LocalInvocationId-LocalInvocationId-04283",
          "text": "The variable decorated with <code>LocalInvocationId</code> <strong class=\"purple\">must</strong> be declared as a three-component vector of 32-bit integer values",
          "page": "vkspec"
        }
      ]
    },
    "LocalInvocationIndex": {
      "core": [
        {
          "vuid": "VUID-LocalInvocationIndex-LocalInvocationIndex-04284",
          "text": "The <code>LocalInvocationIndex</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>GLCompute</code>, <code>MeshEXT</code>, <code>TaskEXT</code>, <code>MeshNV</code>, or <code>TaskNV</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-LocalInvocationIndex-LocalInvocationIndex-04285",
          "text": "The variable decorated with <code>LocalInvocationIndex</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-LocalInvocationIndex-LocalInvocationIndex-04286",
          "text": "The variable decorated with <code>LocalInvocationIndex</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "NumSubgroups": {
      "core": [
        {
          "vuid": "VUID-NumSubgroups-NumSubgroups-04293",
          "text": "The <code>NumSubgroups</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>GLCompute</code>, <code>MeshEXT</code>, <code>TaskEXT</code>, <code>MeshNV</code>, or <code>TaskNV</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-NumSubgroups-NumSubgroups-04294",
          "text": "The variable decorated with <code>NumSubgroups</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-NumSubgroups-NumSubgroups-04295",
          "text": "The variable decorated with <code>NumSubgroups</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "NumWorkgroups": {
      "core": [
        {
          "vuid": "VUID-NumWorkgroups-NumWorkgroups-04296",
          "text": "The <code>NumWorkgroups</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>GLCompute</code>, <code>MeshEXT</code>, or <code>TaskEXT</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-NumWorkgroups-NumWorkgroups-04297",
          "text": "The variable decorated with <code>NumWorkgroups</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-NumWorkgroups-NumWorkgroups-04298",
          "text": "The variable decorated with <code>NumWorkgroups</code> <strong class=\"purple\">must</strong> be declared as a three-component vector of 32-bit integer values",
          "page": "vkspec"
        }
      ]
    },
    "PatchVertices": {
      "core": [
        {
          "vuid": "VUID-PatchVertices-PatchVertices-04308",
          "text": "The <code>PatchVertices</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>TessellationControl</code> or <code>TessellationEvaluation</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PatchVertices-PatchVertices-04309",
          "text": "The variable decorated with <code>PatchVertices</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PatchVertices-PatchVertices-04310",
          "text": "The variable decorated with <code>PatchVertices</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "PointCoord": {
      "core": [
        {
          "vuid": "VUID-PointCoord-PointCoord-04311",
          "text": "The <code>PointCoord</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PointCoord-PointCoord-04312",
          "text": "The variable decorated with <code>PointCoord</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PointCoord-PointCoord-04313",
          "text": "The variable decorated with <code>PointCoord</code> <strong class=\"purple\">must</strong> be declared as a two-component vector of 32-bit floating-point values",
          "page": "vkspec"
        }
      ]
    },
    "PointSize": {
      "core": [
        {
          "vuid": "VUID-PointSize-PointSize-04314",
          "text": "The <code>PointSize</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>MeshEXT</code>, <code>MeshNV</code>, <code>Vertex</code>, <code>TessellationControl</code>, <code>TessellationEvaluation</code>, or <code>Geometry</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PointSize-PointSize-04315",
          "text": "The variable decorated with <code>PointSize</code> within the <code>MeshEXT</code>, <code>MeshNV</code>, or <code>Vertex</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PointSize-PointSize-04316",
          "text": "The variable decorated with <code>PointSize</code> within the <code>TessellationControl</code>, <code>TessellationEvaluation</code>, or <code>Geometry</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> not be declared using a <code>Storage</code> <code>Class</code> other than <code>Input</code> or <code>Output</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PointSize-PointSize-04317",
          "text": "The variable decorated with <code>PointSize</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit floating-point value",
          "page": "vkspec"
        }
      ]
    },
    "Position": {
      "core": [
        {
          "vuid": "VUID-Position-Position-04318",
          "text": "The <code>Position</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>MeshEXT</code>, <code>MeshNV</code>, <code>Vertex</code>, <code>TessellationControl</code>, <code>TessellationEvaluation</code>, or <code>Geometry</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-Position-Position-04319",
          "text": "The variable decorated with <code>Position</code> within the <code>MeshEXT</code>, <code>MeshNV</code>, or <code>Vertex</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-Position-Position-04320",
          "text": "The variable decorated with <code>Position</code> within the <code>TessellationControl</code>, <code>TessellationEvaluation</code>, or <code>Geometry</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> not be declared using a <code>Storage</code> <code>Class</code> other than <code>Input</code> or <code>Output</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-Position-Position-04321",
          "text": "The variable decorated with <code>Position</code> <strong class=\"purple\">must</strong> be declared as a four-component vector of 32-bit floating-point values",
          "page": "vkspec"
        }
      ]
    },
    "PrimitiveId": {
      "core": [
        {
          "vuid": "VUID-PrimitiveId-PrimitiveId-04330",
          "text": "The <code>PrimitiveId</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>MeshEXT</code>, <code>MeshNV</code>, <code>IntersectionKHR</code>, <code>AnyHitKHR</code>, <code>ClosestHitKHR</code>, <code>TessellationControl</code>, <code>TessellationEvaluation</code>, <code>Geometry</code>, or <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveId-Fragment-04331",
          "text": "If pipeline contains both the <code>Fragment</code> and <code>Geometry</code> <code>Execution</code> <code>Model</code> and a variable decorated with <code>PrimitiveId</code> is read from <code>Fragment</code> shader, then the <code>Geometry</code> shader <strong class=\"purple\">must</strong> write to the output variables decorated with <code>PrimitiveId</code> in all execution paths",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveId-Fragment-04332",
          "text": "If pipeline contains both the <code>Fragment</code> and <code>MeshEXT</code> or <code>MeshNV</code> <code>Execution</code> <code>Model</code> and a variable decorated with <code>PrimitiveId</code> is read from <code>Fragment</code> shader, then the <code>MeshEXT</code> or <code>MeshNV</code> shader <strong class=\"purple\">must</strong> write to the output variables decorated with <code>PrimitiveId</code> in all execution paths",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveId-Fragment-04333",
          "text": "If <code>Fragment</code> <code>Execution</code> <code>Model</code> contains a variable decorated with <code>PrimitiveId</code>, then either the <code>MeshShadingEXT</code>, <code>MeshShadingNV</code>, <code>Geometry</code> or <code>Tessellation</code> capability <strong class=\"purple\">must</strong> also be declared",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveId-PrimitiveId-04334",
          "text": "The variable decorated with <code>PrimitiveId</code> within the <code>TessellationControl</code>, <code>TessellationEvaluation</code>, <code>Fragment</code>, <code>IntersectionKHR</code>, <code>AnyHitKHR</code>, or <code>ClosestHitKHR</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveId-PrimitiveId-04335",
          "text": "The variable decorated with <code>PrimitiveId</code> within the <code>Geometry</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> or <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveId-PrimitiveId-04336",
          "text": "The variable decorated with <code>PrimitiveId</code> within the <code>MeshEXT</code> or <code>MeshNV</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveId-PrimitiveId-04337",
          "text": "The variable decorated with <code>PrimitiveId</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveId-PrimitiveId-07040",
          "text": "The variable decorated with <code>PrimitiveId</code> within the <code>MeshEXT</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> also be decorated with the <code>PerPrimitiveEXT</code> decoration",
          "page": "vkspec"
        }
      ]
    },
    "PrimitiveShadingRateKHR": {
      "core": [
        {
          "vuid": "VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-04484",
          "text": "The <code>PrimitiveShadingRateKHR</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>MeshEXT</code>, <code>MeshNV</code>, <code>Vertex</code>, or <code>Geometry</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-04485",
          "text": "The variable decorated with <code>PrimitiveShadingRateKHR</code> <strong class=\"purple\">must</strong> be declared using the <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-04486",
          "text": "The variable decorated with <code>PrimitiveShadingRateKHR</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-04487",
          "text": "The value written to <code>PrimitiveShadingRateKHR</code> <strong class=\"purple\">must</strong> include no more than one of <code>Vertical2Pixels</code> and <code>Vertical4Pixels</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-04488",
          "text": "The value written to <code>PrimitiveShadingRateKHR</code> <strong class=\"purple\">must</strong> include no more than one of <code>Horizontal2Pixels</code> and <code>Horizontal4Pixels</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-04489",
          "text": "The value written to <code>PrimitiveShadingRateKHR</code> <strong class=\"purple\">must</strong> not have any bits set other than those defined by <strong>Fragment Shading Rate Flags</strong> enumerants in the SPIR-V specification",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-07059",
          "text": "The variable decorated with <code>PrimitiveShadingRateKHR</code> within the <code>MeshEXT</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> also be decorated with the <code>PerPrimitiveEXT</code> decoration",
          "page": "vkspec"
        }
      ]
    },
    "SampleId": {
      "core": [
        {
          "vuid": "VUID-SampleId-SampleId-04354",
          "text": "The <code>SampleId</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SampleId-SampleId-04355",
          "text": "The variable decorated with <code>SampleId</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SampleId-SampleId-04356",
          "text": "The variable decorated with <code>SampleId</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "SampleMask": {
      "core": [
        {
          "vuid": "VUID-SampleMask-SampleMask-04357",
          "text": "The <code>SampleMask</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SampleMask-SampleMask-04358",
          "text": "The variable decorated with <code>SampleMask</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> or <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SampleMask-SampleMask-04359",
          "text": "The variable decorated with <code>SampleMask</code> <strong class=\"purple\">must</strong> be declared as an array of 32-bit integer values",
          "page": "vkspec"
        }
      ]
    },
    "SamplePosition": {
      "core": [
        {
          "vuid": "VUID-SamplePosition-SamplePosition-04360",
          "text": "The <code>SamplePosition</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SamplePosition-SamplePosition-04361",
          "text": "The variable decorated with <code>SamplePosition</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SamplePosition-SamplePosition-04362",
          "text": "The variable decorated with <code>SamplePosition</code> <strong class=\"purple\">must</strong> be declared as a two-component vector of 32-bit floating-point values",
          "page": "vkspec"
        }
      ]
    },
    "ShadingRateKHR": {
      "core": [
        {
          "vuid": "VUID-ShadingRateKHR-ShadingRateKHR-04490",
          "text": "The <code>ShadingRateKHR</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ShadingRateKHR-ShadingRateKHR-04491",
          "text": "The variable decorated with <code>ShadingRateKHR</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ShadingRateKHR-ShadingRateKHR-04492",
          "text": "The variable decorated with <code>ShadingRateKHR</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "SubgroupId": {
      "core": [
        {
          "vuid": "VUID-SubgroupId-SubgroupId-04367",
          "text": "The <code>SubgroupId</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>GLCompute</code>, <code>MeshEXT</code>, <code>TaskEXT</code>, <code>MeshNV</code>, or <code>TaskNV</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SubgroupId-SubgroupId-04368",
          "text": "The variable decorated with <code>SubgroupId</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SubgroupId-SubgroupId-04369",
          "text": "The variable decorated with <code>SubgroupId</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "SubgroupEqMask": {
      "core": [
        {
          "vuid": "VUID-SubgroupEqMask-SubgroupEqMask-04370",
          "text": "The variable decorated with <code>SubgroupEqMask</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SubgroupEqMask-SubgroupEqMask-04371",
          "text": "The variable decorated with <code>SubgroupEqMask</code> <strong class=\"purple\">must</strong> be declared as a four-component vector of 32-bit integer values",
          "page": "vkspec"
        }
      ]
    },
    "SubgroupGeMask": {
      "core": [
        {
          "vuid": "VUID-SubgroupGeMask-SubgroupGeMask-04372",
          "text": "The variable decorated with <code>SubgroupGeMask</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SubgroupGeMask-SubgroupGeMask-04373",
          "text": "The variable decorated with <code>SubgroupGeMask</code> <strong class=\"purple\">must</strong> be declared as a four-component vector of 32-bit integer values",
          "page": "vkspec"
        }
      ]
    },
    "SubgroupGtMask": {
      "core": [
        {
          "vuid": "VUID-SubgroupGtMask-SubgroupGtMask-04374",
          "text": "The variable decorated with <code>SubgroupGtMask</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SubgroupGtMask-SubgroupGtMask-04375",
          "text": "The variable decorated with <code>SubgroupGtMask</code> <strong class=\"purple\">must</strong> be declared as a four-component vector of 32-bit integer values",
          "page": "vkspec"
        }
      ]
    },
    "SubgroupLeMask": {
      "core": [
        {
          "vuid": "VUID-SubgroupLeMask-SubgroupLeMask-04376",
          "text": "The variable decorated with <code>SubgroupLeMask</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SubgroupLeMask-SubgroupLeMask-04377",
          "text": "The variable decorated with <code>SubgroupLeMask</code> <strong class=\"purple\">must</strong> be declared as a four-component vector of 32-bit integer values",
          "page": "vkspec"
        }
      ]
    },
    "SubgroupLtMask": {
      "core": [
        {
          "vuid": "VUID-SubgroupLtMask-SubgroupLtMask-04378",
          "text": "The variable decorated with <code>SubgroupLtMask</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SubgroupLtMask-SubgroupLtMask-04379",
          "text": "The variable decorated with <code>SubgroupLtMask</code> <strong class=\"purple\">must</strong> be declared as a four-component vector of 32-bit integer values",
          "page": "vkspec"
        }
      ]
    },
    "SubgroupLocalInvocationId": {
      "core": [
        {
          "vuid": "VUID-SubgroupLocalInvocationId-SubgroupLocalInvocationId-04380",
          "text": "The variable decorated with <code>SubgroupLocalInvocationId</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SubgroupLocalInvocationId-SubgroupLocalInvocationId-04381",
          "text": "The variable decorated with <code>SubgroupLocalInvocationId</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "SubgroupSize": {
      "core": [
        {
          "vuid": "VUID-SubgroupSize-SubgroupSize-04382",
          "text": "The variable decorated with <code>SubgroupSize</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-SubgroupSize-SubgroupSize-04383",
          "text": "The variable decorated with <code>SubgroupSize</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "TessCoord": {
      "core": [
        {
          "vuid": "VUID-TessCoord-TessCoord-04387",
          "text": "The <code>TessCoord</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>TessellationEvaluation</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-TessCoord-TessCoord-04388",
          "text": "The variable decorated with <code>TessCoord</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-TessCoord-TessCoord-04389",
          "text": "The variable decorated with <code>TessCoord</code> <strong class=\"purple\">must</strong> be declared as a three-component vector of 32-bit floating-point values",
          "page": "vkspec"
        }
      ]
    },
    "TessLevelOuter": {
      "core": [
        {
          "vuid": "VUID-TessLevelOuter-TessLevelOuter-04390",
          "text": "The <code>TessLevelOuter</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>TessellationControl</code> or <code>TessellationEvaluation</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-TessLevelOuter-TessLevelOuter-04391",
          "text": "The variable decorated with <code>TessLevelOuter</code> within the <code>TessellationControl</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-TessLevelOuter-TessLevelOuter-04392",
          "text": "The variable decorated with <code>TessLevelOuter</code> within the <code>TessellationEvaluation</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-TessLevelOuter-TessLevelOuter-04393",
          "text": "The variable decorated with <code>TessLevelOuter</code> <strong class=\"purple\">must</strong> be declared as an array of size four, containing 32-bit floating-point values",
          "page": "vkspec"
        }
      ]
    },
    "TessLevelInner": {
      "core": [
        {
          "vuid": "VUID-TessLevelInner-TessLevelInner-04394",
          "text": "The <code>TessLevelInner</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>TessellationControl</code> or <code>TessellationEvaluation</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-TessLevelInner-TessLevelInner-04395",
          "text": "The variable decorated with <code>TessLevelInner</code> within the <code>TessellationControl</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-TessLevelInner-TessLevelInner-04396",
          "text": "The variable decorated with <code>TessLevelInner</code> within the <code>TessellationEvaluation</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-TessLevelInner-TessLevelInner-04397",
          "text": "The variable decorated with <code>TessLevelInner</code> <strong class=\"purple\">must</strong> be declared as an array of size two, containing 32-bit floating-point values",
          "page": "vkspec"
        }
      ]
    },
    "VertexIndex": {
      "core": [
        {
          "vuid": "VUID-VertexIndex-VertexIndex-04398",
          "text": "The <code>VertexIndex</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Vertex</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VertexIndex-VertexIndex-04399",
          "text": "The variable decorated with <code>VertexIndex</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VertexIndex-VertexIndex-04400",
          "text": "The variable decorated with <code>VertexIndex</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "ViewIndex": {
      "core": [
        {
          "vuid": "VUID-ViewIndex-ViewIndex-04401",
          "text": "The <code>ViewIndex</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>MeshEXT</code>, <code>Vertex</code>, <code>Geometry</code>, <code>TessellationControl</code>, <code>TessellationEvaluation</code> or <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ViewIndex-ViewIndex-04402",
          "text": "The variable decorated with <code>ViewIndex</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ViewIndex-ViewIndex-04403",
          "text": "The variable decorated with <code>ViewIndex</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        }
      ]
    },
    "ViewportIndex": {
      "core": [
        {
          "vuid": "VUID-ViewportIndex-ViewportIndex-04404",
          "text": "The <code>ViewportIndex</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>MeshEXT</code>, <code>MeshNV</code>, <code>Vertex</code>, <code>TessellationEvaluation</code>, <code>Geometry</code>, or <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ViewportIndex-ViewportIndex-04405",
          "text": "If the <a href=\"#features-shaderOutputViewportIndex\"><code>shaderOutputViewportIndex</code></a> feature is not enabled then the <code>ViewportIndex</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>Geometry</code> or <code>Fragment</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ViewportIndex-ViewportIndex-04406",
          "text": "The variable decorated with <code>ViewportIndex</code> within the <code>MeshEXT</code>, <code>MeshNV</code>, <code>Vertex</code>, <code>TessellationEvaluation</code>, or <code>Geometry</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Output</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ViewportIndex-ViewportIndex-04407",
          "text": "The variable decorated with <code>ViewportIndex</code> within the <code>Fragment</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ViewportIndex-ViewportIndex-04408",
          "text": "The variable decorated with <code>ViewportIndex</code> <strong class=\"purple\">must</strong> be declared as a scalar 32-bit integer value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-ViewportIndex-ViewportIndex-07060",
          "text": "The variable decorated with <code>ViewportIndex</code> within the <code>MeshEXT</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> also be decorated with the <code>PerPrimitiveEXT</code> decoration",
          "page": "vkspec"
        }
      ]
    },
    "WorkgroupId": {
      "core": [
        {
          "vuid": "VUID-WorkgroupId-WorkgroupId-04422",
          "text": "The <code>WorkgroupId</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>GLCompute</code>, <code>MeshEXT</code>, <code>TaskEXT</code>, <code>MeshNV</code>, or <code>TaskNV</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-WorkgroupId-WorkgroupId-04423",
          "text": "The variable decorated with <code>WorkgroupId</code> <strong class=\"purple\">must</strong> be declared using the <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-WorkgroupId-WorkgroupId-04424",
          "text": "The variable decorated with <code>WorkgroupId</code> <strong class=\"purple\">must</strong> be declared as a three-component vector of 32-bit integer values",
          "page": "vkspec"
        }
      ]
    },
    "WorkgroupSize": {
      "core": [
        {
          "vuid": "VUID-WorkgroupSize-WorkgroupSize-04425",
          "text": "The <code>WorkgroupSize</code> decoration <strong class=\"purple\">must</strong> be used only within the <code>GLCompute</code>, <code>MeshEXT</code>, <code>TaskEXT</code>, <code>MeshNV</code>, or <code>TaskNV</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-WorkgroupSize-WorkgroupSize-04426",
          "text": "The variable decorated with <code>WorkgroupSize</code> <strong class=\"purple\">must</strong> be a specialization constant or a constant",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-WorkgroupSize-WorkgroupSize-04427",
          "text": "The variable decorated with <code>WorkgroupSize</code> <strong class=\"purple\">must</strong> be declared as a three-component vector of 32-bit integer values",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateQueryPool": {
      "core": [
        {
          "vuid": "VUID-vkCreateQueryPool-device-05068",
          "text": "The number of query pools currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of query pools requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>queryPoolRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateQueryPool-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateQueryPool-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkQueryPoolCreateInfo\">VkQueryPoolCreateInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateQueryPool-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateQueryPool-pQueryPool-parameter",
          "text": "<code>pQueryPool</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkQueryPool\">VkQueryPool</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkQueryPoolCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-queryType-00791",
          "text": "If the <a href=\"#features-pipelineStatisticsQuery\"><code>pipelineStatisticsQuery</code></a> feature is not enabled, <code>queryType</code> <strong class=\"purple\">must</strong> not be <code>VK_QUERY_TYPE_PIPELINE_STATISTICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-queryType-00792",
          "text": "If <code>queryType</code> is <code>VK_QUERY_TYPE_PIPELINE_STATISTICS</code>, <code>pipelineStatistics</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkQueryPipelineStatisticFlagBits\">VkQueryPipelineStatisticFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-queryType-03222",
          "text": "If <code>queryType</code> is <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, the <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkQueryPoolPerformanceCreateInfoKHR\">VkQueryPoolPerformanceCreateInfoKHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-queryCount-02763",
          "text": "<code>queryCount</code> <strong class=\"purple\">must</strong> be greater than 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-queryType-05046",
          "text": "If <code>queryType</code> is <code>VK_QUERY_TYPE_OCCLUSION</code> then <code>queryCount</code> <strong class=\"purple\">must</strong> be less than or equal to the maximum of all <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>maxOcclusionQueriesPerPool</code> values specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-queryType-05047",
          "text": "If <code>queryType</code> is <code>VK_QUERY_TYPE_PIPELINE_STATISTICS</code> then <code>queryCount</code> <strong class=\"purple\">must</strong> be less than or equal to the maximum of all <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>maxPipelineStatisticsQueriesPerPool</code> values specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-queryType-05048",
          "text": "If <code>queryType</code> is <code>VK_QUERY_TYPE_TIMESTAMP</code> then <code>queryCount</code> <strong class=\"purple\">must</strong> be less than or equal to the maximum of all <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>maxTimestampQueriesPerPool</code> values specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-queryType-05049",
          "text": "If <code>queryType</code> is <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code> then <code>queryCount</code> <strong class=\"purple\">must</strong> be less than or equal to the maximum of all <a href=\"#VkPerformanceQueryReservationInfoKHR\">VkPerformanceQueryReservationInfoKHR</a>::<code>maxPerformanceQueriesPerPool</code> values specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkQueryPoolPerformanceCreateInfoKHR\">VkQueryPoolPerformanceCreateInfoKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolCreateInfo-queryType-parameter",
          "text": "<code>queryType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueryType\">VkQueryType</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkQueryPoolPerformanceCreateInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkQueryPoolPerformanceCreateInfoKHR-queueFamilyIndex-03236",
          "text": "<code>queueFamilyIndex</code> <strong class=\"purple\">must</strong> be a valid queue family index of the device",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolPerformanceCreateInfoKHR-performanceCounterQueryPools-03237",
          "text": "The <a href=\"#features-performanceCounterQueryPools\"><code>performanceCounterQueryPools</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolPerformanceCreateInfoKHR-pCounterIndices-03321",
          "text": "Each element of <code>pCounterIndices</code> <strong class=\"purple\">must</strong> be in the range of counters reported by <code>vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR</code> for the queue family specified in <code>queueFamilyIndex</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolPerformanceCreateInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolPerformanceCreateInfoKHR-pCounterIndices-parameter",
          "text": "<code>pCounterIndices</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>counterIndexCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkQueryPoolPerformanceCreateInfoKHR-counterIndexCount-arraylength",
          "text": "<code>counterIndexCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR-pPerformanceQueryCreateInfo-parameter",
          "text": "<code>pPerformanceQueryCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkQueryPoolPerformanceCreateInfoKHR\">VkQueryPoolPerformanceCreateInfoKHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR-pNumPasses-parameter",
          "text": "<code>pNumPasses</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdResetQueryPool": {
      "core": [
        {
          "vuid": "VUID-vkCmdResetQueryPool-firstQuery-09436",
          "text": "<code>firstQuery</code> <strong class=\"purple\">must</strong> be less than the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetQueryPool-firstQuery-09437",
          "text": "The sum of <code>firstQuery</code> and <code>queryCount</code> <strong class=\"purple\">must</strong> be less than or equal to the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetQueryPool-None-02841",
          "text": "All queries used by the command <strong class=\"purple\">must</strong> not be active",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetQueryPool-firstQuery-02862",
          "text": "If <code>queryPool</code> was created with <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, this command <strong class=\"purple\">must</strong> not be recorded in a command buffer that, either directly or through secondary command buffers, also contains begin commands for a query from the set of queries <span class=\"eq\">[<code>firstQuery</code>, <code>firstQuery</code> +  <code>queryCount</code> - 1]</span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetQueryPool-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetQueryPool-queryPool-parameter",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueryPool\">VkQueryPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetQueryPool-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetQueryPool-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetQueryPool-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResetQueryPool-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>queryPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkResetQueryPool": {
      "core": [
        {
          "vuid": "VUID-vkResetQueryPool-firstQuery-09436",
          "text": "<code>firstQuery</code> <strong class=\"purple\">must</strong> be less than the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetQueryPool-firstQuery-09437",
          "text": "The sum of <code>firstQuery</code> and <code>queryCount</code> <strong class=\"purple\">must</strong> be less than or equal to the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetQueryPool-None-02665",
          "text": "The <a href=\"#features-hostQueryReset\"><code>hostQueryReset</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetQueryPool-firstQuery-02741",
          "text": "Submitted commands that refer to the range specified by <code>firstQuery</code> and <code>queryCount</code> in <code>queryPool</code> <strong class=\"purple\">must</strong> have completed execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetQueryPool-firstQuery-02742",
          "text": "The range of queries specified by <code>firstQuery</code> and <code>queryCount</code> in <code>queryPool</code> <strong class=\"purple\">must</strong> not be in use by calls to <a href=\"#vkGetQueryPoolResults\">vkGetQueryPoolResults</a> or <code>vkResetQueryPool</code> in other threads",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetQueryPool-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetQueryPool-queryPool-parameter",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueryPool\">VkQueryPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkResetQueryPool-queryPool-parent",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdBeginQuery": {
      "core": [
        {
          "vuid": "VUID-vkCmdBeginQuery-None-00807",
          "text": "All queries used by the command <strong class=\"purple\">must</strong> be <em>unavailable</em>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-queryType-02804",
          "text": "The <code>queryType</code> used to create <code>queryPool</code> <strong class=\"purple\">must</strong> not be <code>VK_QUERY_TYPE_TIMESTAMP</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-queryType-00800",
          "text": "If the <a href=\"#features-occlusionQueryPrecise\"><code>occlusionQueryPrecise</code></a> feature is not enabled, or the <code>queryType</code> used to create <code>queryPool</code> was not <code>VK_QUERY_TYPE_OCCLUSION</code>, <code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_QUERY_CONTROL_PRECISE_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-query-00802",
          "text": "<code>query</code> <strong class=\"purple\">must</strong> be less than the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-queryType-00803",
          "text": "If the <code>queryType</code> used to create <code>queryPool</code> was <code>VK_QUERY_TYPE_OCCLUSION</code>, the <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-queryType-00804",
          "text": "If the <code>queryType</code> used to create <code>queryPool</code> was <code>VK_QUERY_TYPE_PIPELINE_STATISTICS</code> and any of the <code>pipelineStatistics</code> indicate graphics operations, the <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-queryType-00805",
          "text": "If the <code>queryType</code> used to create <code>queryPool</code> was <code>VK_QUERY_TYPE_PIPELINE_STATISTICS</code> and any of the <code>pipelineStatistics</code> indicate compute operations, the <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-commandBuffer-01885",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> not be a protected command buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-query-00808",
          "text": "If called within a render pass instance, the sum of <code>query</code> and the number of bits set in the current subpass&#8217;s view mask <strong class=\"purple\">must</strong> be less than or equal to the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-queryPool-01922",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> have been created with a <code>queryType</code> that differs from that of any queries that are <a href=\"#queries-operation-active\">active</a> within <code>commandBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-queryPool-07289",
          "text": "If <code>queryPool</code> was created with a <code>queryType</code> of <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, then the <a href=\"#VkQueryPoolPerformanceCreateInfoKHR\">VkQueryPoolPerformanceCreateInfoKHR</a>::<code>queueFamilyIndex</code> <code>queryPool</code> was created with <strong class=\"purple\">must</strong> equal the queue family index of the <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-queryPool-03223",
          "text": "If <code>queryPool</code> was created with a <code>queryType</code> of <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, the <a href=\"#profiling-lock\">profiling lock</a> <strong class=\"purple\">must</strong> have been held before <a href=\"#vkBeginCommandBuffer\">vkBeginCommandBuffer</a> was called on <code>commandBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-queryPool-03224",
          "text": "If <code>queryPool</code> was created with a <code>queryType</code> of <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code> and one of the counters used to create <code>queryPool</code> was <code>VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR</code>, the query begin <strong class=\"purple\">must</strong> be the first recorded command in <code>commandBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-queryPool-03225",
          "text": "If <code>queryPool</code> was created with a <code>queryType</code> of <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code> and one of the counters used to create <code>queryPool</code> was <code>VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR</code>, the begin command <strong class=\"purple\">must</strong> not be recorded within a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-queryPool-03226",
          "text": "If <code>queryPool</code> was created with a <code>queryType</code> of <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code> and another query pool with a <code>queryType</code> <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code> has been used within <code>commandBuffer</code>, its parent primary command buffer or secondary command buffer recorded within the same parent primary command buffer as <code>commandBuffer</code>, the <a href=\"#features-performanceCounterMultipleQueryPools\"><code>performanceCounterMultipleQueryPools</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-None-02863",
          "text": "If <code>queryPool</code> was created with a <code>queryType</code> of <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, this command <strong class=\"purple\">must</strong> not be recorded in a command buffer that, either directly or through secondary command buffers, also contains a <code>vkCmdResetQueryPool</code> command affecting the same query",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-queryPool-parameter",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueryPool\">VkQueryPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkQueryControlFlagBits\">VkQueryControlFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginQuery-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>queryPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdEndQuery": {
      "core": [
        {
          "vuid": "VUID-vkCmdEndQuery-None-01923",
          "text": "All queries used by the command <strong class=\"purple\">must</strong> be <a href=\"#queries-operation-active\">active</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndQuery-query-00810",
          "text": "<code>query</code> <strong class=\"purple\">must</strong> be less than the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndQuery-commandBuffer-01886",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> not be a protected command buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndQuery-query-00812",
          "text": "If <code>vkCmdEndQuery</code> is called within a render pass instance, the sum of <code>query</code> and the number of bits set in the current subpass&#8217;s view mask <strong class=\"purple\">must</strong> be less than or equal to the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndQuery-queryPool-03227",
          "text": "If <code>queryPool</code> was created with a <code>queryType</code> of <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code> and one or more of the counters used to create <code>queryPool</code> was <code>VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR</code>, the <a href=\"#vkCmdEndQuery\">vkCmdEndQuery</a> <strong class=\"purple\">must</strong> be the last recorded command in <code>commandBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndQuery-queryPool-03228",
          "text": "If <code>queryPool</code> was created with a <code>queryType</code> of <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code> and one or more of the counters used to create <code>queryPool</code> was <code>VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR</code>, the <a href=\"#vkCmdEndQuery\">vkCmdEndQuery</a> <strong class=\"purple\">must</strong> not be recorded within a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndQuery-None-07007",
          "text": "If called within a subpass of a render pass instance, the corresponding <code>vkCmdBeginQuery</code>* command <strong class=\"purple\">must</strong> have been called previously within the same subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndQuery-None-07008",
          "text": "If called outside of a render pass instance, the corresponding <code>vkCmdBeginQuery</code>* command <strong class=\"purple\">must</strong> have been called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndQuery-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndQuery-queryPool-parameter",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueryPool\">VkQueryPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndQuery-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndQuery-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndQuery-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>queryPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetQueryPoolResults": {
      "core": [
        {
          "vuid": "VUID-vkGetQueryPoolResults-firstQuery-09436",
          "text": "<code>firstQuery</code> <strong class=\"purple\">must</strong> be less than the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-firstQuery-09437",
          "text": "The sum of <code>firstQuery</code> and <code>queryCount</code> <strong class=\"purple\">must</strong> be less than or equal to the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-queryCount-09438",
          "text": "If <code>queryCount</code> is greater than 1, <code>stride</code> <strong class=\"purple\">must</strong> not be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-queryType-09439",
          "text": "If the <code>queryType</code> used to create <code>queryPool</code> was <code>VK_QUERY_TYPE_TIMESTAMP</code>, <code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_QUERY_RESULT_PARTIAL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-queryType-09440",
          "text": "If the <code>queryType</code> used to create <code>queryPool</code> was <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, <code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_QUERY_RESULT_WITH_AVAILABILITY_BIT</code>, <code>VK_QUERY_RESULT_PARTIAL_BIT</code>, or <code>VK_QUERY_RESULT_64_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-queryType-09441",
          "text": "If the <code>queryType</code> used to create <code>queryPool</code> was <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, the <code>queryPool</code> <strong class=\"purple\">must</strong> have been recorded once for each pass as retrieved via a call to <a href=\"#vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR\">vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-None-09401",
          "text": "All queries used by the command <strong class=\"purple\">must</strong> not be uninitialized",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-flags-02828",
          "text": "If <code>VK_QUERY_RESULT_64_BIT</code> is not set in <code>flags</code> and the <code>queryType</code> used to create <code>queryPool</code> was not <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, then <code>pData</code> and <code>stride</code> <strong class=\"purple\">must</strong> be multiples of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-flags-00815",
          "text": "If <code>VK_QUERY_RESULT_64_BIT</code> is set in <code>flags</code> then <code>pData</code> and <code>stride</code> <strong class=\"purple\">must</strong> be multiples of <code>8</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-stride-08993",
          "text": "If <code>VK_QUERY_RESULT_WITH_AVAILABILITY_BIT</code> is set, <code>stride</code> <strong class=\"purple\">must</strong> be large enough to contain the unsigned integer representing availability in addition to the query result.",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-queryType-03229",
          "text": "If the <code>queryType</code> used to create <code>queryPool</code> was <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, then <code>pData</code> and <code>stride</code> <strong class=\"purple\">must</strong> be multiples of the size of <a href=\"#VkPerformanceCounterResultKHR\">VkPerformanceCounterResultKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-queryType-04519",
          "text": "If the <code>queryType</code> used to create <code>queryPool</code> was <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, then <code>stride</code> <strong class=\"purple\">must</strong> be large enough to contain the <a href=\"#VkQueryPoolPerformanceCreateInfoKHR\">VkQueryPoolPerformanceCreateInfoKHR</a>::<code>counterIndexCount</code> used to create <code>queryPool</code> times the size of <a href=\"#VkPerformanceCounterResultKHR\">VkPerformanceCounterResultKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-dataSize-00817",
          "text": "<code>dataSize</code> <strong class=\"purple\">must</strong> be large enough to contain the result of each query, as described <a href=\"#queries-operation-memorylayout\">here</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-queryPool-parameter",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueryPool\">VkQueryPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-pData-parameter",
          "text": "<code>pData</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>dataSize</code> bytes",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkQueryResultFlagBits\">VkQueryResultFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-dataSize-arraylength",
          "text": "<code>dataSize</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetQueryPoolResults-queryPool-parent",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdCopyQueryPoolResults": {
      "core": [
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-firstQuery-09436",
          "text": "<code>firstQuery</code> <strong class=\"purple\">must</strong> be less than the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-firstQuery-09437",
          "text": "The sum of <code>firstQuery</code> and <code>queryCount</code> <strong class=\"purple\">must</strong> be less than or equal to the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-queryCount-09438",
          "text": "If <code>queryCount</code> is greater than 1, <code>stride</code> <strong class=\"purple\">must</strong> not be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-queryType-09439",
          "text": "If the <code>queryType</code> used to create <code>queryPool</code> was <code>VK_QUERY_TYPE_TIMESTAMP</code>, <code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_QUERY_RESULT_PARTIAL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-queryType-09440",
          "text": "If the <code>queryType</code> used to create <code>queryPool</code> was <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, <code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_QUERY_RESULT_WITH_AVAILABILITY_BIT</code>, <code>VK_QUERY_RESULT_PARTIAL_BIT</code>, or <code>VK_QUERY_RESULT_64_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-queryType-09441",
          "text": "If the <code>queryType</code> used to create <code>queryPool</code> was <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, the <code>queryPool</code> <strong class=\"purple\">must</strong> have been recorded once for each pass as retrieved via a call to <a href=\"#vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR\">vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-None-09402",
          "text": "All queries used by the command <strong class=\"purple\">must</strong> not be uninitialized when the command is executed",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-dstOffset-00819",
          "text": "<code>dstOffset</code> <strong class=\"purple\">must</strong> be less than the size of <code>dstBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-flags-00822",
          "text": "If <code>VK_QUERY_RESULT_64_BIT</code> is not set in <code>flags</code> then <code>dstOffset</code> and <code>stride</code> <strong class=\"purple\">must</strong> be multiples of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-flags-00823",
          "text": "If <code>VK_QUERY_RESULT_64_BIT</code> is set in <code>flags</code> then <code>dstOffset</code> and <code>stride</code> <strong class=\"purple\">must</strong> be multiples of <code>8</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-dstBuffer-00824",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> have enough storage, from <code>dstOffset</code>, to contain the result of each query, as described <a href=\"#queries-operation-memorylayout\">here</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-dstBuffer-00825",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-dstBuffer-00826",
          "text": "If <code>dstBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-queryType-03232",
          "text": "If the <code>queryType</code> used to create <code>queryPool</code> was <code>VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR</code>, <a href=\"#VkPhysicalDevicePerformanceQueryPropertiesKHR\">VkPhysicalDevicePerformanceQueryPropertiesKHR</a>::<code>allowCommandBufferQueryCopies</code> <strong class=\"purple\">must</strong> be <code>VK_TRUE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-None-07429",
          "text": "All queries used by the command <strong class=\"purple\">must</strong> not be active",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-None-08752",
          "text": "All queries used by the command <strong class=\"purple\">must</strong> have been made <em>available</em> by prior executed commands",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-queryPool-parameter",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueryPool\">VkQueryPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-dstBuffer-parameter",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkQueryResultFlagBits\">VkQueryResultFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyQueryPoolResults-commonparent",
          "text": "Each of <code>commandBuffer</code>, <code>dstBuffer</code>, and <code>queryPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdWriteTimestamp2": {
      "core": [
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-stage-03929",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>stage</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-stage-03930",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>stage</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-stage-07317",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>stage</code> <strong class=\"purple\">must</strong> not contain <code>VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-synchronization2-03858",
          "text": "The <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-stage-03859",
          "text": "<code>stage</code> <strong class=\"purple\">must</strong> only include a single pipeline stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-stage-03860",
          "text": "<code>stage</code> <strong class=\"purple\">must</strong> only include stages valid for the queue family that was used to create the command pool that <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-queryPool-03861",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> have been created with a <code>queryType</code> of <code>VK_QUERY_TYPE_TIMESTAMP</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-timestampValidBits-03863",
          "text": "The command pool&#8217;s queue family <strong class=\"purple\">must</strong> support a non-zero <code>timestampValidBits</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-query-04903",
          "text": "<code>query</code> <strong class=\"purple\">must</strong> be less than the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-None-03864",
          "text": "All queries used by the command <strong class=\"purple\">must</strong> be <em>unavailable</em>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-query-03865",
          "text": "If <code>vkCmdWriteTimestamp2KHR</code> is called within a render pass instance, the sum of <code>query</code> and the number of bits set in the current subpass&#8217;s view mask <strong class=\"purple\">must</strong> be less than or equal to the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-stage-parameter",
          "text": "<code>stage</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkPipelineStageFlagBits2\">VkPipelineStageFlagBits2</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-queryPool-parameter",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueryPool\">VkQueryPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp2-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>queryPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdWriteTimestamp": {
      "core": [
        {
          "vuid": "VUID-vkCmdWriteTimestamp-pipelineStage-04074",
          "text": "<code>pipelineStage</code> <strong class=\"purple\">must</strong> be a <a href=\"#synchronization-pipeline-stages-supported\">valid stage</a> for the queue family that was used to create the command pool that <code>commandBuffer</code> was allocated from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-pipelineStage-04075",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>pipelineStage</code> <strong class=\"purple\">must</strong> not be <code>VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-pipelineStage-04076",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>pipelineStage</code> <strong class=\"purple\">must</strong> not be <code>VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT</code> or <code>VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-fragmentShadingRate-07315",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>pipelineStage</code> <strong class=\"purple\">must</strong> not be <code>VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-synchronization2-06489",
          "text": "If the <a href=\"#features-synchronization2\"><code>synchronization2</code></a> feature is not enabled, <code>pipelineStage</code> <strong class=\"purple\">must</strong> not be <code>VK_PIPELINE_STAGE_NONE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-queryPool-01416",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> have been created with a <code>queryType</code> of <code>VK_QUERY_TYPE_TIMESTAMP</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-timestampValidBits-00829",
          "text": "The command pool&#8217;s queue family <strong class=\"purple\">must</strong> support a non-zero <code>timestampValidBits</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-query-04904",
          "text": "<code>query</code> <strong class=\"purple\">must</strong> be less than the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-None-00830",
          "text": "All queries used by the command <strong class=\"purple\">must</strong> be <em>unavailable</em>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-query-00831",
          "text": "If <code>vkCmdWriteTimestamp</code> is called within a render pass instance, the sum of <code>query</code> and the number of bits set in the current subpass&#8217;s view mask <strong class=\"purple\">must</strong> be less than or equal to the number of queries in <code>queryPool</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-pipelineStage-parameter",
          "text": "<code>pipelineStage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPipelineStageFlagBits\">VkPipelineStageFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-queryPool-parameter",
          "text": "<code>queryPool</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueryPool\">VkQueryPool</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdWriteTimestamp-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>queryPool</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkAcquireProfilingLockKHR": {
      "core": [
        {
          "vuid": "VUID-vkAcquireProfilingLockKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireProfilingLockKHR-pInfo-parameter",
          "text": "<code>pInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkAcquireProfilingLockInfoKHR\">VkAcquireProfilingLockInfoKHR</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkAcquireProfilingLockInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkAcquireProfilingLockInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireProfilingLockInfoKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireProfilingLockInfoKHR-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkReleaseProfilingLockKHR": {
      "core": [
        {
          "vuid": "VUID-vkReleaseProfilingLockKHR-device-03235",
          "text": "The profiling lock of <code>device</code> <strong class=\"purple\">must</strong> have been held via a previous successful call to <a href=\"#vkAcquireProfilingLockKHR\">vkAcquireProfilingLockKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkReleaseProfilingLockKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdClearColorImage": {
      "core": [
        {
          "vuid": "VUID-vkCmdClearColorImage-image-01993",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>image</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-image-00002",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-image-01545",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> not use any of the <a href=\"#formats-requiring-sampler-ycbcr-conversion\">formats that require a sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-image-00003",
          "text": "If <code>image</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-imageLayout-00004",
          "text": "<code>imageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresource ranges of <code>image</code> specified in <code>pRanges</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-imageLayout-01394",
          "text": "<code>imageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-aspectMask-02498",
          "text": "The <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a>::<code>aspectMask</code> members of the elements of the <code>pRanges</code> array <strong class=\"purple\">must</strong> each only include <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-baseMipLevel-01470",
          "text": "The <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a>::<code>baseMipLevel</code> members of the elements of the <code>pRanges</code> array <strong class=\"purple\">must</strong> each be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-pRanges-01692",
          "text": "For each <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a> element of <code>pRanges</code>, if the <code>levelCount</code> member is not <code>VK_REMAINING_MIP_LEVELS</code>, then <span class=\"eq\"><code>baseMipLevel</code> +  <code>levelCount</code></span> <strong class=\"purple\">must</strong> be less than or equal to the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-baseArrayLayer-01472",
          "text": "The <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a>::<code>baseArrayLayer</code> members of the elements of the <code>pRanges</code> array <strong class=\"purple\">must</strong> each be less than the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-pRanges-01693",
          "text": "For each <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a> element of <code>pRanges</code>, if the <code>layerCount</code> member is not <code>VK_REMAINING_ARRAY_LAYERS</code>, then <span class=\"eq\"><code>baseArrayLayer</code> +  <code>layerCount</code></span> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-image-00007",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> not have a compressed or depth/stencil format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-pColor-04961",
          "text": "<code>pColor</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkClearColorValue\">VkClearColorValue</a> union",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-commandBuffer-01805",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>image</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-commandBuffer-01806",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <strong class=\"purple\">must</strong> not be an unprotected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-image-parameter",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-imageLayout-parameter",
          "text": "<code>imageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-pRanges-parameter",
          "text": "<code>pRanges</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>rangeCount</code> valid <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-rangeCount-arraylength",
          "text": "<code>rangeCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearColorImage-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>image</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdClearDepthStencilImage": {
      "core": [
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-image-01994",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>image</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-pRanges-02658",
          "text": "If the <code>aspect</code> member of any element of <code>pRanges</code> includes <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>, and <code>image</code> was created with <a href=\"#VkImageStencilUsageCreateInfo\">separate stencil usage</a>, <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> <strong class=\"purple\">must</strong> have been included in the <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a>::<code>stencilUsage</code> used to create <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-pRanges-02659",
          "text": "If the <code>aspect</code> member of any element of <code>pRanges</code> includes <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>, and <code>image</code> was not created with <a href=\"#VkImageStencilUsageCreateInfo\">separate stencil usage</a>, <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> <strong class=\"purple\">must</strong> have been included in the <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>usage</code> used to create <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-pRanges-02660",
          "text": "If the <code>aspect</code> member of any element of <code>pRanges</code> includes <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>, <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> <strong class=\"purple\">must</strong> have been included in the <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>usage</code> used to create <code>image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-image-00010",
          "text": "If <code>image</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-imageLayout-00011",
          "text": "<code>imageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresource ranges of <code>image</code> specified in <code>pRanges</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-imageLayout-00012",
          "text": "<code>imageLayout</code> <strong class=\"purple\">must</strong> be either of <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-aspectMask-02824",
          "text": "The <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a>::<code>aspectMask</code> member of each element of the <code>pRanges</code> array <strong class=\"purple\">must</strong> not include bits other than <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> or <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-image-02825",
          "text": "If the <code>image</code>&#8217;s format does not have a stencil component, then the <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a>::<code>aspectMask</code> member of each element of the <code>pRanges</code> array <strong class=\"purple\">must</strong> not include the <code>VK_IMAGE_ASPECT_STENCIL_BIT</code> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-image-02826",
          "text": "If the <code>image</code>&#8217;s format does not have a depth component, then the <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a>::<code>aspectMask</code> member of each element of the <code>pRanges</code> array <strong class=\"purple\">must</strong> not include the <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-baseMipLevel-01474",
          "text": "The <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a>::<code>baseMipLevel</code> members of the elements of the <code>pRanges</code> array <strong class=\"purple\">must</strong> each be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-pRanges-01694",
          "text": "For each <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a> element of <code>pRanges</code>, if the <code>levelCount</code> member is not <code>VK_REMAINING_MIP_LEVELS</code>, then <span class=\"eq\"><code>baseMipLevel</code> +  <code>levelCount</code></span> <strong class=\"purple\">must</strong> be less than or equal to the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-baseArrayLayer-01476",
          "text": "The <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a>::<code>baseArrayLayer</code> members of the elements of the <code>pRanges</code> array <strong class=\"purple\">must</strong> each be less than the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-pRanges-01695",
          "text": "For each <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a> element of <code>pRanges</code>, if the <code>layerCount</code> member is not <code>VK_REMAINING_ARRAY_LAYERS</code>, then <span class=\"eq\"><code>baseArrayLayer</code> +  <code>layerCount</code></span> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>image</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-image-00014",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> have a depth/stencil format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-commandBuffer-01807",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>image</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-commandBuffer-01808",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>image</code> <strong class=\"purple\">must</strong> not be an unprotected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-image-parameter",
          "text": "<code>image</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-imageLayout-parameter",
          "text": "<code>imageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-pDepthStencil-parameter",
          "text": "<code>pDepthStencil</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkClearDepthStencilValue\">VkClearDepthStencilValue</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-pRanges-parameter",
          "text": "<code>pRanges</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>rangeCount</code> valid <a href=\"#VkImageSubresourceRange\">VkImageSubresourceRange</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-rangeCount-arraylength",
          "text": "<code>rangeCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearDepthStencilImage-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>image</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdClearAttachments": {
      "core": [
        {
          "vuid": "VUID-vkCmdClearAttachments-aspectMask-07884",
          "text": "If the <code>aspectMask</code> member of any element of <code>pAttachments</code> contains <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>, the current subpass instance&#8217;s depth-stencil attachment <strong class=\"purple\">must</strong> be either <code>VK_ATTACHMENT_UNUSED</code> or the attachment <code>format</code> <strong class=\"purple\">must</strong> contain a depth component",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-aspectMask-07885",
          "text": "If the <code>aspectMask</code> member of any element of <code>pAttachments</code> contains <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>, the current subpass instance&#8217;s depth-stencil attachment <strong class=\"purple\">must</strong> be either <code>VK_ATTACHMENT_UNUSED</code> or the attachment <code>format</code> <strong class=\"purple\">must</strong> contain a stencil component",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-aspectMask-07271",
          "text": "If the <code>aspectMask</code> member of any element of <code>pAttachments</code> contains <code>VK_IMAGE_ASPECT_COLOR_BIT</code>, the <code>colorAttachment</code> <strong class=\"purple\">must</strong> be a valid color attachment index in the current render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-rect-02682",
          "text": "The <code>rect</code> member of each element of <code>pRects</code> <strong class=\"purple\">must</strong> have an <code>extent.width</code> greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-rect-02683",
          "text": "The <code>rect</code> member of each element of <code>pRects</code> <strong class=\"purple\">must</strong> have an <code>extent.height</code> greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-pRects-00016",
          "text": "The rectangular region specified by each element of <code>pRects</code> <strong class=\"purple\">must</strong> be contained within the render area of the current render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-pRects-06937",
          "text": "The layers specified by each element of <code>pRects</code> <strong class=\"purple\">must</strong> be contained within every attachment that <code>pAttachments</code> refers to, i.e. for each element of <code>pRects</code>, <a href=\"#VkClearRect\">VkClearRect</a>::<code>baseArrayLayer</code> +  <a href=\"#VkClearRect\">VkClearRect</a>::<code>layerCount</code> <strong class=\"purple\">must</strong> be less than or equal to the number of layers rendered to in the current render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-layerCount-01934",
          "text": "The <code>layerCount</code> member of each element of <code>pRects</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-commandBuffer-02504",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, each attachment to be cleared <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-commandBuffer-02505",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, each attachment to be cleared <strong class=\"purple\">must</strong> not be an unprotected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-baseArrayLayer-00018",
          "text": "If the render pass instance this is recorded in uses multiview, then <code>baseArrayLayer</code> <strong class=\"purple\">must</strong> be zero and <code>layerCount</code> <strong class=\"purple\">must</strong> be one",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-pAttachments-parameter",
          "text": "<code>pAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>attachmentCount</code> valid <a href=\"#VkClearAttachment\">VkClearAttachment</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-pRects-parameter",
          "text": "<code>pRects</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>rectCount</code> <a href=\"#VkClearRect\">VkClearRect</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called inside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-attachmentCount-arraylength",
          "text": "<code>attachmentCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdClearAttachments-rectCount-arraylength",
          "text": "<code>rectCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkClearAttachment": {
      "core": [
        {
          "vuid": "VUID-VkClearAttachment-aspectMask-00019",
          "text": "If <code>aspectMask</code> includes <code>VK_IMAGE_ASPECT_COLOR_BIT</code>, it <strong class=\"purple\">must</strong> not include <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> or <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkClearAttachment-aspectMask-00020",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> not include <code>VK_IMAGE_ASPECT_METADATA_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkClearAttachment-aspectMask-02246",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> not include <code>VK_IMAGE_ASPECT_MEMORY_PLANE<em>_i_</em>BIT_EXT</code> for any index <em>i</em>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkClearAttachment-aspectMask-parameter",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageAspectFlagBits\">VkImageAspectFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkClearAttachment-aspectMask-requiredbitmask",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkClearDepthStencilValue": {
      "core": [
        {
          "vuid": "VUID-VkClearDepthStencilValue-depth-00022",
          "text": "Unless the <code><a href=\"#VK_EXT_depth_range_unrestricted\">VK_EXT_depth_range_unrestricted</a></code> extension is enabled <code>depth</code> <strong class=\"purple\">must</strong> be between <code>0.0</code> and <code>1.0</code>, inclusive",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdFillBuffer": {
      "core": [
        {
          "vuid": "VUID-vkCmdFillBuffer-dstOffset-00024",
          "text": "<code>dstOffset</code> <strong class=\"purple\">must</strong> be less than the size of <code>dstBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-dstOffset-00025",
          "text": "<code>dstOffset</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-size-00026",
          "text": "If <code>size</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>size</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-size-00027",
          "text": "If <code>size</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>size</code> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>dstBuffer</code> minus <code>dstOffset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-size-00028",
          "text": "If <code>size</code> is not equal to <code>VK_WHOLE_SIZE</code>, <code>size</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-dstBuffer-00029",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-apiVersion-07894",
          "text": "<a href=\"#VkCommandPool\">VkCommandPool</a> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-dstBuffer-00031",
          "text": "If <code>dstBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <a href=\"#VkDeviceMemory\">VkDeviceMemory</a> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-commandBuffer-01811",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstBuffer</code> <strong class=\"purple\">must</strong> not be a protected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-commandBuffer-01812",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstBuffer</code> <strong class=\"purple\">must</strong> not be an unprotected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-dstBuffer-parameter",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdFillBuffer-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>dstBuffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdUpdateBuffer": {
      "core": [
        {
          "vuid": "VUID-vkCmdUpdateBuffer-dstOffset-00032",
          "text": "<code>dstOffset</code> <strong class=\"purple\">must</strong> be less than the size of <code>dstBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-dataSize-00033",
          "text": "<code>dataSize</code> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>dstBuffer</code> minus <code>dstOffset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-dstBuffer-00034",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-dstBuffer-00035",
          "text": "If <code>dstBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-dstOffset-00036",
          "text": "<code>dstOffset</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-dataSize-00037",
          "text": "<code>dataSize</code> <strong class=\"purple\">must</strong> be less than or equal to <code>65536</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-dataSize-00038",
          "text": "<code>dataSize</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-commandBuffer-01813",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstBuffer</code> <strong class=\"purple\">must</strong> not be a protected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-commandBuffer-01814",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstBuffer</code> <strong class=\"purple\">must</strong> not be an unprotected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-dstBuffer-parameter",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-pData-parameter",
          "text": "<code>pData</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>dataSize</code> bytes",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-dataSize-arraylength",
          "text": "<code>dataSize</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdUpdateBuffer-commonparent",
          "text": "Both of <code>commandBuffer</code>, and <code>dstBuffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdCopyBuffer": {
      "core": [
        {
          "vuid": "VUID-vkCmdCopyBuffer-commandBuffer-01822",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>srcBuffer</code> <strong class=\"purple\">must</strong> not be a protected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-commandBuffer-01823",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstBuffer</code> <strong class=\"purple\">must</strong> not be a protected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-commandBuffer-01824",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstBuffer</code> <strong class=\"purple\">must</strong> not be an unprotected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-srcOffset-00113",
          "text": "The <code>srcOffset</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the size of <code>srcBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-dstOffset-00114",
          "text": "The <code>dstOffset</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the size of <code>dstBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-size-00115",
          "text": "The <code>size</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>srcBuffer</code> minus <code>srcOffset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-size-00116",
          "text": "The <code>size</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>dstBuffer</code> minus <code>dstOffset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-pRegions-00117",
          "text": "The union of the source regions, and the union of the destination regions, specified by the elements of <code>pRegions</code>, <strong class=\"purple\">must</strong> not overlap in memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-srcBuffer-00118",
          "text": "<code>srcBuffer</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_TRANSFER_SRC_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-srcBuffer-00119",
          "text": "If <code>srcBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-dstBuffer-00120",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-dstBuffer-00121",
          "text": "If <code>dstBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-srcBuffer-parameter",
          "text": "<code>srcBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-dstBuffer-parameter",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-pRegions-parameter",
          "text": "<code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>regionCount</code> valid <a href=\"#VkBufferCopy\">VkBufferCopy</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-regionCount-arraylength",
          "text": "<code>regionCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer-commonparent",
          "text": "Each of <code>commandBuffer</code>, <code>dstBuffer</code>, and <code>srcBuffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkBufferCopy": {
      "core": [
        {
          "vuid": "VUID-VkBufferCopy-size-01988",
          "text": "The <code>size</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdCopyBuffer2": {
      "core": [
        {
          "vuid": "VUID-vkCmdCopyBuffer2-commandBuffer-01822",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>srcBuffer</code> <strong class=\"purple\">must</strong> not be a protected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer2-commandBuffer-01823",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstBuffer</code> <strong class=\"purple\">must</strong> not be a protected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer2-commandBuffer-01824",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstBuffer</code> <strong class=\"purple\">must</strong> not be an unprotected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer2-pCopyBufferInfo-parameter",
          "text": "<code>pCopyBufferInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkCopyBufferInfo2\">VkCopyBufferInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBuffer2-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        }
      ]
    },
    "VkCopyBufferInfo2": {
      "core": [
        {
          "vuid": "VUID-VkCopyBufferInfo2-srcOffset-00113",
          "text": "The <code>srcOffset</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the size of <code>srcBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-dstOffset-00114",
          "text": "The <code>dstOffset</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the size of <code>dstBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-size-00115",
          "text": "The <code>size</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>srcBuffer</code> minus <code>srcOffset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-size-00116",
          "text": "The <code>size</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>dstBuffer</code> minus <code>dstOffset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-pRegions-00117",
          "text": "The union of the source regions, and the union of the destination regions, specified by the elements of <code>pRegions</code>, <strong class=\"purple\">must</strong> not overlap in memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-srcBuffer-00118",
          "text": "<code>srcBuffer</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_TRANSFER_SRC_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-srcBuffer-00119",
          "text": "If <code>srcBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-dstBuffer-00120",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-dstBuffer-00121",
          "text": "If <code>dstBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-srcBuffer-parameter",
          "text": "<code>srcBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-dstBuffer-parameter",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-pRegions-parameter",
          "text": "<code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>regionCount</code> valid <a href=\"#VkBufferCopy2\">VkBufferCopy2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-regionCount-arraylength",
          "text": "<code>regionCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferInfo2-commonparent",
          "text": "Both of <code>dstBuffer</code>, and <code>srcBuffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkBufferCopy2": {
      "core": [
        {
          "vuid": "VUID-VkBufferCopy2-size-01988",
          "text": "The <code>size</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCopy2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BUFFER_COPY_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferCopy2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdCopyImage": {
      "core": [
        {
          "vuid": "VUID-vkCmdCopyImage-commandBuffer-01825",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>srcImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-commandBuffer-01826",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-commandBuffer-01827",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be an unprotected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-pRegions-00124",
          "text": "The union of all source regions, and the union of all destination regions, specified by the elements of <code>pRegions</code>, <strong class=\"purple\">must</strong> not overlap in memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-01995",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>srcImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_SRC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImageLayout-00128",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>srcImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImageLayout-01917",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-01996",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>dstImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImageLayout-00133",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>dstImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImageLayout-01395",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-01548",
          "text": "If the <a href=\"#VkFormat\">VkFormat</a> of each of <code>srcImage</code> and <code>dstImage</code> is not a <a href=\"#formats-requiring-sampler-ycbcr-conversion\"><em>multi-planar format</em></a>, the <a href=\"#VkFormat\">VkFormat</a> of each of <code>srcImage</code> and <code>dstImage</code> <strong class=\"purple\">must</strong> be <a href=\"#formats-size-compatibility\">size-compatible</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-None-01549",
          "text": "In a copy to or from a plane of a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image</a>, the <a href=\"#VkFormat\">VkFormat</a> of the image and plane <strong class=\"purple\">must</strong> be compatible according to <a href=\"#formats-compatible-planes\">the description of compatible planes</a> for the plane being copied",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-09247",
          "text": "If the <a href=\"#VkFormat\">VkFormat</a> of each of <code>srcImage</code> and <code>dstImage</code> is a <a href=\"#compressed_image_formats\">compressed image format</a>, the formats <strong class=\"purple\">must</strong> have the same texel block extent",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-00136",
          "text": "The sample count of <code>srcImage</code> and <code>dstImage</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcOffset-01783",
          "text": "The <code>srcOffset</code> and <code>extent</code> members of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> respect the image transfer granularity requirements of <code>commandBuffer</code>&#8217;s command pool&#8217;s queue family, as described in <a href=\"#VkQueueFamilyProperties\">VkQueueFamilyProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstOffset-01784",
          "text": "The <code>dstOffset</code> and <code>extent</code> members of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> respect the image transfer granularity requirements of <code>commandBuffer</code>&#8217;s command pool&#8217;s queue family, as described in <a href=\"#VkQueueFamilyProperties\">VkQueueFamilyProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-01551",
          "text": "If neither <code>srcImage</code> nor <code>dstImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a> then for each element of <code>pRegions</code>, <code>srcSubresource.aspectMask</code> and <code>dstSubresource.aspectMask</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-08713",
          "text": "If <code>srcImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a>, then for each element of <code>pRegions</code>, <code>srcSubresource.aspectMask</code> <strong class=\"purple\">must</strong> be a single valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-08714",
          "text": "If <code>dstImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a>, then for each element of <code>pRegions</code>, <code>dstSubresource.aspectMask</code> <strong class=\"purple\">must</strong> be a single valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-01556",
          "text": "If <code>srcImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a> and the <code>dstImage</code> does not have a multi-planar image format, then for each element of <code>pRegions</code>, <code>dstSubresource.aspectMask</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-01557",
          "text": "If <code>dstImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a> and the <code>srcImage</code> does not have a multi-planar image format, then for each element of <code>pRegions</code>, <code>srcSubresource.aspectMask</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-04443",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>srcSubresource.baseArrayLayer</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>srcSubresource.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-04444",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>dstSubresource.baseArrayLayer</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>dstSubresource.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-aspectMask-00142",
          "text": "For each element of <code>pRegions</code>, <code>srcSubresource.aspectMask</code> <strong class=\"purple\">must</strong> specify aspects present in <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-aspectMask-00143",
          "text": "For each element of <code>pRegions</code>, <code>dstSubresource.aspectMask</code> <strong class=\"purple\">must</strong> specify aspects present in <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcOffset-00144",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.x</code> and <span class=\"eq\">(<code>extent.width</code> +  <code>srcOffset.x</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcOffset-00145",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.y</code> and <span class=\"eq\">(<code>extent.height</code> +  <code>srcOffset.y</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-00146",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>srcOffset.y</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcOffset-00147",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>srcOffset.z</code> and <span class=\"eq\">(<code>extent.depth</code> +  <code>srcOffset.z</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-01785",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>srcOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-01786",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>dstOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-01787",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>srcOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-01788",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>dstOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-07743",
          "text": "If <code>srcImage</code> and <code>dstImage</code> have a different <a href=\"#VkImageType\">VkImageType</a>, one <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TYPE_3D</code> and the other <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TYPE_2D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-08793",
          "text": "If <code>srcImage</code> and <code>dstImage</code> have the same <a href=\"#VkImageType\">VkImageType</a>, for each element of <code>pRegions</code>, the <code>layerCount</code> members of <code>srcSubresource</code> or <code>dstSubresource</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-01790",
          "text": "If <code>srcImage</code> and <code>dstImage</code> are both of type <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-01791",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_2D</code>, and <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> equal <code>srcSubresource.layerCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-01792",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_2D</code>, and <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> equal <code>dstSubresource.layerCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstOffset-00150",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.x</code> and <span class=\"eq\">(<code>extent.width</code> +  <code>dstOffset.x</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstOffset-00151",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.y</code> and <span class=\"eq\">(<code>extent.height</code> +  <code>dstOffset.y</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-00152",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>dstOffset.y</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstOffset-00153",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>dstOffset.z</code> and <span class=\"eq\">(<code>extent.depth</code> +  <code>dstOffset.z</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-pRegions-07278",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.x</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-pRegions-07279",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.y</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-pRegions-07280",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.z</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-pRegions-07281",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.x</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-pRegions-07282",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.y</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-pRegions-07283",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.z</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-01728",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>srcOffset.x</code> and <code>extent.width</code> does not equal the width of the subresource specified by <code>srcSubresource</code>, <code>extent.width</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-01729",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>srcOffset.y</code> and <code>extent.height</code> does not equal the height of the subresource specified by <code>srcSubresource</code>, <code>extent.height</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-01730",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>srcOffset.z</code> and <code>extent.depth</code> does not equal the depth of the subresource specified by <code>srcSubresource</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-01732",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>dstOffset.x</code> and <code>extent.width</code> does not equal the width of the subresource specified by <code>dstSubresource</code>, <code>extent.width</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-01733",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>dstOffset.y</code> and <code>extent.height</code> does not equal the height of the subresource specified by <code>dstSubresource</code>, <code>extent.height</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-01734",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>dstOffset.z</code> and <code>extent.depth</code> does not equal the depth of the subresource specified by <code>dstSubresource</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-aspect-06662",
          "text": "If the <code>aspect</code> member of any element of <code>pRegions</code> includes any flag other than <code>VK_IMAGE_ASPECT_STENCIL_BIT</code> or <code>srcImage</code> was not created with <a href=\"#VkImageStencilUsageCreateInfo\">separate stencil usage</a>, <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code> <strong class=\"purple\">must</strong> have been included in the <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>usage</code> used to create <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-aspect-06663",
          "text": "If the <code>aspect</code> member of any element of <code>pRegions</code> includes any flag other than <code>VK_IMAGE_ASPECT_STENCIL_BIT</code> or <code>dstImage</code> was not created with <a href=\"#VkImageStencilUsageCreateInfo\">separate stencil usage</a>, <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> <strong class=\"purple\">must</strong> have been included in the <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>usage</code> used to create <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-aspect-06664",
          "text": "If the <code>aspect</code> member of any element of <code>pRegions</code> includes <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>, and <code>srcImage</code> was created with <a href=\"#VkImageStencilUsageCreateInfo\">separate stencil usage</a>, <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code> <strong class=\"purple\">must</strong> have been included in the <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a>::<code>stencilUsage</code> used to create <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-aspect-06665",
          "text": "If the <code>aspect</code> member of any element of <code>pRegions</code> includes <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>, and <code>dstImage</code> was created with <a href=\"#VkImageStencilUsageCreateInfo\">separate stencil usage</a>, <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> <strong class=\"purple\">must</strong> have been included in the <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a>::<code>stencilUsage</code> used to create <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-07966",
          "text": "If <code>srcImage</code> is non-sparse then the image or the specified <em>disjoint</em> plane <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcSubresource-07967",
          "text": "The <code>srcSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcSubresource-07968",
          "text": "<span class=\"eq\"><code>srcSubresource.baseArrayLayer</code> +  <code>srcSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-07966",
          "text": "If <code>dstImage</code> is non-sparse then the image or the specified <em>disjoint</em> plane <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstSubresource-07967",
          "text": "The <code>dstSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstSubresource-07968",
          "text": "<span class=\"eq\"><code>dstSubresource.baseArrayLayer</code> +  <code>dstSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImage-parameter",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-srcImageLayout-parameter",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImage-parameter",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-dstImageLayout-parameter",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-pRegions-parameter",
          "text": "<code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>regionCount</code> valid <a href=\"#VkImageCopy\">VkImageCopy</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-regionCount-arraylength",
          "text": "<code>regionCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage-commonparent",
          "text": "Each of <code>commandBuffer</code>, <code>dstImage</code>, and <code>srcImage</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkImageCopy": {
      "core": [
        {
          "vuid": "VUID-VkImageCopy-extent-06668",
          "text": "<code>extent.width</code> <strong class=\"purple\">must</strong> not be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCopy-extent-06669",
          "text": "<code>extent.height</code> <strong class=\"purple\">must</strong> not be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCopy-extent-06670",
          "text": "<code>extent.depth</code> <strong class=\"purple\">must</strong> not be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCopy-srcSubresource-parameter",
          "text": "<code>srcSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCopy-dstSubresource-parameter",
          "text": "<code>dstSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkImageSubresourceLayers": {
      "core": [
        {
          "vuid": "VUID-VkImageSubresourceLayers-aspectMask-00167",
          "text": "If <code>aspectMask</code> contains <code>VK_IMAGE_ASPECT_COLOR_BIT</code>, it <strong class=\"purple\">must</strong> not contain either of <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> or <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSubresourceLayers-aspectMask-00168",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> not contain <code>VK_IMAGE_ASPECT_METADATA_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSubresourceLayers-aspectMask-02247",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> not include <code>VK_IMAGE_ASPECT_MEMORY_PLANE<em>_i_</em>BIT_EXT</code> for any index <em>i</em>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSubresourceLayers-layerCount-09243",
          "text": "<code>layerCount</code> <strong class=\"purple\">must</strong> not be <code>VK_REMAINING_ARRAY_LAYERS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSubresourceLayers-layerCount-01700",
          "text": "If <code>layerCount</code> is not <code>VK_REMAINING_ARRAY_LAYERS</code>, it <strong class=\"purple\">must</strong> be greater than 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSubresourceLayers-aspectMask-parameter",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageAspectFlagBits\">VkImageAspectFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageSubresourceLayers-aspectMask-requiredbitmask",
          "text": "<code>aspectMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdCopyImage2": {
      "core": [
        {
          "vuid": "VUID-vkCmdCopyImage2-commandBuffer-01825",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>srcImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage2-commandBuffer-01826",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage2-commandBuffer-01827",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be an unprotected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage2-pCopyImageInfo-parameter",
          "text": "<code>pCopyImageInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkCopyImageInfo2\">VkCopyImageInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImage2-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        }
      ]
    },
    "VkCopyImageInfo2": {
      "core": [
        {
          "vuid": "VUID-VkCopyImageInfo2-pRegions-00124",
          "text": "The union of all source regions, and the union of all destination regions, specified by the elements of <code>pRegions</code>, <strong class=\"purple\">must</strong> not overlap in memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-01995",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>srcImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_SRC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImageLayout-00128",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>srcImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImageLayout-01917",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-01996",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>dstImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImageLayout-00133",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>dstImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImageLayout-01395",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-01548",
          "text": "If the <a href=\"#VkFormat\">VkFormat</a> of each of <code>srcImage</code> and <code>dstImage</code> is not a <a href=\"#formats-requiring-sampler-ycbcr-conversion\"><em>multi-planar format</em></a>, the <a href=\"#VkFormat\">VkFormat</a> of each of <code>srcImage</code> and <code>dstImage</code> <strong class=\"purple\">must</strong> be <a href=\"#formats-size-compatibility\">size-compatible</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-None-01549",
          "text": "In a copy to or from a plane of a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image</a>, the <a href=\"#VkFormat\">VkFormat</a> of the image and plane <strong class=\"purple\">must</strong> be compatible according to <a href=\"#formats-compatible-planes\">the description of compatible planes</a> for the plane being copied",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-09247",
          "text": "If the <a href=\"#VkFormat\">VkFormat</a> of each of <code>srcImage</code> and <code>dstImage</code> is a <a href=\"#compressed_image_formats\">compressed image format</a>, the formats <strong class=\"purple\">must</strong> have the same texel block extent",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-00136",
          "text": "The sample count of <code>srcImage</code> and <code>dstImage</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcOffset-01783",
          "text": "The <code>srcOffset</code> and <code>extent</code> members of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> respect the image transfer granularity requirements of <code>commandBuffer</code>&#8217;s command pool&#8217;s queue family, as described in <a href=\"#VkQueueFamilyProperties\">VkQueueFamilyProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstOffset-01784",
          "text": "The <code>dstOffset</code> and <code>extent</code> members of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> respect the image transfer granularity requirements of <code>commandBuffer</code>&#8217;s command pool&#8217;s queue family, as described in <a href=\"#VkQueueFamilyProperties\">VkQueueFamilyProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-01551",
          "text": "If neither <code>srcImage</code> nor <code>dstImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a> then for each element of <code>pRegions</code>, <code>srcSubresource.aspectMask</code> and <code>dstSubresource.aspectMask</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-08713",
          "text": "If <code>srcImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a>, then for each element of <code>pRegions</code>, <code>srcSubresource.aspectMask</code> <strong class=\"purple\">must</strong> be a single valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-08714",
          "text": "If <code>dstImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a>, then for each element of <code>pRegions</code>, <code>dstSubresource.aspectMask</code> <strong class=\"purple\">must</strong> be a single valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-01556",
          "text": "If <code>srcImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a> and the <code>dstImage</code> does not have a multi-planar image format, then for each element of <code>pRegions</code>, <code>dstSubresource.aspectMask</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-01557",
          "text": "If <code>dstImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a> and the <code>srcImage</code> does not have a multi-planar image format, then for each element of <code>pRegions</code>, <code>srcSubresource.aspectMask</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-04443",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>srcSubresource.baseArrayLayer</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>srcSubresource.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-04444",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>dstSubresource.baseArrayLayer</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>dstSubresource.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-aspectMask-00142",
          "text": "For each element of <code>pRegions</code>, <code>srcSubresource.aspectMask</code> <strong class=\"purple\">must</strong> specify aspects present in <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-aspectMask-00143",
          "text": "For each element of <code>pRegions</code>, <code>dstSubresource.aspectMask</code> <strong class=\"purple\">must</strong> specify aspects present in <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcOffset-00144",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.x</code> and <span class=\"eq\">(<code>extent.width</code> +  <code>srcOffset.x</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcOffset-00145",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.y</code> and <span class=\"eq\">(<code>extent.height</code> +  <code>srcOffset.y</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-00146",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>srcOffset.y</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcOffset-00147",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>srcOffset.z</code> and <span class=\"eq\">(<code>extent.depth</code> +  <code>srcOffset.z</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-01785",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>srcOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-01786",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>dstOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-01787",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>srcOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-01788",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>dstOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-07743",
          "text": "If <code>srcImage</code> and <code>dstImage</code> have a different <a href=\"#VkImageType\">VkImageType</a>, one <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TYPE_3D</code> and the other <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TYPE_2D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-08793",
          "text": "If <code>srcImage</code> and <code>dstImage</code> have the same <a href=\"#VkImageType\">VkImageType</a>, for each element of <code>pRegions</code>, the <code>layerCount</code> members of <code>srcSubresource</code> or <code>dstSubresource</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-01790",
          "text": "If <code>srcImage</code> and <code>dstImage</code> are both of type <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-01791",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_2D</code>, and <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> equal <code>srcSubresource.layerCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-01792",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_2D</code>, and <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> equal <code>dstSubresource.layerCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstOffset-00150",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.x</code> and <span class=\"eq\">(<code>extent.width</code> +  <code>dstOffset.x</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstOffset-00151",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.y</code> and <span class=\"eq\">(<code>extent.height</code> +  <code>dstOffset.y</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-00152",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>dstOffset.y</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstOffset-00153",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>dstOffset.z</code> and <span class=\"eq\">(<code>extent.depth</code> +  <code>dstOffset.z</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-pRegions-07278",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.x</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-pRegions-07279",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.y</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-pRegions-07280",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.z</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-pRegions-07281",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.x</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-pRegions-07282",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.y</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-pRegions-07283",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.z</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-01728",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>srcOffset.x</code> and <code>extent.width</code> does not equal the width of the subresource specified by <code>srcSubresource</code>, <code>extent.width</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-01729",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>srcOffset.y</code> and <code>extent.height</code> does not equal the height of the subresource specified by <code>srcSubresource</code>, <code>extent.height</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-01730",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>srcOffset.z</code> and <code>extent.depth</code> does not equal the depth of the subresource specified by <code>srcSubresource</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-01732",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>dstOffset.x</code> and <code>extent.width</code> does not equal the width of the subresource specified by <code>dstSubresource</code>, <code>extent.width</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-01733",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>dstOffset.y</code> and <code>extent.height</code> does not equal the height of the subresource specified by <code>dstSubresource</code>, <code>extent.height</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-01734",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>dstOffset.z</code> and <code>extent.depth</code> does not equal the depth of the subresource specified by <code>dstSubresource</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-aspect-06662",
          "text": "If the <code>aspect</code> member of any element of <code>pRegions</code> includes any flag other than <code>VK_IMAGE_ASPECT_STENCIL_BIT</code> or <code>srcImage</code> was not created with <a href=\"#VkImageStencilUsageCreateInfo\">separate stencil usage</a>, <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code> <strong class=\"purple\">must</strong> have been included in the <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>usage</code> used to create <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-aspect-06663",
          "text": "If the <code>aspect</code> member of any element of <code>pRegions</code> includes any flag other than <code>VK_IMAGE_ASPECT_STENCIL_BIT</code> or <code>dstImage</code> was not created with <a href=\"#VkImageStencilUsageCreateInfo\">separate stencil usage</a>, <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> <strong class=\"purple\">must</strong> have been included in the <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>usage</code> used to create <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-aspect-06664",
          "text": "If the <code>aspect</code> member of any element of <code>pRegions</code> includes <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>, and <code>srcImage</code> was created with <a href=\"#VkImageStencilUsageCreateInfo\">separate stencil usage</a>, <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code> <strong class=\"purple\">must</strong> have been included in the <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a>::<code>stencilUsage</code> used to create <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-aspect-06665",
          "text": "If the <code>aspect</code> member of any element of <code>pRegions</code> includes <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>, and <code>dstImage</code> was created with <a href=\"#VkImageStencilUsageCreateInfo\">separate stencil usage</a>, <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> <strong class=\"purple\">must</strong> have been included in the <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a>::<code>stencilUsage</code> used to create <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-07966",
          "text": "If <code>srcImage</code> is non-sparse then the image or the specified <em>disjoint</em> plane <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcSubresource-07967",
          "text": "The <code>srcSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcSubresource-07968",
          "text": "<span class=\"eq\"><code>srcSubresource.baseArrayLayer</code> +  <code>srcSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-07966",
          "text": "If <code>dstImage</code> is non-sparse then the image or the specified <em>disjoint</em> plane <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstSubresource-07967",
          "text": "The <code>dstSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstSubresource-07968",
          "text": "<span class=\"eq\"><code>dstSubresource.baseArrayLayer</code> +  <code>dstSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImage-parameter",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-srcImageLayout-parameter",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImage-parameter",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-dstImageLayout-parameter",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-pRegions-parameter",
          "text": "<code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>regionCount</code> valid <a href=\"#VkImageCopy2\">VkImageCopy2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-regionCount-arraylength",
          "text": "<code>regionCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageInfo2-commonparent",
          "text": "Both of <code>dstImage</code>, and <code>srcImage</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkImageCopy2": {
      "core": [
        {
          "vuid": "VUID-VkImageCopy2-extent-06668",
          "text": "<code>extent.width</code> <strong class=\"purple\">must</strong> not be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCopy2-extent-06669",
          "text": "<code>extent.height</code> <strong class=\"purple\">must</strong> not be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCopy2-extent-06670",
          "text": "<code>extent.depth</code> <strong class=\"purple\">must</strong> not be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCopy2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_COPY_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCopy2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCopy2-srcSubresource-parameter",
          "text": "<code>srcSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageCopy2-dstSubresource-parameter",
          "text": "<code>dstSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdCopyBufferToImage": {
      "core": [
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-07966",
          "text": "If <code>dstImage</code> is non-sparse then the image or the specified <em>disjoint</em> plane <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-imageSubresource-07967",
          "text": "The <code>imageSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-imageSubresource-07968",
          "text": "<span class=\"eq\"><code>imageSubresource.baseArrayLayer</code> +  <code>imageSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-imageSubresource-07970",
          "text": "The image region specified by each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be contained within the specified <code>imageSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-imageSubresource-07971",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.x</code> and <span class=\"eq\">(<code>imageExtent.width</code> +  <code>imageOffset.x</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>imageSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-imageSubresource-07972",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.y</code> and <span class=\"eq\">(<code>imageExtent.height</code> +  <code>imageOffset.y</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>imageSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-07973",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> have a sample count equal to <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-commandBuffer-01828",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>srcBuffer</code> <strong class=\"purple\">must</strong> not be a protected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-commandBuffer-01829",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-commandBuffer-01830",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be an unprotected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-commandBuffer-07737",
          "text": "If the queue family used to create the <a href=\"#VkCommandPool\">VkCommandPool</a> which <code>commandBuffer</code> was allocated from does not support <code>VK_QUEUE_GRAPHICS_BIT</code> or <code>VK_QUEUE_COMPUTE_BIT</code>, the <code>bufferOffset</code> member of any element of <code>pRegions</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-imageOffset-07738",
          "text": "The <code>imageOffset</code> and <code>imageExtent</code> members of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> respect the image transfer granularity requirements of <code>commandBuffer</code>&#8217;s command pool&#8217;s queue family, as described in <a href=\"#VkQueueFamilyProperties\">VkQueueFamilyProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-commandBuffer-07739",
          "text": "If the queue family used to create the <a href=\"#VkCommandPool\">VkCommandPool</a> which <code>commandBuffer</code> was allocated from does not support <code>VK_QUEUE_GRAPHICS_BIT</code>, for each element of <code>pRegions</code>, the <code>aspectMask</code> member of <code>imageSubresource</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> or <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-pRegions-00171",
          "text": "<code>srcBuffer</code> <strong class=\"purple\">must</strong> be large enough to contain all buffer locations that are accessed according to <a href=\"#copies-buffers-images-addressing\">Buffer and Image Addressing</a>, for each element of <code>pRegions</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-pRegions-00173",
          "text": "The union of all source regions, and the union of all destination regions, specified by the elements of <code>pRegions</code>, <strong class=\"purple\">must</strong> not overlap in memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-srcBuffer-00174",
          "text": "<code>srcBuffer</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_TRANSFER_SRC_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-01997",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>dstImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-srcBuffer-00176",
          "text": "If <code>srcBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-00177",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImageLayout-00180",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>dstImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImageLayout-01396",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-pRegions-07931",
          "text": "If <a href=\"#VK_EXT_depth_range_unrestricted\">VK_EXT_depth_range_unrestricted</a> is not enabled, for each element of <code>pRegions</code> whose <code>imageSubresource</code> contains a depth aspect, the data in <code>srcBuffer</code> <strong class=\"purple\">must</strong> be in the range <span class=\"eq\">[0,1]</span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-07979",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>imageOffset.y</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>imageExtent.height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-imageOffset-09104",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.z</code> and <span class=\"eq\">(<code>imageExtent.depth</code> +  <code>imageOffset.z</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>imageSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-07980",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code> or <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>imageOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>imageExtent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-07274",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.x</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-07275",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.y</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-07276",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.z</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-00207",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>imageOffset.x</code> and <code>extent.width</code> does not equal the width of the subresource specified by <code>srcSubresource</code>, <code>extent.width</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-00208",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>imageOffset.y</code> and <code>extent.height</code> does not equal the height of the subresource specified by <code>srcSubresource</code>, <code>extent.height</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-00209",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>imageOffset.z</code> and <code>extent.depth</code> does not equal the depth of the subresource specified by <code>srcSubresource</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-imageSubresource-09105",
          "text": "For each element of <code>pRegions</code>, <code>imageSubresource.aspectMask</code> <strong class=\"purple\">must</strong> specify aspects present in <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-07981",
          "text": "If <code>dstImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a>, then for each element of <code>pRegions</code>, <code>imageSubresource.aspectMask</code> <strong class=\"purple\">must</strong> be a single valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-07983",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, for each element of <code>pRegions</code>, <code>imageSubresource.baseArrayLayer</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>imageSubresource.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-bufferRowLength-09106",
          "text": "For each element of <code>pRegions</code>, <code>bufferRowLength</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-bufferImageHeight-09107",
          "text": "For each element of <code>pRegions</code>, <code>bufferImageHeight</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-bufferRowLength-09108",
          "text": "For each element of <code>pRegions</code>, <code>bufferRowLength</code> divided by the <a href=\"#formats-compatibility-classes\">texel block extent width</a> and then multiplied by the texel block size of <code>dstImage</code> <strong class=\"purple\">must</strong> be less than or equal to <span class=\"eq\">2<sup>31</sup>-1</span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-07975",
          "text": "If <code>dstImage</code> does not have either a depth/stencil format or a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar format</a>, then for each element of <code>pRegions</code>, <code>bufferOffset</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block size</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-07976",
          "text": "If <code>dstImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar format</a>, then for each element of <code>pRegions</code>, <code>bufferOffset</code> <strong class=\"purple\">must</strong> be a multiple of the element size of the compatible format for the format and the <code>aspectMask</code> of the <code>imageSubresource</code> as defined in <a href=\"#formats-compatible-planes\">Compatible Formats of Planes of Multi-Planar Formats</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-07978",
          "text": "If <code>dstImage</code> has a depth/stencil format, the <code>bufferOffset</code> member of any element of <code>pRegions</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-srcBuffer-parameter",
          "text": "<code>srcBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImage-parameter",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-dstImageLayout-parameter",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-pRegions-parameter",
          "text": "<code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>regionCount</code> valid <a href=\"#VkBufferImageCopy\">VkBufferImageCopy</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-regionCount-arraylength",
          "text": "<code>regionCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage-commonparent",
          "text": "Each of <code>commandBuffer</code>, <code>dstImage</code>, and <code>srcBuffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdCopyImageToBuffer": {
      "core": [
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-07966",
          "text": "If <code>srcImage</code> is non-sparse then the image or the specified <em>disjoint</em> plane <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-imageSubresource-07967",
          "text": "The <code>imageSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-imageSubresource-07968",
          "text": "<span class=\"eq\"><code>imageSubresource.baseArrayLayer</code> +  <code>imageSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-imageSubresource-07970",
          "text": "The image region specified by each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be contained within the specified <code>imageSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-imageSubresource-07971",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.x</code> and <span class=\"eq\">(<code>imageExtent.width</code> +  <code>imageOffset.x</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>imageSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-imageSubresource-07972",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.y</code> and <span class=\"eq\">(<code>imageExtent.height</code> +  <code>imageOffset.y</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>imageSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-07973",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> have a sample count equal to <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-commandBuffer-01831",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>srcImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-commandBuffer-01832",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstBuffer</code> <strong class=\"purple\">must</strong> not be a protected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-commandBuffer-01833",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstBuffer</code> <strong class=\"purple\">must</strong> not be an unprotected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-commandBuffer-07746",
          "text": "If the queue family used to create the <a href=\"#VkCommandPool\">VkCommandPool</a> which <code>commandBuffer</code> was allocated from does not support <code>VK_QUEUE_GRAPHICS_BIT</code> or <code>VK_QUEUE_COMPUTE_BIT</code>, the <code>bufferOffset</code> member of any element of <code>pRegions</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-imageOffset-07747",
          "text": "The <code>imageOffset</code> and <code>imageExtent</code> members of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> respect the image transfer granularity requirements of <code>commandBuffer</code>&#8217;s command pool&#8217;s queue family, as described in <a href=\"#VkQueueFamilyProperties\">VkQueueFamilyProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-pRegions-00183",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> be large enough to contain all buffer locations that are accessed according to <a href=\"#copies-buffers-images-addressing\">Buffer and Image Addressing</a>, for each element of <code>pRegions</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-pRegions-00184",
          "text": "The union of all source regions, and the union of all destination regions, specified by the elements of <code>pRegions</code>, <strong class=\"purple\">must</strong> not overlap in memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-00186",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-01998",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>srcImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_SRC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-dstBuffer-00191",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-dstBuffer-00192",
          "text": "If <code>dstBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImageLayout-00189",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>srcImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImageLayout-01397",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-07979",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>imageOffset.y</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>imageExtent.height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-imageOffset-09104",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.z</code> and <span class=\"eq\">(<code>imageExtent.depth</code> +  <code>imageOffset.z</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>imageSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-07980",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code> or <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>imageOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>imageExtent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-07274",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.x</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-07275",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.y</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-07276",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.z</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-00207",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>imageOffset.x</code> and <code>extent.width</code> does not equal the width of the subresource specified by <code>srcSubresource</code>, <code>extent.width</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-00208",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>imageOffset.y</code> and <code>extent.height</code> does not equal the height of the subresource specified by <code>srcSubresource</code>, <code>extent.height</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-00209",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>imageOffset.z</code> and <code>extent.depth</code> does not equal the depth of the subresource specified by <code>srcSubresource</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-imageSubresource-09105",
          "text": "For each element of <code>pRegions</code>, <code>imageSubresource.aspectMask</code> <strong class=\"purple\">must</strong> specify aspects present in <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-07981",
          "text": "If <code>srcImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a>, then for each element of <code>pRegions</code>, <code>imageSubresource.aspectMask</code> <strong class=\"purple\">must</strong> be a single valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-07983",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, for each element of <code>pRegions</code>, <code>imageSubresource.baseArrayLayer</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>imageSubresource.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-bufferRowLength-09106",
          "text": "For each element of <code>pRegions</code>, <code>bufferRowLength</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-bufferImageHeight-09107",
          "text": "For each element of <code>pRegions</code>, <code>bufferImageHeight</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-bufferRowLength-09108",
          "text": "For each element of <code>pRegions</code>, <code>bufferRowLength</code> divided by the <a href=\"#formats-compatibility-classes\">texel block extent width</a> and then multiplied by the texel block size of <code>srcImage</code> <strong class=\"purple\">must</strong> be less than or equal to <span class=\"eq\">2<sup>31</sup>-1</span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-07975",
          "text": "If <code>srcImage</code> does not have either a depth/stencil format or a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar format</a>, then for each element of <code>pRegions</code>, <code>bufferOffset</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block size</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-07976",
          "text": "If <code>srcImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar format</a>, then for each element of <code>pRegions</code>, <code>bufferOffset</code> <strong class=\"purple\">must</strong> be a multiple of the element size of the compatible format for the format and the <code>aspectMask</code> of the <code>imageSubresource</code> as defined in <a href=\"#formats-compatible-planes\">Compatible Formats of Planes of Multi-Planar Formats</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-07978",
          "text": "If <code>srcImage</code> has a depth/stencil format, the <code>bufferOffset</code> member of any element of <code>pRegions</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImage-parameter",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-srcImageLayout-parameter",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-dstBuffer-parameter",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-pRegions-parameter",
          "text": "<code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>regionCount</code> valid <a href=\"#VkBufferImageCopy\">VkBufferImageCopy</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-regionCount-arraylength",
          "text": "<code>regionCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer-commonparent",
          "text": "Each of <code>commandBuffer</code>, <code>dstBuffer</code>, and <code>srcImage</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkBufferImageCopy": {
      "core": [
        {
          "vuid": "VUID-VkBufferImageCopy-bufferRowLength-09101",
          "text": "<code>bufferRowLength</code> <strong class=\"purple\">must</strong> be <code>0</code>, or greater than or equal to the <code>width</code> member of <code>imageExtent</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy-bufferImageHeight-09102",
          "text": "<code>bufferImageHeight</code> <strong class=\"purple\">must</strong> be <code>0</code>, or greater than or equal to the <code>height</code> member of <code>imageExtent</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy-aspectMask-09103",
          "text": "The <code>aspectMask</code> member of <code>imageSubresource</code> <strong class=\"purple\">must</strong> only have a single bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy-imageExtent-06659",
          "text": "<code>imageExtent.width</code> <strong class=\"purple\">must</strong> not be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy-imageExtent-06660",
          "text": "<code>imageExtent.height</code> <strong class=\"purple\">must</strong> not be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy-imageExtent-06661",
          "text": "<code>imageExtent.depth</code> <strong class=\"purple\">must</strong> not be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy-imageSubresource-parameter",
          "text": "<code>imageSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdCopyBufferToImage2": {
      "core": [
        {
          "vuid": "VUID-vkCmdCopyBufferToImage2-commandBuffer-01828",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>srcBuffer</code> <strong class=\"purple\">must</strong> not be a protected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage2-commandBuffer-01829",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage2-commandBuffer-01830",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be an unprotected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage2-commandBuffer-07737",
          "text": "If the queue family used to create the <a href=\"#VkCommandPool\">VkCommandPool</a> which <code>commandBuffer</code> was allocated from does not support <code>VK_QUEUE_GRAPHICS_BIT</code> or <code>VK_QUEUE_COMPUTE_BIT</code>, the <code>bufferOffset</code> member of any element of <code>pCopyBufferToImageInfo-&gt;pRegions</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage2-imageOffset-07738",
          "text": "The <code>imageOffset</code> and <code>imageExtent</code> members of each element of <code>pCopyBufferToImageInfo-&gt;pRegions</code> <strong class=\"purple\">must</strong> respect the image transfer granularity requirements of <code>commandBuffer</code>&#8217;s command pool&#8217;s queue family, as described in <a href=\"#VkQueueFamilyProperties\">VkQueueFamilyProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage2-commandBuffer-07739",
          "text": "If the queue family used to create the <a href=\"#VkCommandPool\">VkCommandPool</a> which <code>commandBuffer</code> was allocated from does not support <code>VK_QUEUE_GRAPHICS_BIT</code>, for each element of <code>pCopyBufferToImageInfo-&gt;pRegions</code>, the <code>aspectMask</code> member of <code>imageSubresource</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_ASPECT_DEPTH_BIT</code> or <code>VK_IMAGE_ASPECT_STENCIL_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage2-pCopyBufferToImageInfo-parameter",
          "text": "<code>pCopyBufferToImageInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkCopyBufferToImageInfo2\">VkCopyBufferToImageInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyBufferToImage2-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        }
      ]
    },
    "VkCopyBufferToImageInfo2": {
      "core": [
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-pRegions-04565",
          "text": "The image region specified by each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be contained within the specified <code>imageSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-pRegions-00171",
          "text": "<code>srcBuffer</code> <strong class=\"purple\">must</strong> be large enough to contain all buffer locations that are accessed according to <a href=\"#copies-buffers-images-addressing\">Buffer and Image Addressing</a>, for each element of <code>pRegions</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-pRegions-00173",
          "text": "The union of all source regions, and the union of all destination regions, specified by the elements of <code>pRegions</code>, <strong class=\"purple\">must</strong> not overlap in memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-srcBuffer-00174",
          "text": "<code>srcBuffer</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_TRANSFER_SRC_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-01997",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>dstImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-srcBuffer-00176",
          "text": "If <code>srcBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-00177",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImageLayout-00180",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>dstImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImageLayout-01396",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-pRegions-07931",
          "text": "If <a href=\"#VK_EXT_depth_range_unrestricted\">VK_EXT_depth_range_unrestricted</a> is not enabled, for each element of <code>pRegions</code> whose <code>imageSubresource</code> contains a depth aspect, the data in <code>srcBuffer</code> <strong class=\"purple\">must</strong> be in the range <span class=\"eq\">[0,1]</span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-07966",
          "text": "If <code>dstImage</code> is non-sparse then the image or the specified <em>disjoint</em> plane <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-imageSubresource-07967",
          "text": "The <code>imageSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-imageSubresource-07968",
          "text": "<span class=\"eq\"><code>imageSubresource.baseArrayLayer</code> +  <code>imageSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-07973",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> have a sample count equal to <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-07979",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>imageOffset.y</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>imageExtent.height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-imageOffset-09104",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.z</code> and <span class=\"eq\">(<code>imageExtent.depth</code> +  <code>imageOffset.z</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>imageSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-07980",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code> or <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>imageOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>imageExtent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-07274",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.x</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-07275",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.y</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-07276",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.z</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-00207",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>imageOffset.x</code> and <code>extent.width</code> does not equal the width of the subresource specified by <code>srcSubresource</code>, <code>extent.width</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-00208",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>imageOffset.y</code> and <code>extent.height</code> does not equal the height of the subresource specified by <code>srcSubresource</code>, <code>extent.height</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-00209",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>imageOffset.z</code> and <code>extent.depth</code> does not equal the depth of the subresource specified by <code>srcSubresource</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-imageSubresource-09105",
          "text": "For each element of <code>pRegions</code>, <code>imageSubresource.aspectMask</code> <strong class=\"purple\">must</strong> specify aspects present in <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-07981",
          "text": "If <code>dstImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a>, then for each element of <code>pRegions</code>, <code>imageSubresource.aspectMask</code> <strong class=\"purple\">must</strong> be a single valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-07983",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, for each element of <code>pRegions</code>, <code>imageSubresource.baseArrayLayer</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>imageSubresource.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-bufferRowLength-09106",
          "text": "For each element of <code>pRegions</code>, <code>bufferRowLength</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-bufferImageHeight-09107",
          "text": "For each element of <code>pRegions</code>, <code>bufferImageHeight</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-bufferRowLength-09108",
          "text": "For each element of <code>pRegions</code>, <code>bufferRowLength</code> divided by the <a href=\"#formats-compatibility-classes\">texel block extent width</a> and then multiplied by the texel block size of <code>dstImage</code> <strong class=\"purple\">must</strong> be less than or equal to <span class=\"eq\">2<sup>31</sup>-1</span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-07975",
          "text": "If <code>dstImage</code> does not have either a depth/stencil format or a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar format</a>, then for each element of <code>pRegions</code>, <code>bufferOffset</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block size</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-07976",
          "text": "If <code>dstImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar format</a>, then for each element of <code>pRegions</code>, <code>bufferOffset</code> <strong class=\"purple\">must</strong> be a multiple of the element size of the compatible format for the format and the <code>aspectMask</code> of the <code>imageSubresource</code> as defined in <a href=\"#formats-compatible-planes\">Compatible Formats of Planes of Multi-Planar Formats</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-07978",
          "text": "If <code>dstImage</code> has a depth/stencil format, the <code>bufferOffset</code> member of any element of <code>pRegions</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-pRegions-06223",
          "text": "For each element of <code>pRegions</code> not containing <code>VkCopyCommandTransformInfoQCOM</code> in its <code>pNext</code> chain, <code>imageOffset.x</code> and <span class=\"eq\">(<code>imageExtent.width</code> +  <code>imageOffset.x</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>imageSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-pRegions-06224",
          "text": "For each element of <code>pRegions</code> not containing <code>VkCopyCommandTransformInfoQCOM</code> in its <code>pNext</code> chain, <code>imageOffset.y</code> and <span class=\"eq\">(<code>imageExtent.height</code> +  <code>imageOffset.y</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>imageSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-srcBuffer-parameter",
          "text": "<code>srcBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImage-parameter",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-dstImageLayout-parameter",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-pRegions-parameter",
          "text": "<code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>regionCount</code> valid <a href=\"#VkBufferImageCopy2\">VkBufferImageCopy2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-regionCount-arraylength",
          "text": "<code>regionCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyBufferToImageInfo2-commonparent",
          "text": "Both of <code>dstImage</code>, and <code>srcBuffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdCopyImageToBuffer2": {
      "core": [
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer2-commandBuffer-01831",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>srcImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer2-commandBuffer-01832",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstBuffer</code> <strong class=\"purple\">must</strong> not be a protected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer2-commandBuffer-01833",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstBuffer</code> <strong class=\"purple\">must</strong> not be an unprotected buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer2-commandBuffer-07746",
          "text": "If the queue family used to create the <a href=\"#VkCommandPool\">VkCommandPool</a> which <code>commandBuffer</code> was allocated from does not support <code>VK_QUEUE_GRAPHICS_BIT</code> or <code>VK_QUEUE_COMPUTE_BIT</code>, the <code>bufferOffset</code> member of any element of <code>pCopyImageToBufferInfo-&gt;pRegions</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer2-imageOffset-07747",
          "text": "The <code>imageOffset</code> and <code>imageExtent</code> members of each element of <code>pCopyImageToBufferInfo-&gt;pRegions</code> <strong class=\"purple\">must</strong> respect the image transfer granularity requirements of <code>commandBuffer</code>&#8217;s command pool&#8217;s queue family, as described in <a href=\"#VkQueueFamilyProperties\">VkQueueFamilyProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer2-pCopyImageToBufferInfo-parameter",
          "text": "<code>pCopyImageToBufferInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkCopyImageToBufferInfo2\">VkCopyImageToBufferInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support transfer, graphics, or compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdCopyImageToBuffer2-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        }
      ]
    },
    "VkCopyImageToBufferInfo2": {
      "core": [
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-pRegions-04566",
          "text": "The image region specified by each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be contained within the specified <code>imageSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-pRegions-00183",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> be large enough to contain all buffer locations that are accessed according to <a href=\"#copies-buffers-images-addressing\">Buffer and Image Addressing</a>, for each element of <code>pRegions</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-pRegions-00184",
          "text": "The union of all source regions, and the union of all destination regions, specified by the elements of <code>pRegions</code>, <strong class=\"purple\">must</strong> not overlap in memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-00186",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-01998",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>srcImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_SRC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-dstBuffer-00191",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> have been created with <code>VK_BUFFER_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-dstBuffer-00192",
          "text": "If <code>dstBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImageLayout-00189",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>srcImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImageLayout-01397",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL</code>, or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-07966",
          "text": "If <code>srcImage</code> is non-sparse then the image or the specified <em>disjoint</em> plane <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-imageSubresource-07967",
          "text": "The <code>imageSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-imageSubresource-07968",
          "text": "<span class=\"eq\"><code>imageSubresource.baseArrayLayer</code> +  <code>imageSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-07973",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> have a sample count equal to <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-07979",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>imageOffset.y</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>imageExtent.height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-imageOffset-09104",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.z</code> and <span class=\"eq\">(<code>imageExtent.depth</code> +  <code>imageOffset.z</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>imageSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-07980",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code> or <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>imageOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>imageExtent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-07274",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.x</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-07275",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.y</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-07276",
          "text": "For each element of <code>pRegions</code>, <code>imageOffset.z</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-00207",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>imageOffset.x</code> and <code>extent.width</code> does not equal the width of the subresource specified by <code>srcSubresource</code>, <code>extent.width</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-00208",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>imageOffset.y</code> and <code>extent.height</code> does not equal the height of the subresource specified by <code>srcSubresource</code>, <code>extent.height</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-00209",
          "text": "For each element of <code>pRegions</code>, if the sum of <code>imageOffset.z</code> and <code>extent.depth</code> does not equal the depth of the subresource specified by <code>srcSubresource</code>, <code>extent.depth</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent depth</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-imageSubresource-09105",
          "text": "For each element of <code>pRegions</code>, <code>imageSubresource.aspectMask</code> <strong class=\"purple\">must</strong> specify aspects present in <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-07981",
          "text": "If <code>srcImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar image format</a>, then for each element of <code>pRegions</code>, <code>imageSubresource.aspectMask</code> <strong class=\"purple\">must</strong> be a single valid <a href=\"#formats-planes-image-aspect\">multi-planar aspect mask</a> bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-07983",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, for each element of <code>pRegions</code>, <code>imageSubresource.baseArrayLayer</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>imageSubresource.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-bufferRowLength-09106",
          "text": "For each element of <code>pRegions</code>, <code>bufferRowLength</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent width</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-bufferImageHeight-09107",
          "text": "For each element of <code>pRegions</code>, <code>bufferImageHeight</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block extent height</a> of the <a href=\"#VkFormat\">VkFormat</a> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-bufferRowLength-09108",
          "text": "For each element of <code>pRegions</code>, <code>bufferRowLength</code> divided by the <a href=\"#formats-compatibility-classes\">texel block extent width</a> and then multiplied by the texel block size of <code>srcImage</code> <strong class=\"purple\">must</strong> be less than or equal to <span class=\"eq\">2<sup>31</sup>-1</span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-07975",
          "text": "If <code>srcImage</code> does not have either a depth/stencil format or a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar format</a>, then for each element of <code>pRegions</code>, <code>bufferOffset</code> <strong class=\"purple\">must</strong> be a multiple of the <a href=\"#formats-compatibility-classes\">texel block size</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-07976",
          "text": "If <code>srcImage</code> has a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">multi-planar format</a>, then for each element of <code>pRegions</code>, <code>bufferOffset</code> <strong class=\"purple\">must</strong> be a multiple of the element size of the compatible format for the format and the <code>aspectMask</code> of the <code>imageSubresource</code> as defined in <a href=\"#formats-compatible-planes\">Compatible Formats of Planes of Multi-Planar Formats</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-07978",
          "text": "If <code>srcImage</code> has a depth/stencil format, the <code>bufferOffset</code> member of any element of <code>pRegions</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-imageOffset-00197",
          "text": "For each element of <code>pRegions</code> not containing <code>VkCopyCommandTransformInfoQCOM</code> in its <code>pNext</code> chain, <code>imageOffset.x</code> and <span class=\"eq\">(<code>imageExtent.width</code> +  <code>imageOffset.x</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>imageSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-imageOffset-00198",
          "text": "For each element of <code>pRegions</code> not containing <code>VkCopyCommandTransformInfoQCOM</code> in its <code>pNext</code> chain, <code>imageOffset.y</code> and <span class=\"eq\">(<code>imageExtent.height</code> +  <code>imageOffset.y</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>imageSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImage-parameter",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-srcImageLayout-parameter",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-dstBuffer-parameter",
          "text": "<code>dstBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-pRegions-parameter",
          "text": "<code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>regionCount</code> valid <a href=\"#VkBufferImageCopy2\">VkBufferImageCopy2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-regionCount-arraylength",
          "text": "<code>regionCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkCopyImageToBufferInfo2-commonparent",
          "text": "Both of <code>dstBuffer</code>, and <code>srcImage</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkBufferImageCopy2": {
      "core": [
        {
          "vuid": "VUID-VkBufferImageCopy2-bufferRowLength-09101",
          "text": "<code>bufferRowLength</code> <strong class=\"purple\">must</strong> be <code>0</code>, or greater than or equal to the <code>width</code> member of <code>imageExtent</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy2-bufferImageHeight-09102",
          "text": "<code>bufferImageHeight</code> <strong class=\"purple\">must</strong> be <code>0</code>, or greater than or equal to the <code>height</code> member of <code>imageExtent</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy2-aspectMask-09103",
          "text": "The <code>aspectMask</code> member of <code>imageSubresource</code> <strong class=\"purple\">must</strong> only have a single bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy2-imageExtent-06659",
          "text": "<code>imageExtent.width</code> <strong class=\"purple\">must</strong> not be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy2-imageExtent-06660",
          "text": "<code>imageExtent.height</code> <strong class=\"purple\">must</strong> not be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy2-imageExtent-06661",
          "text": "<code>imageExtent.depth</code> <strong class=\"purple\">must</strong> not be 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBufferImageCopy2-imageSubresource-parameter",
          "text": "<code>imageSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdBlitImage": {
      "core": [
        {
          "vuid": "VUID-vkCmdBlitImage-commandBuffer-01834",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>srcImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-commandBuffer-01835",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-commandBuffer-01836",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be an unprotected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-pRegions-00215",
          "text": "The source region specified by each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be a region that is contained within <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-pRegions-00216",
          "text": "The destination region specified by each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be a region that is contained within <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-pRegions-00217",
          "text": "The union of all destination regions, specified by the elements of <code>pRegions</code>, <strong class=\"purple\">must</strong> not overlap in memory with any texel that <strong class=\"purple\">may</strong> be sampled during the blit operation",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-01999",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>srcImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_BLIT_SRC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-06421",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> not use a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">format that requires a sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-00219",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-00220",
          "text": "If <code>srcImage</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImageLayout-00221",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>srcImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImageLayout-01398",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstImage-02000",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>dstImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_BLIT_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstImage-06422",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> not use a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">format that requires a sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstImage-00224",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstImage-00225",
          "text": "If <code>dstImage</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstImageLayout-00226",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>dstImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstImageLayout-01399",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-00229",
          "text": "If either of <code>srcImage</code> or <code>dstImage</code> was created with a signed integer <a href=\"#VkFormat\">VkFormat</a>, the other <strong class=\"purple\">must</strong> also have been created with a signed integer <a href=\"#VkFormat\">VkFormat</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-00230",
          "text": "If either of <code>srcImage</code> or <code>dstImage</code> was created with an unsigned integer <a href=\"#VkFormat\">VkFormat</a>, the other <strong class=\"purple\">must</strong> also have been created with an unsigned integer <a href=\"#VkFormat\">VkFormat</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-00231",
          "text": "If either of <code>srcImage</code> or <code>dstImage</code> was created with a depth/stencil format, the other <strong class=\"purple\">must</strong> have exactly the same format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-00232",
          "text": "If <code>srcImage</code> was created with a depth/stencil format, <code>filter</code> <strong class=\"purple\">must</strong> be <code>VK_FILTER_NEAREST</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-00233",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> have been created with a <code>samples</code> value of <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstImage-00234",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> have been created with a <code>samples</code> value of <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-filter-02001",
          "text": "If <code>filter</code> is <code>VK_FILTER_LINEAR</code>, then the <a href=\"#resources-image-format-features\">format features</a> of <code>srcImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-filter-02002",
          "text": "If <code>filter</code> is <code>VK_FILTER_CUBIC_EXT</code>, then the <a href=\"#resources-image-format-features\">format features</a> of <code>srcImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-filter-00237",
          "text": "If <code>filter</code> is <code>VK_FILTER_CUBIC_EXT</code>, <code>srcImage</code> <strong class=\"purple\">must</strong> be of type <code>VK_IMAGE_TYPE_2D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcSubresource-01705",
          "text": "The <code>srcSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstSubresource-01706",
          "text": "The <code>dstSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcSubresource-01707",
          "text": "<span class=\"eq\"><code>srcSubresource.baseArrayLayer</code> +  <code>srcSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstSubresource-01708",
          "text": "<span class=\"eq\"><code>dstSubresource.baseArrayLayer</code> +  <code>dstSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-00240",
          "text": "If either <code>srcImage</code> or <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>srcSubresource.baseArrayLayer</code> and <code>dstSubresource.baseArrayLayer</code> <strong class=\"purple\">must</strong> each be <code>0</code>, and <code>srcSubresource.layerCount</code> and <code>dstSubresource.layerCount</code> <strong class=\"purple\">must</strong> each be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-aspectMask-00241",
          "text": "For each element of <code>pRegions</code>, <code>srcSubresource.aspectMask</code> <strong class=\"purple\">must</strong> specify aspects present in <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-aspectMask-00242",
          "text": "For each element of <code>pRegions</code>, <code>dstSubresource.aspectMask</code> <strong class=\"purple\">must</strong> specify aspects present in <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcOffset-00243",
          "text": "For each element of <code>pRegions</code>, <code>srcOffsets</code>[0].x and <code>srcOffsets</code>[1].x <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcOffset-00244",
          "text": "For each element of <code>pRegions</code>, <code>srcOffsets</code>[0].y and <code>srcOffsets</code>[1].y <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-00245",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>srcOffsets</code>[0].y <strong class=\"purple\">must</strong> be <code>0</code> and <code>srcOffsets</code>[1].y <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcOffset-00246",
          "text": "For each element of <code>pRegions</code>, <code>srcOffsets</code>[0].z and <code>srcOffsets</code>[1].z <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-00247",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code> or <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>srcOffsets</code>[0].z <strong class=\"purple\">must</strong> be <code>0</code> and <code>srcOffsets</code>[1].z <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstOffset-00248",
          "text": "For each element of <code>pRegions</code>, <code>dstOffsets</code>[0].x and <code>dstOffsets</code>[1].x <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstOffset-00249",
          "text": "For each element of <code>pRegions</code>, <code>dstOffsets</code>[0].y and <code>dstOffsets</code>[1].y <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstImage-00250",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>dstOffsets</code>[0].y <strong class=\"purple\">must</strong> be <code>0</code> and <code>dstOffsets</code>[1].y <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstOffset-00251",
          "text": "For each element of <code>pRegions</code>, <code>dstOffsets</code>[0].z and <code>dstOffsets</code>[1].z <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstImage-00252",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code> or <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>dstOffsets</code>[0].z <strong class=\"purple\">must</strong> be <code>0</code> and <code>dstOffsets</code>[1].z <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImage-parameter",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-srcImageLayout-parameter",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstImage-parameter",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-dstImageLayout-parameter",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-pRegions-parameter",
          "text": "<code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>regionCount</code> valid <a href=\"#VkImageBlit\">VkImageBlit</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-filter-parameter",
          "text": "<code>filter</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFilter\">VkFilter</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-regionCount-arraylength",
          "text": "<code>regionCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage-commonparent",
          "text": "Each of <code>commandBuffer</code>, <code>dstImage</code>, and <code>srcImage</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkImageBlit": {
      "core": [
        {
          "vuid": "VUID-VkImageBlit-aspectMask-00238",
          "text": "The <code>aspectMask</code> member of <code>srcSubresource</code> and <code>dstSubresource</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageBlit-layerCount-08800",
          "text": "The     <code>layerCount</code> members of <code>srcSubresource</code> or <code>dstSubresource</code>     <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageBlit-srcSubresource-parameter",
          "text": "<code>srcSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageBlit-dstSubresource-parameter",
          "text": "<code>dstSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdBlitImage2": {
      "core": [
        {
          "vuid": "VUID-vkCmdBlitImage2-commandBuffer-01834",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>srcImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage2-commandBuffer-01835",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage2-commandBuffer-01836",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be an unprotected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage2-pBlitImageInfo-parameter",
          "text": "<code>pBlitImageInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkBlitImageInfo2\">VkBlitImageInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBlitImage2-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        }
      ]
    },
    "VkBlitImageInfo2": {
      "core": [
        {
          "vuid": "VUID-VkBlitImageInfo2-pRegions-00215",
          "text": "The source region specified by each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be a region that is contained within <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-pRegions-00216",
          "text": "The destination region specified by each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be a region that is contained within <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-pRegions-00217",
          "text": "The union of all destination regions, specified by the elements of <code>pRegions</code>, <strong class=\"purple\">must</strong> not overlap in memory with any texel that <strong class=\"purple\">may</strong> be sampled during the blit operation",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-01999",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>srcImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_BLIT_SRC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-06421",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> not use a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">format that requires a sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-00219",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-00220",
          "text": "If <code>srcImage</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImageLayout-00221",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>srcImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImageLayout-01398",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstImage-02000",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>dstImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_BLIT_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstImage-06422",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> not use a <a href=\"#formats-requiring-sampler-ycbcr-conversion\">format that requires a sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstImage-00224",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstImage-00225",
          "text": "If <code>dstImage</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstImageLayout-00226",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>dstImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstImageLayout-01399",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-00229",
          "text": "If either of <code>srcImage</code> or <code>dstImage</code> was created with a signed integer <a href=\"#VkFormat\">VkFormat</a>, the other <strong class=\"purple\">must</strong> also have been created with a signed integer <a href=\"#VkFormat\">VkFormat</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-00230",
          "text": "If either of <code>srcImage</code> or <code>dstImage</code> was created with an unsigned integer <a href=\"#VkFormat\">VkFormat</a>, the other <strong class=\"purple\">must</strong> also have been created with an unsigned integer <a href=\"#VkFormat\">VkFormat</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-00231",
          "text": "If either of <code>srcImage</code> or <code>dstImage</code> was created with a depth/stencil format, the other <strong class=\"purple\">must</strong> have exactly the same format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-00232",
          "text": "If <code>srcImage</code> was created with a depth/stencil format, <code>filter</code> <strong class=\"purple\">must</strong> be <code>VK_FILTER_NEAREST</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-00233",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> have been created with a <code>samples</code> value of <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstImage-00234",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> have been created with a <code>samples</code> value of <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-filter-02001",
          "text": "If <code>filter</code> is <code>VK_FILTER_LINEAR</code>, then the <a href=\"#resources-image-format-features\">format features</a> of <code>srcImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-filter-02002",
          "text": "If <code>filter</code> is <code>VK_FILTER_CUBIC_EXT</code>, then the <a href=\"#resources-image-format-features\">format features</a> of <code>srcImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-filter-00237",
          "text": "If <code>filter</code> is <code>VK_FILTER_CUBIC_EXT</code>, <code>srcImage</code> <strong class=\"purple\">must</strong> be of type <code>VK_IMAGE_TYPE_2D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcSubresource-01705",
          "text": "The <code>srcSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstSubresource-01706",
          "text": "The <code>dstSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcSubresource-01707",
          "text": "<span class=\"eq\"><code>srcSubresource.baseArrayLayer</code> +  <code>srcSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstSubresource-01708",
          "text": "<span class=\"eq\"><code>dstSubresource.baseArrayLayer</code> +  <code>dstSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-00240",
          "text": "If either <code>srcImage</code> or <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>srcSubresource.baseArrayLayer</code> and <code>dstSubresource.baseArrayLayer</code> <strong class=\"purple\">must</strong> each be <code>0</code>, and <code>srcSubresource.layerCount</code> and <code>dstSubresource.layerCount</code> <strong class=\"purple\">must</strong> each be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-aspectMask-00241",
          "text": "For each element of <code>pRegions</code>, <code>srcSubresource.aspectMask</code> <strong class=\"purple\">must</strong> specify aspects present in <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-aspectMask-00242",
          "text": "For each element of <code>pRegions</code>, <code>dstSubresource.aspectMask</code> <strong class=\"purple\">must</strong> specify aspects present in <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcOffset-00243",
          "text": "For each element of <code>pRegions</code>, <code>srcOffsets</code>[0].x and <code>srcOffsets</code>[1].x <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcOffset-00244",
          "text": "For each element of <code>pRegions</code>, <code>srcOffsets</code>[0].y and <code>srcOffsets</code>[1].y <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-00245",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>srcOffsets</code>[0].y <strong class=\"purple\">must</strong> be <code>0</code> and <code>srcOffsets</code>[1].y <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcOffset-00246",
          "text": "For each element of <code>pRegions</code>, <code>srcOffsets</code>[0].z and <code>srcOffsets</code>[1].z <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-00247",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code> or <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>srcOffsets</code>[0].z <strong class=\"purple\">must</strong> be <code>0</code> and <code>srcOffsets</code>[1].z <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstOffset-00248",
          "text": "For each element of <code>pRegions</code>, <code>dstOffsets</code>[0].x and <code>dstOffsets</code>[1].x <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstOffset-00249",
          "text": "For each element of <code>pRegions</code>, <code>dstOffsets</code>[0].y and <code>dstOffsets</code>[1].y <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstImage-00250",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>dstOffsets</code>[0].y <strong class=\"purple\">must</strong> be <code>0</code> and <code>dstOffsets</code>[1].y <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstOffset-00251",
          "text": "For each element of <code>pRegions</code>, <code>dstOffsets</code>[0].z and <code>dstOffsets</code>[1].z <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstImage-00252",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code> or <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>dstOffsets</code>[0].z <strong class=\"purple\">must</strong> be <code>0</code> and <code>dstOffsets</code>[1].z <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImage-parameter",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-srcImageLayout-parameter",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstImage-parameter",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-dstImageLayout-parameter",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-pRegions-parameter",
          "text": "<code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>regionCount</code> valid <a href=\"#VkImageBlit2\">VkImageBlit2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-filter-parameter",
          "text": "<code>filter</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFilter\">VkFilter</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-regionCount-arraylength",
          "text": "<code>regionCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkBlitImageInfo2-commonparent",
          "text": "Both of <code>dstImage</code>, and <code>srcImage</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkImageBlit2": {
      "core": [
        {
          "vuid": "VUID-VkImageBlit2-aspectMask-00238",
          "text": "The <code>aspectMask</code> member of <code>srcSubresource</code> and <code>dstSubresource</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageBlit2-layerCount-08800",
          "text": "The     <code>layerCount</code> members of <code>srcSubresource</code> or <code>dstSubresource</code>     <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageBlit2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_BLIT_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageBlit2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageBlit2-srcSubresource-parameter",
          "text": "<code>srcSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageBlit2-dstSubresource-parameter",
          "text": "<code>dstSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdResolveImage": {
      "core": [
        {
          "vuid": "VUID-vkCmdResolveImage-commandBuffer-01837",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>srcImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-commandBuffer-01838",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-commandBuffer-01839",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be an unprotected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-pRegions-00255",
          "text": "The union of all source regions, and the union of all destination regions, specified by the elements of <code>pRegions</code>, <strong class=\"purple\">must</strong> not overlap in memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImage-00256",
          "text": "If <code>srcImage</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImage-00257",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> have a sample count equal to any valid sample count value other than <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstImage-00258",
          "text": "If <code>dstImage</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstImage-00259",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> have a sample count equal to <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImageLayout-00260",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>srcImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImageLayout-01400",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstImageLayout-00262",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>dstImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstImageLayout-01401",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstImage-02003",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>dstImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImage-01386",
          "text": "<code>srcImage</code> and <code>dstImage</code> <strong class=\"purple\">must</strong> have been created with the same image format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcSubresource-01709",
          "text": "The <code>srcSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstSubresource-01710",
          "text": "The <code>dstSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcSubresource-01711",
          "text": "<span class=\"eq\"><code>srcSubresource.baseArrayLayer</code> +  <code>srcSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstSubresource-01712",
          "text": "<span class=\"eq\"><code>dstSubresource.baseArrayLayer</code> +  <code>dstSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImage-04446",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>srcSubresource.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImage-04447",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>dstSubresource.baseArrayLayer</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>dstSubresource.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcOffset-00269",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.x</code> and <span class=\"eq\">(<code>extent.width</code> +  <code>srcOffset.x</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcOffset-00270",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.y</code> and <span class=\"eq\">(<code>extent.height</code> +  <code>srcOffset.y</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImage-00271",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>srcOffset.y</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcOffset-00272",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.z</code> and <span class=\"eq\">(<code>extent.depth</code> +  <code>srcOffset.z</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImage-00273",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code> or <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>srcOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstOffset-00274",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.x</code> and <span class=\"eq\">(<code>extent.width</code> +  <code>dstOffset.x</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstOffset-00275",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.y</code> and <span class=\"eq\">(<code>extent.height</code> +  <code>dstOffset.y</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstImage-00276",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>dstOffset.y</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstOffset-00277",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.z</code> and <span class=\"eq\">(<code>extent.depth</code> +  <code>dstOffset.z</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstImage-00278",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code> or <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>dstOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImage-06762",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImage-06763",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>srcImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_SRC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstImage-06764",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstImage-06765",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>dstImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImage-parameter",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-srcImageLayout-parameter",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstImage-parameter",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-dstImageLayout-parameter",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-pRegions-parameter",
          "text": "<code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>regionCount</code> valid <a href=\"#VkImageResolve\">VkImageResolve</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-regionCount-arraylength",
          "text": "<code>regionCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage-commonparent",
          "text": "Each of <code>commandBuffer</code>, <code>dstImage</code>, and <code>srcImage</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkImageResolve": {
      "core": [
        {
          "vuid": "VUID-VkImageResolve-aspectMask-00266",
          "text": "The <code>aspectMask</code> member of <code>srcSubresource</code> and <code>dstSubresource</code> <strong class=\"purple\">must</strong> only contain <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageResolve-layerCount-08803",
          "text": "The     <code>layerCount</code> member of <code>srcSubresource</code> and <code>dstSubresource</code>     <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageResolve-srcSubresource-parameter",
          "text": "<code>srcSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageResolve-dstSubresource-parameter",
          "text": "<code>dstSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdResolveImage2": {
      "core": [
        {
          "vuid": "VUID-vkCmdResolveImage2-commandBuffer-01837",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>srcImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage2-commandBuffer-01838",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be a protected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage2-commandBuffer-01839",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, <code>dstImage</code> <strong class=\"purple\">must</strong> not be an unprotected image",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage2-pResolveImageInfo-parameter",
          "text": "<code>pResolveImageInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkResolveImageInfo2\">VkResolveImageInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdResolveImage2-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        }
      ]
    },
    "VkResolveImageInfo2": {
      "core": [
        {
          "vuid": "VUID-VkResolveImageInfo2-pRegions-00255",
          "text": "The union of all source regions, and the union of all destination regions, specified by the elements of <code>pRegions</code>, <strong class=\"purple\">must</strong> not overlap in memory",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImage-00256",
          "text": "If <code>srcImage</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImage-00257",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> have a sample count equal to any valid sample count value other than <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstImage-00258",
          "text": "If <code>dstImage</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstImage-00259",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> have a sample count equal to <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImageLayout-00260",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>srcImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImageLayout-01400",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstImageLayout-00262",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> specify the layout of the image subresources of <code>dstImage</code> specified in <code>pRegions</code> at the time this command is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstImageLayout-01401",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code>, <code>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL</code> or <code>VK_IMAGE_LAYOUT_GENERAL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstImage-02003",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>dstImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImage-01386",
          "text": "<code>srcImage</code> and <code>dstImage</code> <strong class=\"purple\">must</strong> have been created with the same image format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcSubresource-01709",
          "text": "The <code>srcSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstSubresource-01710",
          "text": "The <code>dstSubresource.mipLevel</code> member of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than the <code>mipLevels</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcSubresource-01711",
          "text": "<span class=\"eq\"><code>srcSubresource.baseArrayLayer</code> +  <code>srcSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>srcImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstSubresource-01712",
          "text": "<span class=\"eq\"><code>dstSubresource.baseArrayLayer</code> +  <code>dstSubresource.layerCount</code></span> of each element of <code>pRegions</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>arrayLayers</code> specified in <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a> when <code>dstImage</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImage-04446",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>srcSubresource.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImage-04447",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_3D</code>, then for each element of <code>pRegions</code>, <code>dstSubresource.baseArrayLayer</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>dstSubresource.layerCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcOffset-00269",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.x</code> and <span class=\"eq\">(<code>extent.width</code> +  <code>srcOffset.x</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcOffset-00270",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.y</code> and <span class=\"eq\">(<code>extent.height</code> +  <code>srcOffset.y</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImage-00271",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>srcOffset.y</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcOffset-00272",
          "text": "For each element of <code>pRegions</code>, <code>srcOffset.z</code> and <span class=\"eq\">(<code>extent.depth</code> +  <code>srcOffset.z</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>srcSubresource</code> of <code>srcImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImage-00273",
          "text": "If <code>srcImage</code> is of type <code>VK_IMAGE_TYPE_1D</code> or <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>srcOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstOffset-00274",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.x</code> and <span class=\"eq\">(<code>extent.width</code> +  <code>dstOffset.x</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the width of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstOffset-00275",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.y</code> and <span class=\"eq\">(<code>extent.height</code> +  <code>dstOffset.y</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the height of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstImage-00276",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code>, then for each element of <code>pRegions</code>, <code>dstOffset.y</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstOffset-00277",
          "text": "For each element of <code>pRegions</code>, <code>dstOffset.z</code> and <span class=\"eq\">(<code>extent.depth</code> +  <code>dstOffset.z</code>)</span> <strong class=\"purple\">must</strong> both be greater than or equal to <code>0</code> and less than or equal to the depth of the specified <code>dstSubresource</code> of <code>dstImage</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstImage-00278",
          "text": "If <code>dstImage</code> is of type <code>VK_IMAGE_TYPE_1D</code> or <code>VK_IMAGE_TYPE_2D</code>, then for each element of <code>pRegions</code>, <code>dstOffset.z</code> <strong class=\"purple\">must</strong> be <code>0</code> and <code>extent.depth</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImage-06762",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_SRC_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImage-06763",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>srcImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_SRC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstImage-06764",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> have been created with <code>VK_IMAGE_USAGE_TRANSFER_DST_BIT</code> usage flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstImage-06765",
          "text": "The <a href=\"#resources-image-format-features\">format features</a> of <code>dstImage</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_TRANSFER_DST_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImage-parameter",
          "text": "<code>srcImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-srcImageLayout-parameter",
          "text": "<code>srcImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstImage-parameter",
          "text": "<code>dstImage</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImage\">VkImage</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-dstImageLayout-parameter",
          "text": "<code>dstImageLayout</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageLayout\">VkImageLayout</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-pRegions-parameter",
          "text": "<code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>regionCount</code> valid <a href=\"#VkImageResolve2\">VkImageResolve2</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-regionCount-arraylength",
          "text": "<code>regionCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkResolveImageInfo2-commonparent",
          "text": "Both of <code>dstImage</code>, and <code>srcImage</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkImageResolve2": {
      "core": [
        {
          "vuid": "VUID-VkImageResolve2-aspectMask-00266",
          "text": "The <code>aspectMask</code> member of <code>srcSubresource</code> and <code>dstSubresource</code> <strong class=\"purple\">must</strong> only contain <code>VK_IMAGE_ASPECT_COLOR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageResolve2-layerCount-08803",
          "text": "The     <code>layerCount</code> member of <code>srcSubresource</code> and <code>dstSubresource</code>     <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageResolve2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageResolve2-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageResolve2-srcSubresource-parameter",
          "text": "<code>srcSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageResolve2-dstSubresource-parameter",
          "text": "<code>dstSubresource</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageSubresourceLayers\">VkImageSubresourceLayers</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdRefreshObjectsKHR": {
      "core": [
        {
          "vuid": "VUID-vkCmdRefreshObjectsKHR-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdRefreshObjectsKHR-pRefreshObjects-parameter",
          "text": "<code>pRefreshObjects</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkRefreshObjectListKHR\">VkRefreshObjectListKHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdRefreshObjectsKHR-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdRefreshObjectsKHR-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, compute, or transfer operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdRefreshObjectsKHR-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        }
      ]
    },
    "VkRefreshObjectListKHR": {
      "core": [
        {
          "vuid": "VUID-VkRefreshObjectListKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_REFRESH_OBJECT_LIST_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRefreshObjectListKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRefreshObjectListKHR-pObjects-parameter",
          "text": "<code>pObjects</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>objectCount</code> valid <a href=\"#VkRefreshObjectKHR\">VkRefreshObjectKHR</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRefreshObjectListKHR-objectCount-arraylength",
          "text": "<code>objectCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkRefreshObjectKHR": {
      "core": [
        {
          "vuid": "VUID-VkRefreshObjectKHR-objectHandle-05069",
          "text": "<code>objectHandle</code> <strong class=\"purple\">must</strong> be a valid Vulkan handle of the type associated with <code>objectType</code> as defined in the <a href=\"#debugging-object-types\">VkObjectType and Vulkan Handle Relationship</a> table",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRefreshObjectKHR-objectType-05070",
          "text": "<code>objectType</code> <strong class=\"purple\">must</strong> not be <code>VK_OBJECT_TYPE_UNKNOWN</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRefreshObjectKHR-objectType-parameter",
          "text": "<code>objectType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkObjectType\">VkObjectType</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRefreshObjectKHR-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineInputAssemblyStateCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineInputAssemblyStateCreateInfo-topology-06252",
          "text": "If <code>topology</code> is <code>VK_PRIMITIVE_TOPOLOGY_POINT_LIST</code>, <code>VK_PRIMITIVE_TOPOLOGY_LINE_LIST</code>, <code>VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST</code>, <code>VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY</code>, or <code>VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY</code>, <code>primitiveRestartEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineInputAssemblyStateCreateInfo-topology-06253",
          "text": "If <code>topology</code> is <code>VK_PRIMITIVE_TOPOLOGY_PATCH_LIST</code>, <code>primitiveRestartEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineInputAssemblyStateCreateInfo-topology-00429",
          "text": "If the <a href=\"#features-geometryShader\"><code>geometryShader</code></a> feature is not enabled, <code>topology</code> <strong class=\"purple\">must</strong> not be any of <code>VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY</code>, <code>VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY</code>, <code>VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY</code> or <code>VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineInputAssemblyStateCreateInfo-topology-00430",
          "text": "If the <a href=\"#features-tessellationShader\"><code>tessellationShader</code></a> feature is not enabled, <code>topology</code> <strong class=\"purple\">must</strong> not be <code>VK_PRIMITIVE_TOPOLOGY_PATCH_LIST</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineInputAssemblyStateCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineInputAssemblyStateCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineInputAssemblyStateCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineInputAssemblyStateCreateInfo-topology-parameter",
          "text": "<code>topology</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPrimitiveTopology\">VkPrimitiveTopology</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetPrimitiveRestartEnable": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetPrimitiveRestartEnable-None-08970",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState2\"><code>extendedDynamicState2</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetPrimitiveRestartEnable-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetPrimitiveRestartEnable-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetPrimitiveRestartEnable-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetPrimitiveTopology": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetPrimitiveTopology-None-08971",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState\"><code>extendedDynamicState</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetPrimitiveTopology-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetPrimitiveTopology-primitiveTopology-parameter",
          "text": "<code>primitiveTopology</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPrimitiveTopology\">VkPrimitiveTopology</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetPrimitiveTopology-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetPrimitiveTopology-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdBindIndexBuffer": {
      "core": [
        {
          "vuid": "VUID-vkCmdBindIndexBuffer-offset-08782",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be less than the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindIndexBuffer-offset-08783",
          "text": "The sum of <code>offset</code> and the base address of the range of <code>VkDeviceMemory</code> object that is backing <code>buffer</code>, <strong class=\"purple\">must</strong> be a multiple of the size of the type indicated by <code>indexType</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindIndexBuffer-buffer-08784",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_BUFFER_USAGE_INDEX_BUFFER_BIT</code> flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindIndexBuffer-buffer-08785",
          "text": "If <code>buffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindIndexBuffer-indexType-08787",
          "text": "If <code>indexType</code> is <code>VK_INDEX_TYPE_UINT8_EXT</code>, the <a href=\"#features-indexTypeUint8\"><code>indexTypeUint8</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindIndexBuffer-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindIndexBuffer-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindIndexBuffer-indexType-parameter",
          "text": "<code>indexType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkIndexType\">VkIndexType</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindIndexBuffer-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindIndexBuffer-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindIndexBuffer-commonparent",
          "text": "Both of <code>buffer</code>, and <code>commandBuffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdDraw": {
      "core": [
        {
          "vuid": "VUID-vkCmdDraw-magFilter-04553",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>magFilter</code> or <code>minFilter</code> equal to <code>VK_FILTER_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-mipmapMode-04770",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>mipmapMode</code> equal to <code>VK_SAMPLER_MIPMAP_MODE_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-aspectMask-06478",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <a href=\"#textures-depth-compare-operation\">depth comparison</a>, the image view <strong class=\"purple\">must</strong> have been created with an <code>aspectMask</code> that contains <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-02691",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using atomic operations as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07888",
          "text": "If a <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> descriptor is accessed using atomic operations as a result of this command, then the storage texel buffer&#8217;s <a href=\"#resources-buffer-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-02692",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-02693",
          "text": "If the <a href=\"#VK_EXT_filter_cubic\">VK_EXT_filter_cubic</a> extension is not enabled and any <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, it <strong class=\"purple\">must</strong> not have a <a href=\"#VkImageViewType\">VkImageViewType</a> of <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-filterCubic-02694",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubic</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-filterCubicMinmax-02695",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> with a reduction mode of either <code>VK_SAMPLER_REDUCTION_MODE_MIN</code> or <code>VK_SAMPLER_REDUCTION_MODE_MAX</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering together with minmax filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubicMinmax</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-08600",
          "text": "For each set <em>n</em> that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a descriptor set <strong class=\"purple\">must</strong> have been bound to <em>n</em> at the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for set <em>n</em>, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-08601",
          "text": "For each push constant that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a push constant value <strong class=\"purple\">must</strong> have been set for the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for push constants, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-08114",
          "text": "Descriptors in each bound descriptor set, specified via     <a href=\"#vkCmdBindDescriptorSets\">vkCmdBindDescriptorSets</a>, <strong class=\"purple\">must</strong> be valid as described by     <a href=\"#descriptor-validity\">descriptor validity</a> if they are statically used     by <a href=\"#shaders-binding\">a bound shader</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-08606",
          "text": "A     valid pipeline <strong class=\"purple\">must</strong> be bound to the pipeline bind point used by this     command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-08608",
          "text": "There     <strong class=\"purple\">must</strong> not have been any calls to dynamic state setting commands for any     state not specified as dynamic in the <a href=\"#VkPipeline\">VkPipeline</a> object bound to     the pipeline bind point used by this command, since that pipeline was     bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-08609",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used to sample from any <a href=\"#VkImage\">VkImage</a> with a <a href=\"#VkImageView\">VkImageView</a> of the type <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, <code>VK_IMAGE_VIEW_TYPE_1D_ARRAY</code>, <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code> or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-08610",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions with <code>ImplicitLod</code>, <code>Dref</code> or <code>Proj</code> in their name, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-08611",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions that includes a LOD bias or any offset values, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-uniformBuffers-06935",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a uniform buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-storageBuffers-06936",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a storage buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-commandBuffer-02707",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource accessed by <a href=\"#shaders-binding\">bound shaders</a> <strong class=\"purple\">must</strong> not be a protected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-06550",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> only be used with <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-ConstOffset-06551",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> not use the <code>ConstOffset</code> and <code>Offset</code> operands",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-viewType-07752",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the image view&#8217;s <code>viewType</code> <strong class=\"purple\">must</strong> match the <code>Dim</code> operand of the <code>OpTypeImage</code> as described in <a href=\"#textures-operation-validation\">Instruction/Sampler/Image View Validation</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-format-07753",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the <a href=\"#formats-numericformat\">numeric type</a> of the image view&#8217;s <code>format</code> and the <code>Sampled</code> <code>Type</code> operand of the <code>OpTypeImage</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-OpImageWrite-08795",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the image view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-OpImageWrite-04469",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the buffer view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-SampledType-04470",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-SampledType-04471",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-SampledType-04472",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-SampledType-04473",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-sparseImageInt64Atomics-04474",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkImage\">VkImage</a> objects created with the <code>VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-sparseImageInt64Atomics-04475",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkBuffer\">VkBuffer</a> objects created with the <code>VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07288",
          "text": "Any shader invocation executed by this command <strong class=\"purple\">must</strong> <a href=\"#shaders-termination\">terminate</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-renderPass-02684",
          "text": "The current render pass <strong class=\"purple\">must</strong> be <a href=\"#renderpass-compatibility\">compatible</a> with the <code>renderPass</code> member of the <code>VkGraphicsPipelineCreateInfo</code> structure specified when creating the <code>VkPipeline</code> bound to <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-subpass-02685",
          "text": "The subpass index of the current render pass <strong class=\"purple\">must</strong> be equal to the <code>subpass</code> member of the <code>VkGraphicsPipelineCreateInfo</code> structure specified when creating the <code>VkPipeline</code> bound to <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07748",
          "text": "If any shader statically accesses an input attachment, a valid descriptor <strong class=\"purple\">must</strong> be bound to the pipeline via a descriptor set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-OpTypeImage-07468",
          "text": "If any shader executed by this pipeline accesses an <code>OpTypeImage</code> variable with a <code>Dim</code> operand of <code>SubpassData</code>, it <strong class=\"purple\">must</strong> be decorated with an <code>InputAttachmentIndex</code> that corresponds to a valid input attachment in the current subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07469",
          "text": "Input attachment views accessed in a subpass <strong class=\"purple\">must</strong> be created with the same <a href=\"#VkFormat\">VkFormat</a> as the corresponding subpass definition, and be created with a <a href=\"#VkImageView\">VkImageView</a> that is compatible with the attachment referenced by the subpass' <code>pInputAttachments</code>[<code>InputAttachmentIndex</code>] in the currently bound <a href=\"#VkFramebuffer\">VkFramebuffer</a> as specified by <a href=\"#compatibility-inputattachment\">Fragment Input Attachment Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-06537",
          "text": "Memory backing image subresources used as attachments in the current render pass <strong class=\"purple\">must</strong> not be written in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-09000",
          "text": "If a color attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-09001",
          "text": "If a depth attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-09002",
          "text": "If a stencil attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-06539",
          "text": "If any previously recorded command in the current subpass accessed an image subresource used as an attachment in this subpass in any way other than as an attachment, this command <strong class=\"purple\">must</strong> not write to that image subresource as an attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-06886",
          "text": "If the current render pass instance uses a depth/stencil attachment with a read-only layout for the depth aspect, <a href=\"#fragops-depth-write\">depth writes</a> <strong class=\"purple\">must</strong> be disabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-06887",
          "text": "If the current render pass instance uses a depth/stencil attachment with a read-only layout for the stencil aspect, both front and back <code>writeMask</code> are not zero, and stencil test is enabled, <a href=\"#fragops-stencil\">all stencil ops</a> <strong class=\"purple\">must</strong> be <code>VK_STENCIL_OP_KEEP</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07831",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VIEWPORT</code> dynamic state enabled then <a href=\"#vkCmdSetViewport\">vkCmdSetViewport</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07832",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SCISSOR</code> dynamic state enabled then <a href=\"#vkCmdSetScissor\">vkCmdSetScissor</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07833",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_LINE_WIDTH</code> dynamic state enabled then <a href=\"#vkCmdSetLineWidth\">vkCmdSetLineWidth</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07834",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BIAS</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBias\">vkCmdSetDepthBias</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07835",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_BLEND_CONSTANTS</code> dynamic state enabled then <a href=\"#vkCmdSetBlendConstants\">vkCmdSetBlendConstants</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07836",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS</code> dynamic state enabled, and if the current <code>depthBoundsTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetDepthBounds\">vkCmdSetDepthBounds</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07837",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilCompareMask\">vkCmdSetStencilCompareMask</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07838",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_WRITE_MASK</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilWriteMask\">vkCmdSetStencilWriteMask</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07839",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_REFERENCE</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilReference\">vkCmdSetStencilReference</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-maxMultiviewInstanceIndex-02688",
          "text": "If the draw is recorded in a render pass instance with multiview enabled, the maximum instance index <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceMultiviewProperties\">VkPhysicalDeviceMultiviewProperties</a>::<code>maxMultiviewInstanceIndex</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-sampleLocationsEnable-02689",
          "text": "If the bound graphics pipeline was created with <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a>::<code>sampleLocationsEnable</code> set to <code>VK_TRUE</code> and the current subpass has a depth/stencil attachment, then that attachment <strong class=\"purple\">must</strong> have been created with the <code>VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-06666",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetSampleLocationsEXT\">vkCmdSetSampleLocationsEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07840",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_CULL_MODE</code> dynamic state enabled then <a href=\"#vkCmdSetCullModeEXT\">vkCmdSetCullModeEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07841",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_FRONT_FACE</code> dynamic state enabled then <a href=\"#vkCmdSetFrontFaceEXT\">vkCmdSetFrontFaceEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07843",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthTestEnableEXT\">vkCmdSetDepthTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07844",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthWriteEnableEXT\">vkCmdSetDepthWriteEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07845",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_COMPARE_OP</code> dynamic state enabled then <a href=\"#vkCmdSetDepthCompareOpEXT\">vkCmdSetDepthCompareOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07846",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBoundsTestEnableEXT\">vkCmdSetDepthBoundsTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07847",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetStencilTestEnableEXT\">vkCmdSetStencilTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07848",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_OP</code> dynamic state enabled then <a href=\"#vkCmdSetStencilOpEXT\">vkCmdSetStencilOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-viewportCount-03417",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, but not the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> dynamic state enabled, then <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>VkPipelineViewportStateCreateInfo</code>::<code>scissorCount</code> of the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-scissorCount-03418",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> dynamic state enabled, but not the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, then <a href=\"#vkCmdSetScissorWithCountEXT\">vkCmdSetScissorWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>scissorCount</code> parameter of <code>vkCmdSetScissorWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>VkPipelineViewportStateCreateInfo</code>::<code>viewportCount</code> of the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-viewportCount-03419",
          "text": "If the bound graphics pipeline state was created with both the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> and <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic states enabled then both <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> and <a href=\"#vkCmdSetScissorWithCountEXT\">vkCmdSetScissorWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>scissorCount</code> parameter of <code>vkCmdSetScissorWithCountEXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-04876",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetRasterizerDiscardEnableEXT\">vkCmdSetRasterizerDiscardEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-04877",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBiasEnableEXT\">vkCmdSetDepthBiasEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-logicOp-04878",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_LOGIC_OP_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetLogicOpEXT\">vkCmdSetLogicOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command and the <code>logicOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkLogicOp\">VkLogicOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-primitiveFragmentShadingRateWithMultipleViewports-04552",
          "text": "If the <a href=\"#limits-primitiveFragmentShadingRateWithMultipleViewports\"><code>primitiveFragmentShadingRateWithMultipleViewports</code></a> limit is not supported, the bound graphics pipeline was created with the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, and any of the shader stages of the bound graphics pipeline write to the <code>PrimitiveShadingRateKHR</code> built-in, then <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-blendEnable-04727",
          "text": "If rasterization is not disabled in the bound graphics pipeline, then for each color attachment in the subpass, if the corresponding image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> do not contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT</code>, then the <code>blendEnable</code> member of the corresponding element of the <code>pAttachments</code> member of <code>pColorBlendState</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-multisampledRenderToSingleSampled-07284",
          "text": "If rasterization is not disabled in the bound graphics pipeline,<div class=\"paragraph\">\n<p>then <code>rasterizationSamples</code> for the currently bound graphics pipeline\n<strong class=\"purple\">must</strong> be the same as the current subpass color and/or depth/stencil\nattachments</p>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-maxFragmentDualSrcAttachments-09239",
          "text": "If <a href=\"#framebuffer-blending\">blending</a> is enabled for any attachment where either the source or destination blend factors for that attachment <a href=\"#framebuffer-dsb\">use the secondary color input</a>, the maximum value of <code>Location</code> for any output attachment <a href=\"#shaders-staticuse\">statically used</a> in the <code>Fragment</code> <code>Execution</code> <code>Model</code> executed by this command <strong class=\"purple\">must</strong> be less than <a href=\"#limits-maxFragmentDualSrcAttachments\"><code>maxFragmentDualSrcAttachments</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-commandBuffer-02712",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource written to by the <code>VkPipeline</code> object bound to the pipeline bind point used by this command <strong class=\"purple\">must</strong> not be an unprotected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-commandBuffer-02713",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, pipeline stages other than the framebuffer-space and compute stages in the <code>VkPipeline</code> object bound to the pipeline bind point used by this command <strong class=\"purple\">must</strong> not write to any resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-04007",
          "text": "All vertex input bindings accessed via vertex input variables declared in the vertex shader entry point&#8217;s interface <strong class=\"purple\">must</strong> have either valid or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> buffers bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-04008",
          "text": "If the <a href=\"#features-nullDescriptor\"><code>nullDescriptor</code></a> feature is not enabled, all vertex input bindings accessed via vertex input variables declared in the vertex shader entry point&#8217;s interface <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-02721",
          "text": "For a given vertex buffer binding, any attribute data fetched <strong class=\"purple\">must</strong> be entirely contained within the corresponding vertex buffer binding, as described in <a href=\"#fxvertex-input\">Vertex Input Description</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-07842",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code> dynamic state enabled then <a href=\"#vkCmdSetPrimitiveTopologyEXT\">vkCmdSetPrimitiveTopologyEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-dynamicPrimitiveTopologyUnrestricted-07500",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code> dynamic state enabled then the <code>primitiveTopology</code> parameter of <code>vkCmdSetPrimitiveTopologyEXT</code> <strong class=\"purple\">must</strong> be of the same <a href=\"#drawing-primitive-topology-class\">topology class</a> as the pipeline <a href=\"#VkPipelineInputAssemblyStateCreateInfo\">VkPipelineInputAssemblyStateCreateInfo</a>::<code>topology</code> state",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-04912",
          "text": "If the bound graphics pipeline was created with both the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> and <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT</code> dynamic states enabled, then <a href=\"#vkCmdSetVertexInputEXT\">vkCmdSetVertexInputEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-pStrides-04913",
          "text": "If the bound graphics pipeline was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT</code> dynamic state enabled, but without the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled, then <a href=\"#vkCmdBindVertexBuffers2EXT\">vkCmdBindVertexBuffers2EXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command, and the <code>pStrides</code> parameter of <a href=\"#vkCmdBindVertexBuffers2EXT\">vkCmdBindVertexBuffers2EXT</a> <strong class=\"purple\">must</strong> not be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-04914",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetVertexInputEXT\">vkCmdSetVertexInputEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-Input-07939",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then all variables with the <code>Input</code> storage class decorated with <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> contain a location in <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>location</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-Input-08734",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then the numeric type associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be the same as <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-format-08936",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> has a 64-bit component, then the scalar width associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be 64-bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-format-08937",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and the scalar width associated with a <code>Location</code> decorated <code>Input</code> variable in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> is 64-bit, then the corresponding <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> <strong class=\"purple\">must</strong> have a 64-bit component",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-09203",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> has a 64-bit component, then all <code>Input</code> variables at the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> not use components that are not present in the format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-04875",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetPatchControlPointsEXT\">vkCmdSetPatchControlPointsEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-None-04879",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetPrimitiveRestartEnableEXT\">vkCmdSetPrimitiveRestartEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDraw-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called inside of a render pass instance",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdDrawIndexed": {
      "core": [
        {
          "vuid": "VUID-vkCmdDrawIndexed-magFilter-04553",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>magFilter</code> or <code>minFilter</code> equal to <code>VK_FILTER_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-mipmapMode-04770",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>mipmapMode</code> equal to <code>VK_SAMPLER_MIPMAP_MODE_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-aspectMask-06478",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <a href=\"#textures-depth-compare-operation\">depth comparison</a>, the image view <strong class=\"purple\">must</strong> have been created with an <code>aspectMask</code> that contains <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-02691",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using atomic operations as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07888",
          "text": "If a <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> descriptor is accessed using atomic operations as a result of this command, then the storage texel buffer&#8217;s <a href=\"#resources-buffer-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-02692",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-02693",
          "text": "If the <a href=\"#VK_EXT_filter_cubic\">VK_EXT_filter_cubic</a> extension is not enabled and any <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, it <strong class=\"purple\">must</strong> not have a <a href=\"#VkImageViewType\">VkImageViewType</a> of <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-filterCubic-02694",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubic</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-filterCubicMinmax-02695",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> with a reduction mode of either <code>VK_SAMPLER_REDUCTION_MODE_MIN</code> or <code>VK_SAMPLER_REDUCTION_MODE_MAX</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering together with minmax filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubicMinmax</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-08600",
          "text": "For each set <em>n</em> that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a descriptor set <strong class=\"purple\">must</strong> have been bound to <em>n</em> at the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for set <em>n</em>, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-08601",
          "text": "For each push constant that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a push constant value <strong class=\"purple\">must</strong> have been set for the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for push constants, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-08114",
          "text": "Descriptors in each bound descriptor set, specified via     <a href=\"#vkCmdBindDescriptorSets\">vkCmdBindDescriptorSets</a>, <strong class=\"purple\">must</strong> be valid as described by     <a href=\"#descriptor-validity\">descriptor validity</a> if they are statically used     by <a href=\"#shaders-binding\">a bound shader</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-08606",
          "text": "A     valid pipeline <strong class=\"purple\">must</strong> be bound to the pipeline bind point used by this     command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-08608",
          "text": "There     <strong class=\"purple\">must</strong> not have been any calls to dynamic state setting commands for any     state not specified as dynamic in the <a href=\"#VkPipeline\">VkPipeline</a> object bound to     the pipeline bind point used by this command, since that pipeline was     bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-08609",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used to sample from any <a href=\"#VkImage\">VkImage</a> with a <a href=\"#VkImageView\">VkImageView</a> of the type <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, <code>VK_IMAGE_VIEW_TYPE_1D_ARRAY</code>, <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code> or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-08610",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions with <code>ImplicitLod</code>, <code>Dref</code> or <code>Proj</code> in their name, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-08611",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions that includes a LOD bias or any offset values, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-uniformBuffers-06935",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a uniform buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-storageBuffers-06936",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a storage buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-commandBuffer-02707",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource accessed by <a href=\"#shaders-binding\">bound shaders</a> <strong class=\"purple\">must</strong> not be a protected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-06550",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> only be used with <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-ConstOffset-06551",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> not use the <code>ConstOffset</code> and <code>Offset</code> operands",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-viewType-07752",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the image view&#8217;s <code>viewType</code> <strong class=\"purple\">must</strong> match the <code>Dim</code> operand of the <code>OpTypeImage</code> as described in <a href=\"#textures-operation-validation\">Instruction/Sampler/Image View Validation</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-format-07753",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the <a href=\"#formats-numericformat\">numeric type</a> of the image view&#8217;s <code>format</code> and the <code>Sampled</code> <code>Type</code> operand of the <code>OpTypeImage</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-OpImageWrite-08795",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the image view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-OpImageWrite-04469",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the buffer view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-SampledType-04470",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-SampledType-04471",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-SampledType-04472",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-SampledType-04473",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-sparseImageInt64Atomics-04474",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkImage\">VkImage</a> objects created with the <code>VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-sparseImageInt64Atomics-04475",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkBuffer\">VkBuffer</a> objects created with the <code>VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07288",
          "text": "Any shader invocation executed by this command <strong class=\"purple\">must</strong> <a href=\"#shaders-termination\">terminate</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-renderPass-02684",
          "text": "The current render pass <strong class=\"purple\">must</strong> be <a href=\"#renderpass-compatibility\">compatible</a> with the <code>renderPass</code> member of the <code>VkGraphicsPipelineCreateInfo</code> structure specified when creating the <code>VkPipeline</code> bound to <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-subpass-02685",
          "text": "The subpass index of the current render pass <strong class=\"purple\">must</strong> be equal to the <code>subpass</code> member of the <code>VkGraphicsPipelineCreateInfo</code> structure specified when creating the <code>VkPipeline</code> bound to <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07748",
          "text": "If any shader statically accesses an input attachment, a valid descriptor <strong class=\"purple\">must</strong> be bound to the pipeline via a descriptor set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-OpTypeImage-07468",
          "text": "If any shader executed by this pipeline accesses an <code>OpTypeImage</code> variable with a <code>Dim</code> operand of <code>SubpassData</code>, it <strong class=\"purple\">must</strong> be decorated with an <code>InputAttachmentIndex</code> that corresponds to a valid input attachment in the current subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07469",
          "text": "Input attachment views accessed in a subpass <strong class=\"purple\">must</strong> be created with the same <a href=\"#VkFormat\">VkFormat</a> as the corresponding subpass definition, and be created with a <a href=\"#VkImageView\">VkImageView</a> that is compatible with the attachment referenced by the subpass' <code>pInputAttachments</code>[<code>InputAttachmentIndex</code>] in the currently bound <a href=\"#VkFramebuffer\">VkFramebuffer</a> as specified by <a href=\"#compatibility-inputattachment\">Fragment Input Attachment Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-06537",
          "text": "Memory backing image subresources used as attachments in the current render pass <strong class=\"purple\">must</strong> not be written in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-09000",
          "text": "If a color attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-09001",
          "text": "If a depth attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-09002",
          "text": "If a stencil attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-06539",
          "text": "If any previously recorded command in the current subpass accessed an image subresource used as an attachment in this subpass in any way other than as an attachment, this command <strong class=\"purple\">must</strong> not write to that image subresource as an attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-06886",
          "text": "If the current render pass instance uses a depth/stencil attachment with a read-only layout for the depth aspect, <a href=\"#fragops-depth-write\">depth writes</a> <strong class=\"purple\">must</strong> be disabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-06887",
          "text": "If the current render pass instance uses a depth/stencil attachment with a read-only layout for the stencil aspect, both front and back <code>writeMask</code> are not zero, and stencil test is enabled, <a href=\"#fragops-stencil\">all stencil ops</a> <strong class=\"purple\">must</strong> be <code>VK_STENCIL_OP_KEEP</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07831",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VIEWPORT</code> dynamic state enabled then <a href=\"#vkCmdSetViewport\">vkCmdSetViewport</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07832",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SCISSOR</code> dynamic state enabled then <a href=\"#vkCmdSetScissor\">vkCmdSetScissor</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07833",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_LINE_WIDTH</code> dynamic state enabled then <a href=\"#vkCmdSetLineWidth\">vkCmdSetLineWidth</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07834",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BIAS</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBias\">vkCmdSetDepthBias</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07835",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_BLEND_CONSTANTS</code> dynamic state enabled then <a href=\"#vkCmdSetBlendConstants\">vkCmdSetBlendConstants</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07836",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS</code> dynamic state enabled, and if the current <code>depthBoundsTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetDepthBounds\">vkCmdSetDepthBounds</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07837",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilCompareMask\">vkCmdSetStencilCompareMask</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07838",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_WRITE_MASK</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilWriteMask\">vkCmdSetStencilWriteMask</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07839",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_REFERENCE</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilReference\">vkCmdSetStencilReference</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-maxMultiviewInstanceIndex-02688",
          "text": "If the draw is recorded in a render pass instance with multiview enabled, the maximum instance index <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceMultiviewProperties\">VkPhysicalDeviceMultiviewProperties</a>::<code>maxMultiviewInstanceIndex</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-sampleLocationsEnable-02689",
          "text": "If the bound graphics pipeline was created with <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a>::<code>sampleLocationsEnable</code> set to <code>VK_TRUE</code> and the current subpass has a depth/stencil attachment, then that attachment <strong class=\"purple\">must</strong> have been created with the <code>VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-06666",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetSampleLocationsEXT\">vkCmdSetSampleLocationsEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07840",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_CULL_MODE</code> dynamic state enabled then <a href=\"#vkCmdSetCullModeEXT\">vkCmdSetCullModeEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07841",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_FRONT_FACE</code> dynamic state enabled then <a href=\"#vkCmdSetFrontFaceEXT\">vkCmdSetFrontFaceEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07843",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthTestEnableEXT\">vkCmdSetDepthTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07844",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthWriteEnableEXT\">vkCmdSetDepthWriteEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07845",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_COMPARE_OP</code> dynamic state enabled then <a href=\"#vkCmdSetDepthCompareOpEXT\">vkCmdSetDepthCompareOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07846",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBoundsTestEnableEXT\">vkCmdSetDepthBoundsTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07847",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetStencilTestEnableEXT\">vkCmdSetStencilTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07848",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_OP</code> dynamic state enabled then <a href=\"#vkCmdSetStencilOpEXT\">vkCmdSetStencilOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-viewportCount-03417",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, but not the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> dynamic state enabled, then <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>VkPipelineViewportStateCreateInfo</code>::<code>scissorCount</code> of the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-scissorCount-03418",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> dynamic state enabled, but not the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, then <a href=\"#vkCmdSetScissorWithCountEXT\">vkCmdSetScissorWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>scissorCount</code> parameter of <code>vkCmdSetScissorWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>VkPipelineViewportStateCreateInfo</code>::<code>viewportCount</code> of the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-viewportCount-03419",
          "text": "If the bound graphics pipeline state was created with both the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> and <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic states enabled then both <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> and <a href=\"#vkCmdSetScissorWithCountEXT\">vkCmdSetScissorWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>scissorCount</code> parameter of <code>vkCmdSetScissorWithCountEXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-04876",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetRasterizerDiscardEnableEXT\">vkCmdSetRasterizerDiscardEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-04877",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBiasEnableEXT\">vkCmdSetDepthBiasEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-logicOp-04878",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_LOGIC_OP_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetLogicOpEXT\">vkCmdSetLogicOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command and the <code>logicOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkLogicOp\">VkLogicOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-primitiveFragmentShadingRateWithMultipleViewports-04552",
          "text": "If the <a href=\"#limits-primitiveFragmentShadingRateWithMultipleViewports\"><code>primitiveFragmentShadingRateWithMultipleViewports</code></a> limit is not supported, the bound graphics pipeline was created with the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, and any of the shader stages of the bound graphics pipeline write to the <code>PrimitiveShadingRateKHR</code> built-in, then <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-blendEnable-04727",
          "text": "If rasterization is not disabled in the bound graphics pipeline, then for each color attachment in the subpass, if the corresponding image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> do not contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT</code>, then the <code>blendEnable</code> member of the corresponding element of the <code>pAttachments</code> member of <code>pColorBlendState</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-multisampledRenderToSingleSampled-07284",
          "text": "If rasterization is not disabled in the bound graphics pipeline,<div class=\"paragraph\">\n<p>then <code>rasterizationSamples</code> for the currently bound graphics pipeline\n<strong class=\"purple\">must</strong> be the same as the current subpass color and/or depth/stencil\nattachments</p>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-maxFragmentDualSrcAttachments-09239",
          "text": "If <a href=\"#framebuffer-blending\">blending</a> is enabled for any attachment where either the source or destination blend factors for that attachment <a href=\"#framebuffer-dsb\">use the secondary color input</a>, the maximum value of <code>Location</code> for any output attachment <a href=\"#shaders-staticuse\">statically used</a> in the <code>Fragment</code> <code>Execution</code> <code>Model</code> executed by this command <strong class=\"purple\">must</strong> be less than <a href=\"#limits-maxFragmentDualSrcAttachments\"><code>maxFragmentDualSrcAttachments</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-commandBuffer-02712",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource written to by the <code>VkPipeline</code> object bound to the pipeline bind point used by this command <strong class=\"purple\">must</strong> not be an unprotected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-commandBuffer-02713",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, pipeline stages other than the framebuffer-space and compute stages in the <code>VkPipeline</code> object bound to the pipeline bind point used by this command <strong class=\"purple\">must</strong> not write to any resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-04007",
          "text": "All vertex input bindings accessed via vertex input variables declared in the vertex shader entry point&#8217;s interface <strong class=\"purple\">must</strong> have either valid or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> buffers bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-04008",
          "text": "If the <a href=\"#features-nullDescriptor\"><code>nullDescriptor</code></a> feature is not enabled, all vertex input bindings accessed via vertex input variables declared in the vertex shader entry point&#8217;s interface <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-02721",
          "text": "For a given vertex buffer binding, any attribute data fetched <strong class=\"purple\">must</strong> be entirely contained within the corresponding vertex buffer binding, as described in <a href=\"#fxvertex-input\">Vertex Input Description</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07842",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code> dynamic state enabled then <a href=\"#vkCmdSetPrimitiveTopologyEXT\">vkCmdSetPrimitiveTopologyEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-dynamicPrimitiveTopologyUnrestricted-07500",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code> dynamic state enabled then the <code>primitiveTopology</code> parameter of <code>vkCmdSetPrimitiveTopologyEXT</code> <strong class=\"purple\">must</strong> be of the same <a href=\"#drawing-primitive-topology-class\">topology class</a> as the pipeline <a href=\"#VkPipelineInputAssemblyStateCreateInfo\">VkPipelineInputAssemblyStateCreateInfo</a>::<code>topology</code> state",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-04912",
          "text": "If the bound graphics pipeline was created with both the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> and <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT</code> dynamic states enabled, then <a href=\"#vkCmdSetVertexInputEXT\">vkCmdSetVertexInputEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-pStrides-04913",
          "text": "If the bound graphics pipeline was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT</code> dynamic state enabled, but without the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled, then <a href=\"#vkCmdBindVertexBuffers2EXT\">vkCmdBindVertexBuffers2EXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command, and the <code>pStrides</code> parameter of <a href=\"#vkCmdBindVertexBuffers2EXT\">vkCmdBindVertexBuffers2EXT</a> <strong class=\"purple\">must</strong> not be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-04914",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetVertexInputEXT\">vkCmdSetVertexInputEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-Input-07939",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then all variables with the <code>Input</code> storage class decorated with <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> contain a location in <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>location</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-Input-08734",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then the numeric type associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be the same as <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-format-08936",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> has a 64-bit component, then the scalar width associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be 64-bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-format-08937",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and the scalar width associated with a <code>Location</code> decorated <code>Input</code> variable in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> is 64-bit, then the corresponding <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> <strong class=\"purple\">must</strong> have a 64-bit component",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-09203",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> has a 64-bit component, then all <code>Input</code> variables at the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> not use components that are not present in the format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-04875",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetPatchControlPointsEXT\">vkCmdSetPatchControlPointsEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-04879",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetPrimitiveRestartEnableEXT\">vkCmdSetPrimitiveRestartEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-None-07312",
          "text": "An index buffer <strong class=\"purple\">must</strong> be bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-robustBufferAccess2-07825",
          "text": "If <a href=\"#features-robustBufferAccess2\"><code>robustBufferAccess2</code></a> is not enabled, <span class=\"eq\">(<code>indexSize</code> × (<code>firstIndex</code> +  <code>indexCount</code>) +  <code>offset</code>)</span> <strong class=\"purple\">must</strong> be less than or equal to the size of the bound index buffer, with <code>indexSize</code> being based on the type specified by <code>indexType</code>, where the index buffer, <code>indexType</code>, and <code>offset</code> are specified via <code>vkCmdBindIndexBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-robustBufferAccess2-08798",
          "text": "If <a href=\"#features-robustBufferAccess2\"><code>robustBufferAccess2</code></a> is not enabled, <span class=\"eq\">(<code>indexSize</code> × (<code>firstIndex</code> +  <code>indexCount</code>) +  <code>offset</code>)</span> <strong class=\"purple\">must</strong> be less than or equal to the size of the bound index buffer, with <code>indexSize</code> being based on the type specified by <code>indexType</code>, where the index buffer, <code>indexType</code>, and <code>offset</code> are specified via <code>vkCmdBindIndexBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexed-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called inside of a render pass instance",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdDrawIndirect": {
      "core": [
        {
          "vuid": "VUID-vkCmdDrawIndirect-magFilter-04553",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>magFilter</code> or <code>minFilter</code> equal to <code>VK_FILTER_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-mipmapMode-04770",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>mipmapMode</code> equal to <code>VK_SAMPLER_MIPMAP_MODE_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-aspectMask-06478",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <a href=\"#textures-depth-compare-operation\">depth comparison</a>, the image view <strong class=\"purple\">must</strong> have been created with an <code>aspectMask</code> that contains <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-02691",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using atomic operations as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07888",
          "text": "If a <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> descriptor is accessed using atomic operations as a result of this command, then the storage texel buffer&#8217;s <a href=\"#resources-buffer-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-02692",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-02693",
          "text": "If the <a href=\"#VK_EXT_filter_cubic\">VK_EXT_filter_cubic</a> extension is not enabled and any <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, it <strong class=\"purple\">must</strong> not have a <a href=\"#VkImageViewType\">VkImageViewType</a> of <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-filterCubic-02694",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubic</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-filterCubicMinmax-02695",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> with a reduction mode of either <code>VK_SAMPLER_REDUCTION_MODE_MIN</code> or <code>VK_SAMPLER_REDUCTION_MODE_MAX</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering together with minmax filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubicMinmax</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-08600",
          "text": "For each set <em>n</em> that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a descriptor set <strong class=\"purple\">must</strong> have been bound to <em>n</em> at the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for set <em>n</em>, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-08601",
          "text": "For each push constant that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a push constant value <strong class=\"purple\">must</strong> have been set for the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for push constants, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-08114",
          "text": "Descriptors in each bound descriptor set, specified via     <a href=\"#vkCmdBindDescriptorSets\">vkCmdBindDescriptorSets</a>, <strong class=\"purple\">must</strong> be valid as described by     <a href=\"#descriptor-validity\">descriptor validity</a> if they are statically used     by <a href=\"#shaders-binding\">a bound shader</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-08606",
          "text": "A     valid pipeline <strong class=\"purple\">must</strong> be bound to the pipeline bind point used by this     command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-08608",
          "text": "There     <strong class=\"purple\">must</strong> not have been any calls to dynamic state setting commands for any     state not specified as dynamic in the <a href=\"#VkPipeline\">VkPipeline</a> object bound to     the pipeline bind point used by this command, since that pipeline was     bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-08609",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used to sample from any <a href=\"#VkImage\">VkImage</a> with a <a href=\"#VkImageView\">VkImageView</a> of the type <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, <code>VK_IMAGE_VIEW_TYPE_1D_ARRAY</code>, <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code> or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-08610",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions with <code>ImplicitLod</code>, <code>Dref</code> or <code>Proj</code> in their name, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-08611",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions that includes a LOD bias or any offset values, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-uniformBuffers-06935",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a uniform buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-storageBuffers-06936",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a storage buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-commandBuffer-02707",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource accessed by <a href=\"#shaders-binding\">bound shaders</a> <strong class=\"purple\">must</strong> not be a protected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-06550",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> only be used with <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-ConstOffset-06551",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> not use the <code>ConstOffset</code> and <code>Offset</code> operands",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-viewType-07752",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the image view&#8217;s <code>viewType</code> <strong class=\"purple\">must</strong> match the <code>Dim</code> operand of the <code>OpTypeImage</code> as described in <a href=\"#textures-operation-validation\">Instruction/Sampler/Image View Validation</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-format-07753",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the <a href=\"#formats-numericformat\">numeric type</a> of the image view&#8217;s <code>format</code> and the <code>Sampled</code> <code>Type</code> operand of the <code>OpTypeImage</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-OpImageWrite-08795",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the image view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-OpImageWrite-04469",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the buffer view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-SampledType-04470",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-SampledType-04471",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-SampledType-04472",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-SampledType-04473",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-sparseImageInt64Atomics-04474",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkImage\">VkImage</a> objects created with the <code>VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-sparseImageInt64Atomics-04475",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkBuffer\">VkBuffer</a> objects created with the <code>VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07288",
          "text": "Any shader invocation executed by this command <strong class=\"purple\">must</strong> <a href=\"#shaders-termination\">terminate</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-renderPass-02684",
          "text": "The current render pass <strong class=\"purple\">must</strong> be <a href=\"#renderpass-compatibility\">compatible</a> with the <code>renderPass</code> member of the <code>VkGraphicsPipelineCreateInfo</code> structure specified when creating the <code>VkPipeline</code> bound to <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-subpass-02685",
          "text": "The subpass index of the current render pass <strong class=\"purple\">must</strong> be equal to the <code>subpass</code> member of the <code>VkGraphicsPipelineCreateInfo</code> structure specified when creating the <code>VkPipeline</code> bound to <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07748",
          "text": "If any shader statically accesses an input attachment, a valid descriptor <strong class=\"purple\">must</strong> be bound to the pipeline via a descriptor set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-OpTypeImage-07468",
          "text": "If any shader executed by this pipeline accesses an <code>OpTypeImage</code> variable with a <code>Dim</code> operand of <code>SubpassData</code>, it <strong class=\"purple\">must</strong> be decorated with an <code>InputAttachmentIndex</code> that corresponds to a valid input attachment in the current subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07469",
          "text": "Input attachment views accessed in a subpass <strong class=\"purple\">must</strong> be created with the same <a href=\"#VkFormat\">VkFormat</a> as the corresponding subpass definition, and be created with a <a href=\"#VkImageView\">VkImageView</a> that is compatible with the attachment referenced by the subpass' <code>pInputAttachments</code>[<code>InputAttachmentIndex</code>] in the currently bound <a href=\"#VkFramebuffer\">VkFramebuffer</a> as specified by <a href=\"#compatibility-inputattachment\">Fragment Input Attachment Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-06537",
          "text": "Memory backing image subresources used as attachments in the current render pass <strong class=\"purple\">must</strong> not be written in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-09000",
          "text": "If a color attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-09001",
          "text": "If a depth attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-09002",
          "text": "If a stencil attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-06539",
          "text": "If any previously recorded command in the current subpass accessed an image subresource used as an attachment in this subpass in any way other than as an attachment, this command <strong class=\"purple\">must</strong> not write to that image subresource as an attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-06886",
          "text": "If the current render pass instance uses a depth/stencil attachment with a read-only layout for the depth aspect, <a href=\"#fragops-depth-write\">depth writes</a> <strong class=\"purple\">must</strong> be disabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-06887",
          "text": "If the current render pass instance uses a depth/stencil attachment with a read-only layout for the stencil aspect, both front and back <code>writeMask</code> are not zero, and stencil test is enabled, <a href=\"#fragops-stencil\">all stencil ops</a> <strong class=\"purple\">must</strong> be <code>VK_STENCIL_OP_KEEP</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07831",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VIEWPORT</code> dynamic state enabled then <a href=\"#vkCmdSetViewport\">vkCmdSetViewport</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07832",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SCISSOR</code> dynamic state enabled then <a href=\"#vkCmdSetScissor\">vkCmdSetScissor</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07833",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_LINE_WIDTH</code> dynamic state enabled then <a href=\"#vkCmdSetLineWidth\">vkCmdSetLineWidth</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07834",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BIAS</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBias\">vkCmdSetDepthBias</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07835",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_BLEND_CONSTANTS</code> dynamic state enabled then <a href=\"#vkCmdSetBlendConstants\">vkCmdSetBlendConstants</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07836",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS</code> dynamic state enabled, and if the current <code>depthBoundsTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetDepthBounds\">vkCmdSetDepthBounds</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07837",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilCompareMask\">vkCmdSetStencilCompareMask</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07838",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_WRITE_MASK</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilWriteMask\">vkCmdSetStencilWriteMask</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07839",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_REFERENCE</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilReference\">vkCmdSetStencilReference</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-maxMultiviewInstanceIndex-02688",
          "text": "If the draw is recorded in a render pass instance with multiview enabled, the maximum instance index <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceMultiviewProperties\">VkPhysicalDeviceMultiviewProperties</a>::<code>maxMultiviewInstanceIndex</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-sampleLocationsEnable-02689",
          "text": "If the bound graphics pipeline was created with <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a>::<code>sampleLocationsEnable</code> set to <code>VK_TRUE</code> and the current subpass has a depth/stencil attachment, then that attachment <strong class=\"purple\">must</strong> have been created with the <code>VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-06666",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetSampleLocationsEXT\">vkCmdSetSampleLocationsEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07840",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_CULL_MODE</code> dynamic state enabled then <a href=\"#vkCmdSetCullModeEXT\">vkCmdSetCullModeEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07841",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_FRONT_FACE</code> dynamic state enabled then <a href=\"#vkCmdSetFrontFaceEXT\">vkCmdSetFrontFaceEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07843",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthTestEnableEXT\">vkCmdSetDepthTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07844",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthWriteEnableEXT\">vkCmdSetDepthWriteEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07845",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_COMPARE_OP</code> dynamic state enabled then <a href=\"#vkCmdSetDepthCompareOpEXT\">vkCmdSetDepthCompareOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07846",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBoundsTestEnableEXT\">vkCmdSetDepthBoundsTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07847",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetStencilTestEnableEXT\">vkCmdSetStencilTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07848",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_OP</code> dynamic state enabled then <a href=\"#vkCmdSetStencilOpEXT\">vkCmdSetStencilOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-viewportCount-03417",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, but not the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> dynamic state enabled, then <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>VkPipelineViewportStateCreateInfo</code>::<code>scissorCount</code> of the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-scissorCount-03418",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> dynamic state enabled, but not the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, then <a href=\"#vkCmdSetScissorWithCountEXT\">vkCmdSetScissorWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>scissorCount</code> parameter of <code>vkCmdSetScissorWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>VkPipelineViewportStateCreateInfo</code>::<code>viewportCount</code> of the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-viewportCount-03419",
          "text": "If the bound graphics pipeline state was created with both the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> and <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic states enabled then both <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> and <a href=\"#vkCmdSetScissorWithCountEXT\">vkCmdSetScissorWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>scissorCount</code> parameter of <code>vkCmdSetScissorWithCountEXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-04876",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetRasterizerDiscardEnableEXT\">vkCmdSetRasterizerDiscardEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-04877",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBiasEnableEXT\">vkCmdSetDepthBiasEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-logicOp-04878",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_LOGIC_OP_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetLogicOpEXT\">vkCmdSetLogicOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command and the <code>logicOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkLogicOp\">VkLogicOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-primitiveFragmentShadingRateWithMultipleViewports-04552",
          "text": "If the <a href=\"#limits-primitiveFragmentShadingRateWithMultipleViewports\"><code>primitiveFragmentShadingRateWithMultipleViewports</code></a> limit is not supported, the bound graphics pipeline was created with the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, and any of the shader stages of the bound graphics pipeline write to the <code>PrimitiveShadingRateKHR</code> built-in, then <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-blendEnable-04727",
          "text": "If rasterization is not disabled in the bound graphics pipeline, then for each color attachment in the subpass, if the corresponding image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> do not contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT</code>, then the <code>blendEnable</code> member of the corresponding element of the <code>pAttachments</code> member of <code>pColorBlendState</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-multisampledRenderToSingleSampled-07284",
          "text": "If rasterization is not disabled in the bound graphics pipeline,<div class=\"paragraph\">\n<p>then <code>rasterizationSamples</code> for the currently bound graphics pipeline\n<strong class=\"purple\">must</strong> be the same as the current subpass color and/or depth/stencil\nattachments</p>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-maxFragmentDualSrcAttachments-09239",
          "text": "If <a href=\"#framebuffer-blending\">blending</a> is enabled for any attachment where either the source or destination blend factors for that attachment <a href=\"#framebuffer-dsb\">use the secondary color input</a>, the maximum value of <code>Location</code> for any output attachment <a href=\"#shaders-staticuse\">statically used</a> in the <code>Fragment</code> <code>Execution</code> <code>Model</code> executed by this command <strong class=\"purple\">must</strong> be less than <a href=\"#limits-maxFragmentDualSrcAttachments\"><code>maxFragmentDualSrcAttachments</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-04007",
          "text": "All vertex input bindings accessed via vertex input variables declared in the vertex shader entry point&#8217;s interface <strong class=\"purple\">must</strong> have either valid or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> buffers bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-04008",
          "text": "If the <a href=\"#features-nullDescriptor\"><code>nullDescriptor</code></a> feature is not enabled, all vertex input bindings accessed via vertex input variables declared in the vertex shader entry point&#8217;s interface <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-02721",
          "text": "For a given vertex buffer binding, any attribute data fetched <strong class=\"purple\">must</strong> be entirely contained within the corresponding vertex buffer binding, as described in <a href=\"#fxvertex-input\">Vertex Input Description</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-07842",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code> dynamic state enabled then <a href=\"#vkCmdSetPrimitiveTopologyEXT\">vkCmdSetPrimitiveTopologyEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-dynamicPrimitiveTopologyUnrestricted-07500",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code> dynamic state enabled then the <code>primitiveTopology</code> parameter of <code>vkCmdSetPrimitiveTopologyEXT</code> <strong class=\"purple\">must</strong> be of the same <a href=\"#drawing-primitive-topology-class\">topology class</a> as the pipeline <a href=\"#VkPipelineInputAssemblyStateCreateInfo\">VkPipelineInputAssemblyStateCreateInfo</a>::<code>topology</code> state",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-04912",
          "text": "If the bound graphics pipeline was created with both the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> and <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT</code> dynamic states enabled, then <a href=\"#vkCmdSetVertexInputEXT\">vkCmdSetVertexInputEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-pStrides-04913",
          "text": "If the bound graphics pipeline was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT</code> dynamic state enabled, but without the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled, then <a href=\"#vkCmdBindVertexBuffers2EXT\">vkCmdBindVertexBuffers2EXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command, and the <code>pStrides</code> parameter of <a href=\"#vkCmdBindVertexBuffers2EXT\">vkCmdBindVertexBuffers2EXT</a> <strong class=\"purple\">must</strong> not be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-04914",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetVertexInputEXT\">vkCmdSetVertexInputEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-Input-07939",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then all variables with the <code>Input</code> storage class decorated with <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> contain a location in <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>location</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-Input-08734",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then the numeric type associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be the same as <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-format-08936",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> has a 64-bit component, then the scalar width associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be 64-bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-format-08937",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and the scalar width associated with a <code>Location</code> decorated <code>Input</code> variable in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> is 64-bit, then the corresponding <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> <strong class=\"purple\">must</strong> have a 64-bit component",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-09203",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> has a 64-bit component, then all <code>Input</code> variables at the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> not use components that are not present in the format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-04875",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetPatchControlPointsEXT\">vkCmdSetPatchControlPointsEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-None-04879",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetPrimitiveRestartEnableEXT\">vkCmdSetPrimitiveRestartEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-buffer-02708",
          "text": "If <code>buffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-buffer-02709",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-offset-02710",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-commandBuffer-02711",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> not be a protected command buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-drawCount-02718",
          "text": "If the <a href=\"#features-multiDrawIndirect\"><code>multiDrawIndirect</code></a> feature is not enabled, <code>drawCount</code> <strong class=\"purple\">must</strong> be <code>0</code> or <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-drawCount-02719",
          "text": "<code>drawCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxDrawIndirectCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-drawCount-00476",
          "text": "If <code>drawCount</code> is greater than <code>1</code>, <code>stride</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code> and <strong class=\"purple\">must</strong> be greater than or equal to <code>sizeof</code>(<code>VkDrawIndirectCommand</code>)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-drawCount-00487",
          "text": "If <code>drawCount</code> is equal to <code>1</code>, <span class=\"eq\">(<code>offset</code> +  <code>sizeof</code>(<a href=\"#VkDrawIndirectCommand\">VkDrawIndirectCommand</a>))</span> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-drawCount-00488",
          "text": "If <code>drawCount</code> is greater than <code>1</code>, <span class=\"eq\">(<code>stride</code> × (<code>drawCount</code> - 1) +  <code>offset</code> +  <code>sizeof</code>(<a href=\"#VkDrawIndirectCommand\">VkDrawIndirectCommand</a>))</span> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called inside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirect-commonparent",
          "text": "Both of <code>buffer</code>, and <code>commandBuffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkDrawIndirectCommand": {
      "core": [
        {
          "vuid": "VUID-VkDrawIndirectCommand-None-00500",
          "text": "For a given vertex buffer binding, any attribute data fetched <strong class=\"purple\">must</strong> be entirely contained within the corresponding vertex buffer binding, as described in <a href=\"#fxvertex-input\">Vertex Input Description</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDrawIndirectCommand-firstInstance-00501",
          "text": "If the <a href=\"#features-drawIndirectFirstInstance\"><code>drawIndirectFirstInstance</code></a> feature is not enabled, <code>firstInstance</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdDrawIndirectCount": {
      "core": [
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-magFilter-04553",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>magFilter</code> or <code>minFilter</code> equal to <code>VK_FILTER_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-mipmapMode-04770",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>mipmapMode</code> equal to <code>VK_SAMPLER_MIPMAP_MODE_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-aspectMask-06478",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <a href=\"#textures-depth-compare-operation\">depth comparison</a>, the image view <strong class=\"purple\">must</strong> have been created with an <code>aspectMask</code> that contains <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-02691",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using atomic operations as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07888",
          "text": "If a <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> descriptor is accessed using atomic operations as a result of this command, then the storage texel buffer&#8217;s <a href=\"#resources-buffer-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-02692",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-02693",
          "text": "If the <a href=\"#VK_EXT_filter_cubic\">VK_EXT_filter_cubic</a> extension is not enabled and any <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, it <strong class=\"purple\">must</strong> not have a <a href=\"#VkImageViewType\">VkImageViewType</a> of <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-filterCubic-02694",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubic</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-filterCubicMinmax-02695",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> with a reduction mode of either <code>VK_SAMPLER_REDUCTION_MODE_MIN</code> or <code>VK_SAMPLER_REDUCTION_MODE_MAX</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering together with minmax filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubicMinmax</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-08600",
          "text": "For each set <em>n</em> that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a descriptor set <strong class=\"purple\">must</strong> have been bound to <em>n</em> at the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for set <em>n</em>, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-08601",
          "text": "For each push constant that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a push constant value <strong class=\"purple\">must</strong> have been set for the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for push constants, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-08114",
          "text": "Descriptors in each bound descriptor set, specified via     <a href=\"#vkCmdBindDescriptorSets\">vkCmdBindDescriptorSets</a>, <strong class=\"purple\">must</strong> be valid as described by     <a href=\"#descriptor-validity\">descriptor validity</a> if they are statically used     by <a href=\"#shaders-binding\">a bound shader</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-08606",
          "text": "A     valid pipeline <strong class=\"purple\">must</strong> be bound to the pipeline bind point used by this     command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-08608",
          "text": "There     <strong class=\"purple\">must</strong> not have been any calls to dynamic state setting commands for any     state not specified as dynamic in the <a href=\"#VkPipeline\">VkPipeline</a> object bound to     the pipeline bind point used by this command, since that pipeline was     bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-08609",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used to sample from any <a href=\"#VkImage\">VkImage</a> with a <a href=\"#VkImageView\">VkImageView</a> of the type <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, <code>VK_IMAGE_VIEW_TYPE_1D_ARRAY</code>, <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code> or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-08610",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions with <code>ImplicitLod</code>, <code>Dref</code> or <code>Proj</code> in their name, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-08611",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions that includes a LOD bias or any offset values, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-uniformBuffers-06935",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a uniform buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-storageBuffers-06936",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a storage buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-commandBuffer-02707",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource accessed by <a href=\"#shaders-binding\">bound shaders</a> <strong class=\"purple\">must</strong> not be a protected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-06550",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> only be used with <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-ConstOffset-06551",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> not use the <code>ConstOffset</code> and <code>Offset</code> operands",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-viewType-07752",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the image view&#8217;s <code>viewType</code> <strong class=\"purple\">must</strong> match the <code>Dim</code> operand of the <code>OpTypeImage</code> as described in <a href=\"#textures-operation-validation\">Instruction/Sampler/Image View Validation</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-format-07753",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the <a href=\"#formats-numericformat\">numeric type</a> of the image view&#8217;s <code>format</code> and the <code>Sampled</code> <code>Type</code> operand of the <code>OpTypeImage</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-OpImageWrite-08795",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the image view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-OpImageWrite-04469",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the buffer view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-SampledType-04470",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-SampledType-04471",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-SampledType-04472",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-SampledType-04473",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-sparseImageInt64Atomics-04474",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkImage\">VkImage</a> objects created with the <code>VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-sparseImageInt64Atomics-04475",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkBuffer\">VkBuffer</a> objects created with the <code>VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07288",
          "text": "Any shader invocation executed by this command <strong class=\"purple\">must</strong> <a href=\"#shaders-termination\">terminate</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-renderPass-02684",
          "text": "The current render pass <strong class=\"purple\">must</strong> be <a href=\"#renderpass-compatibility\">compatible</a> with the <code>renderPass</code> member of the <code>VkGraphicsPipelineCreateInfo</code> structure specified when creating the <code>VkPipeline</code> bound to <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-subpass-02685",
          "text": "The subpass index of the current render pass <strong class=\"purple\">must</strong> be equal to the <code>subpass</code> member of the <code>VkGraphicsPipelineCreateInfo</code> structure specified when creating the <code>VkPipeline</code> bound to <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07748",
          "text": "If any shader statically accesses an input attachment, a valid descriptor <strong class=\"purple\">must</strong> be bound to the pipeline via a descriptor set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-OpTypeImage-07468",
          "text": "If any shader executed by this pipeline accesses an <code>OpTypeImage</code> variable with a <code>Dim</code> operand of <code>SubpassData</code>, it <strong class=\"purple\">must</strong> be decorated with an <code>InputAttachmentIndex</code> that corresponds to a valid input attachment in the current subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07469",
          "text": "Input attachment views accessed in a subpass <strong class=\"purple\">must</strong> be created with the same <a href=\"#VkFormat\">VkFormat</a> as the corresponding subpass definition, and be created with a <a href=\"#VkImageView\">VkImageView</a> that is compatible with the attachment referenced by the subpass' <code>pInputAttachments</code>[<code>InputAttachmentIndex</code>] in the currently bound <a href=\"#VkFramebuffer\">VkFramebuffer</a> as specified by <a href=\"#compatibility-inputattachment\">Fragment Input Attachment Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-06537",
          "text": "Memory backing image subresources used as attachments in the current render pass <strong class=\"purple\">must</strong> not be written in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-09000",
          "text": "If a color attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-09001",
          "text": "If a depth attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-09002",
          "text": "If a stencil attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-06539",
          "text": "If any previously recorded command in the current subpass accessed an image subresource used as an attachment in this subpass in any way other than as an attachment, this command <strong class=\"purple\">must</strong> not write to that image subresource as an attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-06886",
          "text": "If the current render pass instance uses a depth/stencil attachment with a read-only layout for the depth aspect, <a href=\"#fragops-depth-write\">depth writes</a> <strong class=\"purple\">must</strong> be disabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-06887",
          "text": "If the current render pass instance uses a depth/stencil attachment with a read-only layout for the stencil aspect, both front and back <code>writeMask</code> are not zero, and stencil test is enabled, <a href=\"#fragops-stencil\">all stencil ops</a> <strong class=\"purple\">must</strong> be <code>VK_STENCIL_OP_KEEP</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07831",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VIEWPORT</code> dynamic state enabled then <a href=\"#vkCmdSetViewport\">vkCmdSetViewport</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07832",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SCISSOR</code> dynamic state enabled then <a href=\"#vkCmdSetScissor\">vkCmdSetScissor</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07833",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_LINE_WIDTH</code> dynamic state enabled then <a href=\"#vkCmdSetLineWidth\">vkCmdSetLineWidth</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07834",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BIAS</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBias\">vkCmdSetDepthBias</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07835",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_BLEND_CONSTANTS</code> dynamic state enabled then <a href=\"#vkCmdSetBlendConstants\">vkCmdSetBlendConstants</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07836",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS</code> dynamic state enabled, and if the current <code>depthBoundsTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetDepthBounds\">vkCmdSetDepthBounds</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07837",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilCompareMask\">vkCmdSetStencilCompareMask</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07838",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_WRITE_MASK</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilWriteMask\">vkCmdSetStencilWriteMask</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07839",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_REFERENCE</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilReference\">vkCmdSetStencilReference</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-maxMultiviewInstanceIndex-02688",
          "text": "If the draw is recorded in a render pass instance with multiview enabled, the maximum instance index <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceMultiviewProperties\">VkPhysicalDeviceMultiviewProperties</a>::<code>maxMultiviewInstanceIndex</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-sampleLocationsEnable-02689",
          "text": "If the bound graphics pipeline was created with <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a>::<code>sampleLocationsEnable</code> set to <code>VK_TRUE</code> and the current subpass has a depth/stencil attachment, then that attachment <strong class=\"purple\">must</strong> have been created with the <code>VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-06666",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetSampleLocationsEXT\">vkCmdSetSampleLocationsEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07840",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_CULL_MODE</code> dynamic state enabled then <a href=\"#vkCmdSetCullModeEXT\">vkCmdSetCullModeEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07841",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_FRONT_FACE</code> dynamic state enabled then <a href=\"#vkCmdSetFrontFaceEXT\">vkCmdSetFrontFaceEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07843",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthTestEnableEXT\">vkCmdSetDepthTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07844",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthWriteEnableEXT\">vkCmdSetDepthWriteEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07845",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_COMPARE_OP</code> dynamic state enabled then <a href=\"#vkCmdSetDepthCompareOpEXT\">vkCmdSetDepthCompareOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07846",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBoundsTestEnableEXT\">vkCmdSetDepthBoundsTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07847",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetStencilTestEnableEXT\">vkCmdSetStencilTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07848",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_OP</code> dynamic state enabled then <a href=\"#vkCmdSetStencilOpEXT\">vkCmdSetStencilOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-viewportCount-03417",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, but not the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> dynamic state enabled, then <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>VkPipelineViewportStateCreateInfo</code>::<code>scissorCount</code> of the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-scissorCount-03418",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> dynamic state enabled, but not the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, then <a href=\"#vkCmdSetScissorWithCountEXT\">vkCmdSetScissorWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>scissorCount</code> parameter of <code>vkCmdSetScissorWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>VkPipelineViewportStateCreateInfo</code>::<code>viewportCount</code> of the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-viewportCount-03419",
          "text": "If the bound graphics pipeline state was created with both the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> and <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic states enabled then both <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> and <a href=\"#vkCmdSetScissorWithCountEXT\">vkCmdSetScissorWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>scissorCount</code> parameter of <code>vkCmdSetScissorWithCountEXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-04876",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetRasterizerDiscardEnableEXT\">vkCmdSetRasterizerDiscardEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-04877",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBiasEnableEXT\">vkCmdSetDepthBiasEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-logicOp-04878",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_LOGIC_OP_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetLogicOpEXT\">vkCmdSetLogicOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command and the <code>logicOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkLogicOp\">VkLogicOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-primitiveFragmentShadingRateWithMultipleViewports-04552",
          "text": "If the <a href=\"#limits-primitiveFragmentShadingRateWithMultipleViewports\"><code>primitiveFragmentShadingRateWithMultipleViewports</code></a> limit is not supported, the bound graphics pipeline was created with the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, and any of the shader stages of the bound graphics pipeline write to the <code>PrimitiveShadingRateKHR</code> built-in, then <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-blendEnable-04727",
          "text": "If rasterization is not disabled in the bound graphics pipeline, then for each color attachment in the subpass, if the corresponding image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> do not contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT</code>, then the <code>blendEnable</code> member of the corresponding element of the <code>pAttachments</code> member of <code>pColorBlendState</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-multisampledRenderToSingleSampled-07284",
          "text": "If rasterization is not disabled in the bound graphics pipeline,<div class=\"paragraph\">\n<p>then <code>rasterizationSamples</code> for the currently bound graphics pipeline\n<strong class=\"purple\">must</strong> be the same as the current subpass color and/or depth/stencil\nattachments</p>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-maxFragmentDualSrcAttachments-09239",
          "text": "If <a href=\"#framebuffer-blending\">blending</a> is enabled for any attachment where either the source or destination blend factors for that attachment <a href=\"#framebuffer-dsb\">use the secondary color input</a>, the maximum value of <code>Location</code> for any output attachment <a href=\"#shaders-staticuse\">statically used</a> in the <code>Fragment</code> <code>Execution</code> <code>Model</code> executed by this command <strong class=\"purple\">must</strong> be less than <a href=\"#limits-maxFragmentDualSrcAttachments\"><code>maxFragmentDualSrcAttachments</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-04007",
          "text": "All vertex input bindings accessed via vertex input variables declared in the vertex shader entry point&#8217;s interface <strong class=\"purple\">must</strong> have either valid or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> buffers bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-04008",
          "text": "If the <a href=\"#features-nullDescriptor\"><code>nullDescriptor</code></a> feature is not enabled, all vertex input bindings accessed via vertex input variables declared in the vertex shader entry point&#8217;s interface <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-02721",
          "text": "For a given vertex buffer binding, any attribute data fetched <strong class=\"purple\">must</strong> be entirely contained within the corresponding vertex buffer binding, as described in <a href=\"#fxvertex-input\">Vertex Input Description</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-07842",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code> dynamic state enabled then <a href=\"#vkCmdSetPrimitiveTopologyEXT\">vkCmdSetPrimitiveTopologyEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-dynamicPrimitiveTopologyUnrestricted-07500",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code> dynamic state enabled then the <code>primitiveTopology</code> parameter of <code>vkCmdSetPrimitiveTopologyEXT</code> <strong class=\"purple\">must</strong> be of the same <a href=\"#drawing-primitive-topology-class\">topology class</a> as the pipeline <a href=\"#VkPipelineInputAssemblyStateCreateInfo\">VkPipelineInputAssemblyStateCreateInfo</a>::<code>topology</code> state",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-04912",
          "text": "If the bound graphics pipeline was created with both the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> and <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT</code> dynamic states enabled, then <a href=\"#vkCmdSetVertexInputEXT\">vkCmdSetVertexInputEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-pStrides-04913",
          "text": "If the bound graphics pipeline was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT</code> dynamic state enabled, but without the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled, then <a href=\"#vkCmdBindVertexBuffers2EXT\">vkCmdBindVertexBuffers2EXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command, and the <code>pStrides</code> parameter of <a href=\"#vkCmdBindVertexBuffers2EXT\">vkCmdBindVertexBuffers2EXT</a> <strong class=\"purple\">must</strong> not be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-04914",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetVertexInputEXT\">vkCmdSetVertexInputEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-Input-07939",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then all variables with the <code>Input</code> storage class decorated with <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> contain a location in <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>location</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-Input-08734",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then the numeric type associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be the same as <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-format-08936",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> has a 64-bit component, then the scalar width associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be 64-bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-format-08937",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and the scalar width associated with a <code>Location</code> decorated <code>Input</code> variable in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> is 64-bit, then the corresponding <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> <strong class=\"purple\">must</strong> have a 64-bit component",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-09203",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> has a 64-bit component, then all <code>Input</code> variables at the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> not use components that are not present in the format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-04875",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetPatchControlPointsEXT\">vkCmdSetPatchControlPointsEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-04879",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetPrimitiveRestartEnableEXT\">vkCmdSetPrimitiveRestartEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-buffer-02708",
          "text": "If <code>buffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-buffer-02709",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-offset-02710",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-commandBuffer-02711",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> not be a protected command buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-countBuffer-02714",
          "text": "If <code>countBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-countBuffer-02715",
          "text": "<code>countBuffer</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-countBufferOffset-02716",
          "text": "<code>countBufferOffset</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-countBuffer-02717",
          "text": "The count stored in <code>countBuffer</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxDrawIndirectCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-countBufferOffset-04129",
          "text": "<span class=\"eq\">(<code>countBufferOffset</code> +  <code>sizeof</code>(uint32_t))</span> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>countBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-None-04445",
          "text": "If <a href=\"#features-drawIndirectCount\"><code>drawIndirectCount</code></a> is not enabled this function <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-stride-03110",
          "text": "<code>stride</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code> and <strong class=\"purple\">must</strong> be greater than or equal to sizeof(<code>VkDrawIndirectCommand</code>)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-maxDrawCount-03111",
          "text": "If <code>maxDrawCount</code> is greater than or equal to <code>1</code>, <span class=\"eq\">(<code>stride</code> × (<code>maxDrawCount</code> - 1) +  <code>offset</code> +  sizeof(<code>VkDrawIndirectCommand</code>))</span> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-countBuffer-03121",
          "text": "If the count stored in <code>countBuffer</code> is equal to <code>1</code>, <span class=\"eq\">(<code>offset</code> +  sizeof(<code>VkDrawIndirectCommand</code>))</span> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-countBuffer-03122",
          "text": "If the count stored in <code>countBuffer</code> is greater than <code>1</code>, <span class=\"eq\">(<code>stride</code> × (<code>drawCount</code> - 1) +  <code>offset</code> +  sizeof(<code>VkDrawIndirectCommand</code>))</span> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-countBuffer-parameter",
          "text": "<code>countBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called inside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndirectCount-commonparent",
          "text": "Each of <code>buffer</code>, <code>commandBuffer</code>, and <code>countBuffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdDrawIndexedIndirect": {
      "core": [
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-magFilter-04553",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>magFilter</code> or <code>minFilter</code> equal to <code>VK_FILTER_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-mipmapMode-04770",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>mipmapMode</code> equal to <code>VK_SAMPLER_MIPMAP_MODE_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-aspectMask-06478",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <a href=\"#textures-depth-compare-operation\">depth comparison</a>, the image view <strong class=\"purple\">must</strong> have been created with an <code>aspectMask</code> that contains <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-02691",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using atomic operations as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07888",
          "text": "If a <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> descriptor is accessed using atomic operations as a result of this command, then the storage texel buffer&#8217;s <a href=\"#resources-buffer-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-02692",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-02693",
          "text": "If the <a href=\"#VK_EXT_filter_cubic\">VK_EXT_filter_cubic</a> extension is not enabled and any <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, it <strong class=\"purple\">must</strong> not have a <a href=\"#VkImageViewType\">VkImageViewType</a> of <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-filterCubic-02694",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubic</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-filterCubicMinmax-02695",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> with a reduction mode of either <code>VK_SAMPLER_REDUCTION_MODE_MIN</code> or <code>VK_SAMPLER_REDUCTION_MODE_MAX</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering together with minmax filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubicMinmax</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-08600",
          "text": "For each set <em>n</em> that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a descriptor set <strong class=\"purple\">must</strong> have been bound to <em>n</em> at the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for set <em>n</em>, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-08601",
          "text": "For each push constant that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a push constant value <strong class=\"purple\">must</strong> have been set for the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for push constants, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-08114",
          "text": "Descriptors in each bound descriptor set, specified via     <a href=\"#vkCmdBindDescriptorSets\">vkCmdBindDescriptorSets</a>, <strong class=\"purple\">must</strong> be valid as described by     <a href=\"#descriptor-validity\">descriptor validity</a> if they are statically used     by <a href=\"#shaders-binding\">a bound shader</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-08606",
          "text": "A     valid pipeline <strong class=\"purple\">must</strong> be bound to the pipeline bind point used by this     command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-08608",
          "text": "There     <strong class=\"purple\">must</strong> not have been any calls to dynamic state setting commands for any     state not specified as dynamic in the <a href=\"#VkPipeline\">VkPipeline</a> object bound to     the pipeline bind point used by this command, since that pipeline was     bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-08609",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used to sample from any <a href=\"#VkImage\">VkImage</a> with a <a href=\"#VkImageView\">VkImageView</a> of the type <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, <code>VK_IMAGE_VIEW_TYPE_1D_ARRAY</code>, <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code> or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-08610",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions with <code>ImplicitLod</code>, <code>Dref</code> or <code>Proj</code> in their name, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-08611",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions that includes a LOD bias or any offset values, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-uniformBuffers-06935",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a uniform buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-storageBuffers-06936",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a storage buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-commandBuffer-02707",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource accessed by <a href=\"#shaders-binding\">bound shaders</a> <strong class=\"purple\">must</strong> not be a protected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-06550",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> only be used with <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-ConstOffset-06551",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> not use the <code>ConstOffset</code> and <code>Offset</code> operands",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-viewType-07752",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the image view&#8217;s <code>viewType</code> <strong class=\"purple\">must</strong> match the <code>Dim</code> operand of the <code>OpTypeImage</code> as described in <a href=\"#textures-operation-validation\">Instruction/Sampler/Image View Validation</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-format-07753",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the <a href=\"#formats-numericformat\">numeric type</a> of the image view&#8217;s <code>format</code> and the <code>Sampled</code> <code>Type</code> operand of the <code>OpTypeImage</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-OpImageWrite-08795",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the image view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-OpImageWrite-04469",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the buffer view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-SampledType-04470",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-SampledType-04471",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-SampledType-04472",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-SampledType-04473",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-sparseImageInt64Atomics-04474",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkImage\">VkImage</a> objects created with the <code>VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-sparseImageInt64Atomics-04475",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkBuffer\">VkBuffer</a> objects created with the <code>VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07288",
          "text": "Any shader invocation executed by this command <strong class=\"purple\">must</strong> <a href=\"#shaders-termination\">terminate</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-renderPass-02684",
          "text": "The current render pass <strong class=\"purple\">must</strong> be <a href=\"#renderpass-compatibility\">compatible</a> with the <code>renderPass</code> member of the <code>VkGraphicsPipelineCreateInfo</code> structure specified when creating the <code>VkPipeline</code> bound to <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-subpass-02685",
          "text": "The subpass index of the current render pass <strong class=\"purple\">must</strong> be equal to the <code>subpass</code> member of the <code>VkGraphicsPipelineCreateInfo</code> structure specified when creating the <code>VkPipeline</code> bound to <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07748",
          "text": "If any shader statically accesses an input attachment, a valid descriptor <strong class=\"purple\">must</strong> be bound to the pipeline via a descriptor set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-OpTypeImage-07468",
          "text": "If any shader executed by this pipeline accesses an <code>OpTypeImage</code> variable with a <code>Dim</code> operand of <code>SubpassData</code>, it <strong class=\"purple\">must</strong> be decorated with an <code>InputAttachmentIndex</code> that corresponds to a valid input attachment in the current subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07469",
          "text": "Input attachment views accessed in a subpass <strong class=\"purple\">must</strong> be created with the same <a href=\"#VkFormat\">VkFormat</a> as the corresponding subpass definition, and be created with a <a href=\"#VkImageView\">VkImageView</a> that is compatible with the attachment referenced by the subpass' <code>pInputAttachments</code>[<code>InputAttachmentIndex</code>] in the currently bound <a href=\"#VkFramebuffer\">VkFramebuffer</a> as specified by <a href=\"#compatibility-inputattachment\">Fragment Input Attachment Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-06537",
          "text": "Memory backing image subresources used as attachments in the current render pass <strong class=\"purple\">must</strong> not be written in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-09000",
          "text": "If a color attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-09001",
          "text": "If a depth attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-09002",
          "text": "If a stencil attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-06539",
          "text": "If any previously recorded command in the current subpass accessed an image subresource used as an attachment in this subpass in any way other than as an attachment, this command <strong class=\"purple\">must</strong> not write to that image subresource as an attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-06886",
          "text": "If the current render pass instance uses a depth/stencil attachment with a read-only layout for the depth aspect, <a href=\"#fragops-depth-write\">depth writes</a> <strong class=\"purple\">must</strong> be disabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-06887",
          "text": "If the current render pass instance uses a depth/stencil attachment with a read-only layout for the stencil aspect, both front and back <code>writeMask</code> are not zero, and stencil test is enabled, <a href=\"#fragops-stencil\">all stencil ops</a> <strong class=\"purple\">must</strong> be <code>VK_STENCIL_OP_KEEP</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07831",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VIEWPORT</code> dynamic state enabled then <a href=\"#vkCmdSetViewport\">vkCmdSetViewport</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07832",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SCISSOR</code> dynamic state enabled then <a href=\"#vkCmdSetScissor\">vkCmdSetScissor</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07833",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_LINE_WIDTH</code> dynamic state enabled then <a href=\"#vkCmdSetLineWidth\">vkCmdSetLineWidth</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07834",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BIAS</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBias\">vkCmdSetDepthBias</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07835",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_BLEND_CONSTANTS</code> dynamic state enabled then <a href=\"#vkCmdSetBlendConstants\">vkCmdSetBlendConstants</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07836",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS</code> dynamic state enabled, and if the current <code>depthBoundsTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetDepthBounds\">vkCmdSetDepthBounds</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07837",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilCompareMask\">vkCmdSetStencilCompareMask</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07838",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_WRITE_MASK</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilWriteMask\">vkCmdSetStencilWriteMask</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07839",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_REFERENCE</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilReference\">vkCmdSetStencilReference</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-maxMultiviewInstanceIndex-02688",
          "text": "If the draw is recorded in a render pass instance with multiview enabled, the maximum instance index <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceMultiviewProperties\">VkPhysicalDeviceMultiviewProperties</a>::<code>maxMultiviewInstanceIndex</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-sampleLocationsEnable-02689",
          "text": "If the bound graphics pipeline was created with <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a>::<code>sampleLocationsEnable</code> set to <code>VK_TRUE</code> and the current subpass has a depth/stencil attachment, then that attachment <strong class=\"purple\">must</strong> have been created with the <code>VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-06666",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetSampleLocationsEXT\">vkCmdSetSampleLocationsEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07840",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_CULL_MODE</code> dynamic state enabled then <a href=\"#vkCmdSetCullModeEXT\">vkCmdSetCullModeEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07841",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_FRONT_FACE</code> dynamic state enabled then <a href=\"#vkCmdSetFrontFaceEXT\">vkCmdSetFrontFaceEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07843",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthTestEnableEXT\">vkCmdSetDepthTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07844",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthWriteEnableEXT\">vkCmdSetDepthWriteEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07845",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_COMPARE_OP</code> dynamic state enabled then <a href=\"#vkCmdSetDepthCompareOpEXT\">vkCmdSetDepthCompareOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07846",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBoundsTestEnableEXT\">vkCmdSetDepthBoundsTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07847",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetStencilTestEnableEXT\">vkCmdSetStencilTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07848",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_OP</code> dynamic state enabled then <a href=\"#vkCmdSetStencilOpEXT\">vkCmdSetStencilOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-viewportCount-03417",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, but not the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> dynamic state enabled, then <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>VkPipelineViewportStateCreateInfo</code>::<code>scissorCount</code> of the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-scissorCount-03418",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> dynamic state enabled, but not the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, then <a href=\"#vkCmdSetScissorWithCountEXT\">vkCmdSetScissorWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>scissorCount</code> parameter of <code>vkCmdSetScissorWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>VkPipelineViewportStateCreateInfo</code>::<code>viewportCount</code> of the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-viewportCount-03419",
          "text": "If the bound graphics pipeline state was created with both the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> and <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic states enabled then both <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> and <a href=\"#vkCmdSetScissorWithCountEXT\">vkCmdSetScissorWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>scissorCount</code> parameter of <code>vkCmdSetScissorWithCountEXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-04876",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetRasterizerDiscardEnableEXT\">vkCmdSetRasterizerDiscardEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-04877",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBiasEnableEXT\">vkCmdSetDepthBiasEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-logicOp-04878",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_LOGIC_OP_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetLogicOpEXT\">vkCmdSetLogicOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command and the <code>logicOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkLogicOp\">VkLogicOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-primitiveFragmentShadingRateWithMultipleViewports-04552",
          "text": "If the <a href=\"#limits-primitiveFragmentShadingRateWithMultipleViewports\"><code>primitiveFragmentShadingRateWithMultipleViewports</code></a> limit is not supported, the bound graphics pipeline was created with the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, and any of the shader stages of the bound graphics pipeline write to the <code>PrimitiveShadingRateKHR</code> built-in, then <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-blendEnable-04727",
          "text": "If rasterization is not disabled in the bound graphics pipeline, then for each color attachment in the subpass, if the corresponding image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> do not contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT</code>, then the <code>blendEnable</code> member of the corresponding element of the <code>pAttachments</code> member of <code>pColorBlendState</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-multisampledRenderToSingleSampled-07284",
          "text": "If rasterization is not disabled in the bound graphics pipeline,<div class=\"paragraph\">\n<p>then <code>rasterizationSamples</code> for the currently bound graphics pipeline\n<strong class=\"purple\">must</strong> be the same as the current subpass color and/or depth/stencil\nattachments</p>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-maxFragmentDualSrcAttachments-09239",
          "text": "If <a href=\"#framebuffer-blending\">blending</a> is enabled for any attachment where either the source or destination blend factors for that attachment <a href=\"#framebuffer-dsb\">use the secondary color input</a>, the maximum value of <code>Location</code> for any output attachment <a href=\"#shaders-staticuse\">statically used</a> in the <code>Fragment</code> <code>Execution</code> <code>Model</code> executed by this command <strong class=\"purple\">must</strong> be less than <a href=\"#limits-maxFragmentDualSrcAttachments\"><code>maxFragmentDualSrcAttachments</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-04007",
          "text": "All vertex input bindings accessed via vertex input variables declared in the vertex shader entry point&#8217;s interface <strong class=\"purple\">must</strong> have either valid or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> buffers bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-04008",
          "text": "If the <a href=\"#features-nullDescriptor\"><code>nullDescriptor</code></a> feature is not enabled, all vertex input bindings accessed via vertex input variables declared in the vertex shader entry point&#8217;s interface <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-02721",
          "text": "For a given vertex buffer binding, any attribute data fetched <strong class=\"purple\">must</strong> be entirely contained within the corresponding vertex buffer binding, as described in <a href=\"#fxvertex-input\">Vertex Input Description</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07842",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code> dynamic state enabled then <a href=\"#vkCmdSetPrimitiveTopologyEXT\">vkCmdSetPrimitiveTopologyEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-dynamicPrimitiveTopologyUnrestricted-07500",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code> dynamic state enabled then the <code>primitiveTopology</code> parameter of <code>vkCmdSetPrimitiveTopologyEXT</code> <strong class=\"purple\">must</strong> be of the same <a href=\"#drawing-primitive-topology-class\">topology class</a> as the pipeline <a href=\"#VkPipelineInputAssemblyStateCreateInfo\">VkPipelineInputAssemblyStateCreateInfo</a>::<code>topology</code> state",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-04912",
          "text": "If the bound graphics pipeline was created with both the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> and <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT</code> dynamic states enabled, then <a href=\"#vkCmdSetVertexInputEXT\">vkCmdSetVertexInputEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-pStrides-04913",
          "text": "If the bound graphics pipeline was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT</code> dynamic state enabled, but without the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled, then <a href=\"#vkCmdBindVertexBuffers2EXT\">vkCmdBindVertexBuffers2EXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command, and the <code>pStrides</code> parameter of <a href=\"#vkCmdBindVertexBuffers2EXT\">vkCmdBindVertexBuffers2EXT</a> <strong class=\"purple\">must</strong> not be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-04914",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetVertexInputEXT\">vkCmdSetVertexInputEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-Input-07939",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then all variables with the <code>Input</code> storage class decorated with <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> contain a location in <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>location</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-Input-08734",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then the numeric type associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be the same as <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-format-08936",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> has a 64-bit component, then the scalar width associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be 64-bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-format-08937",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and the scalar width associated with a <code>Location</code> decorated <code>Input</code> variable in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> is 64-bit, then the corresponding <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> <strong class=\"purple\">must</strong> have a 64-bit component",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-09203",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> has a 64-bit component, then all <code>Input</code> variables at the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> not use components that are not present in the format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-04875",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetPatchControlPointsEXT\">vkCmdSetPatchControlPointsEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-04879",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetPrimitiveRestartEnableEXT\">vkCmdSetPrimitiveRestartEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-buffer-02708",
          "text": "If <code>buffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-buffer-02709",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-offset-02710",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-commandBuffer-02711",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> not be a protected command buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-drawCount-02718",
          "text": "If the <a href=\"#features-multiDrawIndirect\"><code>multiDrawIndirect</code></a> feature is not enabled, <code>drawCount</code> <strong class=\"purple\">must</strong> be <code>0</code> or <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-drawCount-02719",
          "text": "<code>drawCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxDrawIndirectCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-None-07312",
          "text": "An index buffer <strong class=\"purple\">must</strong> be bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-robustBufferAccess2-07825",
          "text": "If <a href=\"#features-robustBufferAccess2\"><code>robustBufferAccess2</code></a> is not enabled, <span class=\"eq\">(<code>indexSize</code> × (<code>firstIndex</code> +  <code>indexCount</code>) +  <code>offset</code>)</span> <strong class=\"purple\">must</strong> be less than or equal to the size of the bound index buffer, with <code>indexSize</code> being based on the type specified by <code>indexType</code>, where the index buffer, <code>indexType</code>, and <code>offset</code> are specified via <code>vkCmdBindIndexBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-drawCount-00528",
          "text": "If <code>drawCount</code> is greater than <code>1</code>, <code>stride</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code> and <strong class=\"purple\">must</strong> be greater than or equal to <code>sizeof</code>(<code>VkDrawIndexedIndirectCommand</code>)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-drawCount-00539",
          "text": "If <code>drawCount</code> is equal to <code>1</code>, <span class=\"eq\">(<code>offset</code> +  <code>sizeof</code>(<code>VkDrawIndexedIndirectCommand</code>))</span> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-drawCount-00540",
          "text": "If <code>drawCount</code> is greater than <code>1</code>, <span class=\"eq\">(<code>stride</code> × (<code>drawCount</code> - 1) +  <code>offset</code> +  <code>sizeof</code>(<code>VkDrawIndexedIndirectCommand</code>))</span> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called inside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirect-commonparent",
          "text": "Both of <code>buffer</code>, and <code>commandBuffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkDrawIndexedIndirectCommand": {
      "core": [
        {
          "vuid": "VUID-VkDrawIndexedIndirectCommand-robustBufferAccess2-08798",
          "text": "If <a href=\"#features-robustBufferAccess2\"><code>robustBufferAccess2</code></a> is not enabled, <span class=\"eq\">(<code>indexSize</code> × (<code>firstIndex</code> +  <code>indexCount</code>) +  <code>offset</code>)</span> <strong class=\"purple\">must</strong> be less than or equal to the size of the bound index buffer, with <code>indexSize</code> being based on the type specified by <code>indexType</code>, where the index buffer, <code>indexType</code>, and <code>offset</code> are specified via <code>vkCmdBindIndexBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDrawIndexedIndirectCommand-None-00552",
          "text": "For a given vertex buffer binding, any attribute data fetched <strong class=\"purple\">must</strong> be entirely contained within the corresponding vertex buffer binding, as described in <a href=\"#fxvertex-input\">Vertex Input Description</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDrawIndexedIndirectCommand-firstInstance-00554",
          "text": "If the <a href=\"#features-drawIndirectFirstInstance\"><code>drawIndirectFirstInstance</code></a> feature is not enabled, <code>firstInstance</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdDrawIndexedIndirectCount": {
      "core": [
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-magFilter-04553",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>magFilter</code> or <code>minFilter</code> equal to <code>VK_FILTER_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-mipmapMode-04770",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>mipmapMode</code> equal to <code>VK_SAMPLER_MIPMAP_MODE_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-aspectMask-06478",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <a href=\"#textures-depth-compare-operation\">depth comparison</a>, the image view <strong class=\"purple\">must</strong> have been created with an <code>aspectMask</code> that contains <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-02691",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using atomic operations as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07888",
          "text": "If a <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> descriptor is accessed using atomic operations as a result of this command, then the storage texel buffer&#8217;s <a href=\"#resources-buffer-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-02692",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-02693",
          "text": "If the <a href=\"#VK_EXT_filter_cubic\">VK_EXT_filter_cubic</a> extension is not enabled and any <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, it <strong class=\"purple\">must</strong> not have a <a href=\"#VkImageViewType\">VkImageViewType</a> of <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-filterCubic-02694",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubic</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-filterCubicMinmax-02695",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> with a reduction mode of either <code>VK_SAMPLER_REDUCTION_MODE_MIN</code> or <code>VK_SAMPLER_REDUCTION_MODE_MAX</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering together with minmax filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubicMinmax</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-08600",
          "text": "For each set <em>n</em> that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a descriptor set <strong class=\"purple\">must</strong> have been bound to <em>n</em> at the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for set <em>n</em>, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-08601",
          "text": "For each push constant that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a push constant value <strong class=\"purple\">must</strong> have been set for the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for push constants, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-08114",
          "text": "Descriptors in each bound descriptor set, specified via     <a href=\"#vkCmdBindDescriptorSets\">vkCmdBindDescriptorSets</a>, <strong class=\"purple\">must</strong> be valid as described by     <a href=\"#descriptor-validity\">descriptor validity</a> if they are statically used     by <a href=\"#shaders-binding\">a bound shader</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-08606",
          "text": "A     valid pipeline <strong class=\"purple\">must</strong> be bound to the pipeline bind point used by this     command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-08608",
          "text": "There     <strong class=\"purple\">must</strong> not have been any calls to dynamic state setting commands for any     state not specified as dynamic in the <a href=\"#VkPipeline\">VkPipeline</a> object bound to     the pipeline bind point used by this command, since that pipeline was     bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-08609",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used to sample from any <a href=\"#VkImage\">VkImage</a> with a <a href=\"#VkImageView\">VkImageView</a> of the type <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, <code>VK_IMAGE_VIEW_TYPE_1D_ARRAY</code>, <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code> or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-08610",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions with <code>ImplicitLod</code>, <code>Dref</code> or <code>Proj</code> in their name, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-08611",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions that includes a LOD bias or any offset values, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-uniformBuffers-06935",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a uniform buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-storageBuffers-06936",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a storage buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-commandBuffer-02707",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource accessed by <a href=\"#shaders-binding\">bound shaders</a> <strong class=\"purple\">must</strong> not be a protected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-06550",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> only be used with <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-ConstOffset-06551",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> not use the <code>ConstOffset</code> and <code>Offset</code> operands",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-viewType-07752",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the image view&#8217;s <code>viewType</code> <strong class=\"purple\">must</strong> match the <code>Dim</code> operand of the <code>OpTypeImage</code> as described in <a href=\"#textures-operation-validation\">Instruction/Sampler/Image View Validation</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-format-07753",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the <a href=\"#formats-numericformat\">numeric type</a> of the image view&#8217;s <code>format</code> and the <code>Sampled</code> <code>Type</code> operand of the <code>OpTypeImage</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-OpImageWrite-08795",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the image view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-OpImageWrite-04469",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the buffer view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-SampledType-04470",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-SampledType-04471",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-SampledType-04472",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-SampledType-04473",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-sparseImageInt64Atomics-04474",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkImage\">VkImage</a> objects created with the <code>VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-sparseImageInt64Atomics-04475",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkBuffer\">VkBuffer</a> objects created with the <code>VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07288",
          "text": "Any shader invocation executed by this command <strong class=\"purple\">must</strong> <a href=\"#shaders-termination\">terminate</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-renderPass-02684",
          "text": "The current render pass <strong class=\"purple\">must</strong> be <a href=\"#renderpass-compatibility\">compatible</a> with the <code>renderPass</code> member of the <code>VkGraphicsPipelineCreateInfo</code> structure specified when creating the <code>VkPipeline</code> bound to <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-subpass-02685",
          "text": "The subpass index of the current render pass <strong class=\"purple\">must</strong> be equal to the <code>subpass</code> member of the <code>VkGraphicsPipelineCreateInfo</code> structure specified when creating the <code>VkPipeline</code> bound to <code>VK_PIPELINE_BIND_POINT_GRAPHICS</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07748",
          "text": "If any shader statically accesses an input attachment, a valid descriptor <strong class=\"purple\">must</strong> be bound to the pipeline via a descriptor set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-OpTypeImage-07468",
          "text": "If any shader executed by this pipeline accesses an <code>OpTypeImage</code> variable with a <code>Dim</code> operand of <code>SubpassData</code>, it <strong class=\"purple\">must</strong> be decorated with an <code>InputAttachmentIndex</code> that corresponds to a valid input attachment in the current subpass",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07469",
          "text": "Input attachment views accessed in a subpass <strong class=\"purple\">must</strong> be created with the same <a href=\"#VkFormat\">VkFormat</a> as the corresponding subpass definition, and be created with a <a href=\"#VkImageView\">VkImageView</a> that is compatible with the attachment referenced by the subpass' <code>pInputAttachments</code>[<code>InputAttachmentIndex</code>] in the currently bound <a href=\"#VkFramebuffer\">VkFramebuffer</a> as specified by <a href=\"#compatibility-inputattachment\">Fragment Input Attachment Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-06537",
          "text": "Memory backing image subresources used as attachments in the current render pass <strong class=\"purple\">must</strong> not be written in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-09000",
          "text": "If a color attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-09001",
          "text": "If a depth attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-09002",
          "text": "If a stencil attachment is written by any prior command in this subpass or by the load, store, or resolve operations for this subpass, it <strong class=\"purple\">must</strong> not be accessed in any way other than as an attachment by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-06539",
          "text": "If any previously recorded command in the current subpass accessed an image subresource used as an attachment in this subpass in any way other than as an attachment, this command <strong class=\"purple\">must</strong> not write to that image subresource as an attachment",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-06886",
          "text": "If the current render pass instance uses a depth/stencil attachment with a read-only layout for the depth aspect, <a href=\"#fragops-depth-write\">depth writes</a> <strong class=\"purple\">must</strong> be disabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-06887",
          "text": "If the current render pass instance uses a depth/stencil attachment with a read-only layout for the stencil aspect, both front and back <code>writeMask</code> are not zero, and stencil test is enabled, <a href=\"#fragops-stencil\">all stencil ops</a> <strong class=\"purple\">must</strong> be <code>VK_STENCIL_OP_KEEP</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07831",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VIEWPORT</code> dynamic state enabled then <a href=\"#vkCmdSetViewport\">vkCmdSetViewport</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07832",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SCISSOR</code> dynamic state enabled then <a href=\"#vkCmdSetScissor\">vkCmdSetScissor</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07833",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_LINE_WIDTH</code> dynamic state enabled then <a href=\"#vkCmdSetLineWidth\">vkCmdSetLineWidth</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07834",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BIAS</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBias\">vkCmdSetDepthBias</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07835",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_BLEND_CONSTANTS</code> dynamic state enabled then <a href=\"#vkCmdSetBlendConstants\">vkCmdSetBlendConstants</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07836",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS</code> dynamic state enabled, and if the current <code>depthBoundsTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetDepthBounds\">vkCmdSetDepthBounds</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07837",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilCompareMask\">vkCmdSetStencilCompareMask</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07838",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_WRITE_MASK</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilWriteMask\">vkCmdSetStencilWriteMask</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07839",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_REFERENCE</code> dynamic state enabled, and if the current <code>stencilTestEnable</code> state is <code>VK_TRUE</code>, then <a href=\"#vkCmdSetStencilReference\">vkCmdSetStencilReference</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-maxMultiviewInstanceIndex-02688",
          "text": "If the draw is recorded in a render pass instance with multiview enabled, the maximum instance index <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceMultiviewProperties\">VkPhysicalDeviceMultiviewProperties</a>::<code>maxMultiviewInstanceIndex</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-sampleLocationsEnable-02689",
          "text": "If the bound graphics pipeline was created with <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a>::<code>sampleLocationsEnable</code> set to <code>VK_TRUE</code> and the current subpass has a depth/stencil attachment, then that attachment <strong class=\"purple\">must</strong> have been created with the <code>VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-06666",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetSampleLocationsEXT\">vkCmdSetSampleLocationsEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07840",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_CULL_MODE</code> dynamic state enabled then <a href=\"#vkCmdSetCullModeEXT\">vkCmdSetCullModeEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07841",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_FRONT_FACE</code> dynamic state enabled then <a href=\"#vkCmdSetFrontFaceEXT\">vkCmdSetFrontFaceEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07843",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthTestEnableEXT\">vkCmdSetDepthTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07844",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthWriteEnableEXT\">vkCmdSetDepthWriteEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07845",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_COMPARE_OP</code> dynamic state enabled then <a href=\"#vkCmdSetDepthCompareOpEXT\">vkCmdSetDepthCompareOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07846",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBoundsTestEnableEXT\">vkCmdSetDepthBoundsTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07847",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetStencilTestEnableEXT\">vkCmdSetStencilTestEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07848",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_STENCIL_OP</code> dynamic state enabled then <a href=\"#vkCmdSetStencilOpEXT\">vkCmdSetStencilOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-viewportCount-03417",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, but not the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> dynamic state enabled, then <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>VkPipelineViewportStateCreateInfo</code>::<code>scissorCount</code> of the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-scissorCount-03418",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> dynamic state enabled, but not the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, then <a href=\"#vkCmdSetScissorWithCountEXT\">vkCmdSetScissorWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>scissorCount</code> parameter of <code>vkCmdSetScissorWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>VkPipelineViewportStateCreateInfo</code>::<code>viewportCount</code> of the pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-viewportCount-03419",
          "text": "If the bound graphics pipeline state was created with both the <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> and <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic states enabled then both <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> and <a href=\"#vkCmdSetScissorWithCountEXT\">vkCmdSetScissorWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> match the <code>scissorCount</code> parameter of <code>vkCmdSetScissorWithCountEXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-04876",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetRasterizerDiscardEnableEXT\">vkCmdSetRasterizerDiscardEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-04877",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetDepthBiasEnableEXT\">vkCmdSetDepthBiasEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-logicOp-04878",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_LOGIC_OP_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetLogicOpEXT\">vkCmdSetLogicOpEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command and the <code>logicOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkLogicOp\">VkLogicOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-primitiveFragmentShadingRateWithMultipleViewports-04552",
          "text": "If the <a href=\"#limits-primitiveFragmentShadingRateWithMultipleViewports\"><code>primitiveFragmentShadingRateWithMultipleViewports</code></a> limit is not supported, the bound graphics pipeline was created with the <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> dynamic state enabled, and any of the shader stages of the bound graphics pipeline write to the <code>PrimitiveShadingRateKHR</code> built-in, then <a href=\"#vkCmdSetViewportWithCountEXT\">vkCmdSetViewportWithCountEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command, and the <code>viewportCount</code> parameter of <code>vkCmdSetViewportWithCountEXT</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-blendEnable-04727",
          "text": "If rasterization is not disabled in the bound graphics pipeline, then for each color attachment in the subpass, if the corresponding image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> do not contain <code>VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT</code>, then the <code>blendEnable</code> member of the corresponding element of the <code>pAttachments</code> member of <code>pColorBlendState</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-multisampledRenderToSingleSampled-07284",
          "text": "If rasterization is not disabled in the bound graphics pipeline,<div class=\"paragraph\">\n<p>then <code>rasterizationSamples</code> for the currently bound graphics pipeline\n<strong class=\"purple\">must</strong> be the same as the current subpass color and/or depth/stencil\nattachments</p>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-maxFragmentDualSrcAttachments-09239",
          "text": "If <a href=\"#framebuffer-blending\">blending</a> is enabled for any attachment where either the source or destination blend factors for that attachment <a href=\"#framebuffer-dsb\">use the secondary color input</a>, the maximum value of <code>Location</code> for any output attachment <a href=\"#shaders-staticuse\">statically used</a> in the <code>Fragment</code> <code>Execution</code> <code>Model</code> executed by this command <strong class=\"purple\">must</strong> be less than <a href=\"#limits-maxFragmentDualSrcAttachments\"><code>maxFragmentDualSrcAttachments</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-04007",
          "text": "All vertex input bindings accessed via vertex input variables declared in the vertex shader entry point&#8217;s interface <strong class=\"purple\">must</strong> have either valid or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> buffers bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-04008",
          "text": "If the <a href=\"#features-nullDescriptor\"><code>nullDescriptor</code></a> feature is not enabled, all vertex input bindings accessed via vertex input variables declared in the vertex shader entry point&#8217;s interface <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-02721",
          "text": "For a given vertex buffer binding, any attribute data fetched <strong class=\"purple\">must</strong> be entirely contained within the corresponding vertex buffer binding, as described in <a href=\"#fxvertex-input\">Vertex Input Description</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07842",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code> dynamic state enabled then <a href=\"#vkCmdSetPrimitiveTopologyEXT\">vkCmdSetPrimitiveTopologyEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-dynamicPrimitiveTopologyUnrestricted-07500",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY</code> dynamic state enabled then the <code>primitiveTopology</code> parameter of <code>vkCmdSetPrimitiveTopologyEXT</code> <strong class=\"purple\">must</strong> be of the same <a href=\"#drawing-primitive-topology-class\">topology class</a> as the pipeline <a href=\"#VkPipelineInputAssemblyStateCreateInfo\">VkPipelineInputAssemblyStateCreateInfo</a>::<code>topology</code> state",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-04912",
          "text": "If the bound graphics pipeline was created with both the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> and <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT</code> dynamic states enabled, then <a href=\"#vkCmdSetVertexInputEXT\">vkCmdSetVertexInputEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-pStrides-04913",
          "text": "If the bound graphics pipeline was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT</code> dynamic state enabled, but without the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled, then <a href=\"#vkCmdBindVertexBuffers2EXT\">vkCmdBindVertexBuffers2EXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command, and the <code>pStrides</code> parameter of <a href=\"#vkCmdBindVertexBuffers2EXT\">vkCmdBindVertexBuffers2EXT</a> <strong class=\"purple\">must</strong> not be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-04914",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetVertexInputEXT\">vkCmdSetVertexInputEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this draw command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-Input-07939",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then all variables with the <code>Input</code> storage class decorated with <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> contain a location in <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>location</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-Input-08734",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled then the numeric type associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be the same as <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-format-08936",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> has a 64-bit component, then the scalar width associated with all <code>Input</code> variables of the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> be 64-bit",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-format-08937",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and the scalar width associated with a <code>Location</code> decorated <code>Input</code> variable in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> is 64-bit, then the corresponding <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> <strong class=\"purple\">must</strong> have a 64-bit component",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-09203",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_VERTEX_INPUT_EXT</code> dynamic state enabled and <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a>::<code>format</code> has a 64-bit component, then all <code>Input</code> variables at the corresponding <code>Location</code> in the <code>Vertex</code> <code>Execution</code> <code>Model</code> <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> not use components that are not present in the format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-04875",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT</code> dynamic state enabled then <a href=\"#vkCmdSetPatchControlPointsEXT\">vkCmdSetPatchControlPointsEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-04879",
          "text": "If the bound graphics pipeline state was created with the <code>VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE</code> dynamic state enabled then <a href=\"#vkCmdSetPrimitiveRestartEnableEXT\">vkCmdSetPrimitiveRestartEnableEXT</a> <strong class=\"purple\">must</strong> have been called in the current command buffer prior to this drawing command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-buffer-02708",
          "text": "If <code>buffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-buffer-02709",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-offset-02710",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-commandBuffer-02711",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> not be a protected command buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-countBuffer-02714",
          "text": "If <code>countBuffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-countBuffer-02715",
          "text": "<code>countBuffer</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-countBufferOffset-02716",
          "text": "<code>countBufferOffset</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-countBuffer-02717",
          "text": "The count stored in <code>countBuffer</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxDrawIndirectCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-countBufferOffset-04129",
          "text": "<span class=\"eq\">(<code>countBufferOffset</code> +  <code>sizeof</code>(uint32_t))</span> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>countBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-04445",
          "text": "If <a href=\"#features-drawIndirectCount\"><code>drawIndirectCount</code></a> is not enabled this function <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-None-07312",
          "text": "An index buffer <strong class=\"purple\">must</strong> be bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-robustBufferAccess2-07825",
          "text": "If <a href=\"#features-robustBufferAccess2\"><code>robustBufferAccess2</code></a> is not enabled, <span class=\"eq\">(<code>indexSize</code> × (<code>firstIndex</code> +  <code>indexCount</code>) +  <code>offset</code>)</span> <strong class=\"purple\">must</strong> be less than or equal to the size of the bound index buffer, with <code>indexSize</code> being based on the type specified by <code>indexType</code>, where the index buffer, <code>indexType</code>, and <code>offset</code> are specified via <code>vkCmdBindIndexBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-stride-03142",
          "text": "<code>stride</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code> and <strong class=\"purple\">must</strong> be greater than or equal to sizeof(<code>VkDrawIndexedIndirectCommand</code>)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-maxDrawCount-03143",
          "text": "If <code>maxDrawCount</code> is greater than or equal to <code>1</code>, <span class=\"eq\">(<code>stride</code> × (<code>maxDrawCount</code> - 1) +  <code>offset</code> +  sizeof(<code>VkDrawIndexedIndirectCommand</code>))</span> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-countBuffer-03153",
          "text": "If count stored in <code>countBuffer</code> is equal to <code>1</code>, <span class=\"eq\">(<code>offset</code> +  sizeof(<code>VkDrawIndexedIndirectCommand</code>))</span> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-countBuffer-03154",
          "text": "If count stored in <code>countBuffer</code> is greater than <code>1</code>, <span class=\"eq\">(<code>stride</code> × (<code>drawCount</code> - 1) +  <code>offset</code> +  sizeof(<code>VkDrawIndexedIndirectCommand</code>))</span> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-countBuffer-parameter",
          "text": "<code>countBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called inside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDrawIndexedIndirectCount-commonparent",
          "text": "Each of <code>buffer</code>, <code>commandBuffer</code>, and <code>countBuffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineVertexInputStateCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineVertexInputStateCreateInfo-vertexBindingDescriptionCount-00613",
          "text": "<code>vertexBindingDescriptionCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindings</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineVertexInputStateCreateInfo-vertexAttributeDescriptionCount-00614",
          "text": "<code>vertexAttributeDescriptionCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputAttributes</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineVertexInputStateCreateInfo-binding-00615",
          "text": "For every <code>binding</code> specified by each element of <code>pVertexAttributeDescriptions</code>, a <code>VkVertexInputBindingDescription</code> <strong class=\"purple\">must</strong> exist in <code>pVertexBindingDescriptions</code> with the same value of <code>binding</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineVertexInputStateCreateInfo-pVertexBindingDescriptions-00616",
          "text": "All elements of <code>pVertexBindingDescriptions</code> <strong class=\"purple\">must</strong> describe distinct binding numbers",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineVertexInputStateCreateInfo-pVertexAttributeDescriptions-00617",
          "text": "All elements of <code>pVertexAttributeDescriptions</code> <strong class=\"purple\">must</strong> describe distinct attribute locations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineVertexInputStateCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineVertexInputStateCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkPipelineVertexInputDivisorStateCreateInfoEXT\">VkPipelineVertexInputDivisorStateCreateInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineVertexInputStateCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineVertexInputStateCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineVertexInputStateCreateInfo-pVertexBindingDescriptions-parameter",
          "text": "If <code>vertexBindingDescriptionCount</code> is not <code>0</code>, <code>pVertexBindingDescriptions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>vertexBindingDescriptionCount</code> valid <a href=\"#VkVertexInputBindingDescription\">VkVertexInputBindingDescription</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineVertexInputStateCreateInfo-pVertexAttributeDescriptions-parameter",
          "text": "If <code>vertexAttributeDescriptionCount</code> is not <code>0</code>, <code>pVertexAttributeDescriptions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>vertexAttributeDescriptionCount</code> valid <a href=\"#VkVertexInputAttributeDescription\">VkVertexInputAttributeDescription</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkVertexInputBindingDescription": {
      "core": [
        {
          "vuid": "VUID-VkVertexInputBindingDescription-binding-00618",
          "text": "<code>binding</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindings</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDescription-stride-00619",
          "text": "<code>stride</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindingStride</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDescription-inputRate-parameter",
          "text": "<code>inputRate</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkVertexInputRate\">VkVertexInputRate</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkVertexInputAttributeDescription": {
      "core": [
        {
          "vuid": "VUID-VkVertexInputAttributeDescription-location-00620",
          "text": "<code>location</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputAttributes</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputAttributeDescription-binding-00621",
          "text": "<code>binding</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindings</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputAttributeDescription-offset-00622",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputAttributeOffset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputAttributeDescription-format-00623",
          "text": "The <a href=\"#resources-buffer-view-format-features\">format features</a> of <code>format</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputAttributeDescription-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetVertexInputEXT": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetVertexInputEXT-None-04790",
          "text": "The <a href=\"#features-vertexInputDynamicState\"><code>vertexInputDynamicState</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetVertexInputEXT-vertexBindingDescriptionCount-04791",
          "text": "<code>vertexBindingDescriptionCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindings</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetVertexInputEXT-vertexAttributeDescriptionCount-04792",
          "text": "<code>vertexAttributeDescriptionCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputAttributes</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetVertexInputEXT-binding-04793",
          "text": "For every <code>binding</code> specified by each element of <code>pVertexAttributeDescriptions</code>, a <code>VkVertexInputBindingDescription2EXT</code> <strong class=\"purple\">must</strong> exist in <code>pVertexBindingDescriptions</code> with the same value of <code>binding</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetVertexInputEXT-pVertexBindingDescriptions-04794",
          "text": "All elements of <code>pVertexBindingDescriptions</code> <strong class=\"purple\">must</strong> describe distinct binding numbers",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetVertexInputEXT-pVertexAttributeDescriptions-04795",
          "text": "All elements of <code>pVertexAttributeDescriptions</code> <strong class=\"purple\">must</strong> describe distinct attribute locations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetVertexInputEXT-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetVertexInputEXT-pVertexBindingDescriptions-parameter",
          "text": "If <code>vertexBindingDescriptionCount</code> is not <code>0</code>, <code>pVertexBindingDescriptions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>vertexBindingDescriptionCount</code> valid <a href=\"#VkVertexInputBindingDescription2EXT\">VkVertexInputBindingDescription2EXT</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetVertexInputEXT-pVertexAttributeDescriptions-parameter",
          "text": "If <code>vertexAttributeDescriptionCount</code> is not <code>0</code>, <code>pVertexAttributeDescriptions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>vertexAttributeDescriptionCount</code> valid <a href=\"#VkVertexInputAttributeDescription2EXT\">VkVertexInputAttributeDescription2EXT</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetVertexInputEXT-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetVertexInputEXT-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "VkVertexInputBindingDescription2EXT": {
      "core": [
        {
          "vuid": "VUID-VkVertexInputBindingDescription2EXT-binding-04796",
          "text": "<code>binding</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindings</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDescription2EXT-stride-04797",
          "text": "<code>stride</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindingStride</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDescription2EXT-divisor-04798",
          "text": "If the <a href=\"#features-vertexAttributeInstanceRateZeroDivisor\"><code>vertexAttributeInstanceRateZeroDivisor</code></a> feature is not enabled, <code>divisor</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDescription2EXT-divisor-04799",
          "text": "If the <a href=\"#features-vertexAttributeInstanceRateDivisor\"><code>vertexAttributeInstanceRateDivisor</code></a> feature is not enabled, <code>divisor</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDescription2EXT-divisor-06226",
          "text": "<code>divisor</code> <strong class=\"purple\">must</strong> be a value between <code>0</code> and <code>VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT</code>::<code>maxVertexAttribDivisor</code>, inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDescription2EXT-divisor-06227",
          "text": "If <code>divisor</code> is not <code>1</code> then <code>inputRate</code> <strong class=\"purple\">must</strong> be of type <code>VK_VERTEX_INPUT_RATE_INSTANCE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDescription2EXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDescription2EXT-inputRate-parameter",
          "text": "<code>inputRate</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkVertexInputRate\">VkVertexInputRate</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkVertexInputAttributeDescription2EXT": {
      "core": [
        {
          "vuid": "VUID-VkVertexInputAttributeDescription2EXT-location-06228",
          "text": "<code>location</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputAttributes</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputAttributeDescription2EXT-binding-06229",
          "text": "<code>binding</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindings</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputAttributeDescription2EXT-offset-06230",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputAttributeOffset</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputAttributeDescription2EXT-format-04805",
          "text": "The <a href=\"#resources-buffer-view-format-features\">format features</a> of <code>format</code> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputAttributeDescription2EXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputAttributeDescription2EXT-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdBindVertexBuffers": {
      "core": [
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-firstBinding-00624",
          "text": "<code>firstBinding</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindings</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-firstBinding-00625",
          "text": "The sum of <code>firstBinding</code> and <code>bindingCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindings</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-pOffsets-00626",
          "text": "All elements of <code>pOffsets</code> <strong class=\"purple\">must</strong> be less than the size of the corresponding element in <code>pBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-pBuffers-00627",
          "text": "All elements of <code>pBuffers</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_BUFFER_USAGE_VERTEX_BUFFER_BIT</code> flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-pBuffers-00628",
          "text": "Each element of <code>pBuffers</code> that is non-sparse <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-pBuffers-04001",
          "text": "If the <a href=\"#features-nullDescriptor\"><code>nullDescriptor</code></a> feature is not enabled, all elements of <code>pBuffers</code> <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-pBuffers-04002",
          "text": "If an element of <code>pBuffers</code> is <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, then the corresponding element of <code>pOffsets</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-pBuffers-parameter",
          "text": "<code>pBuffers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bindingCount</code> valid or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> <a href=\"#VkBuffer\">VkBuffer</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-pOffsets-parameter",
          "text": "<code>pOffsets</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bindingCount</code> <a href=\"#VkDeviceSize\">VkDeviceSize</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-bindingCount-arraylength",
          "text": "<code>bindingCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers-commonparent",
          "text": "Both of <code>commandBuffer</code>, and the elements of <code>pBuffers</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdBindVertexBuffers2": {
      "core": [
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-firstBinding-03355",
          "text": "<code>firstBinding</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindings</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-firstBinding-03356",
          "text": "The sum of <code>firstBinding</code> and <code>bindingCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindings</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-pOffsets-03357",
          "text": "If <code>pSizes</code> is not <code>NULL</code>, all elements of <code>pOffsets</code> <strong class=\"purple\">must</strong> be less than the size of the corresponding element in <code>pBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-pSizes-03358",
          "text": "If <code>pSizes</code> is not <code>NULL</code>, all elements of <code>pOffsets</code> plus <code>pSizes</code> <strong class=\"purple\">must</strong> be less than or equal to the size of the corresponding element in <code>pBuffers</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-pBuffers-03359",
          "text": "All elements of <code>pBuffers</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_BUFFER_USAGE_VERTEX_BUFFER_BIT</code> flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-pBuffers-03360",
          "text": "Each element of <code>pBuffers</code> that is non-sparse <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-pBuffers-04111",
          "text": "If the <a href=\"#features-nullDescriptor\"><code>nullDescriptor</code></a> feature is not enabled, all elements of <code>pBuffers</code> <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-pBuffers-04112",
          "text": "If an element of <code>pBuffers</code> is <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, then the corresponding element of <code>pOffsets</code> <strong class=\"purple\">must</strong> be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-pStrides-03362",
          "text": "If <code>pStrides</code> is not <code>NULL</code> each element of <code>pStrides</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindingStride</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-pStrides-06209",
          "text": "If <code>pStrides</code> is not <code>NULL</code> each element of <code>pStrides</code> <strong class=\"purple\">must</strong> be either 0 or greater than or equal to the maximum extent of all vertex input attributes fetched from the corresponding binding, where the extent is calculated as the <a href=\"#VkVertexInputAttributeDescription\">VkVertexInputAttributeDescription</a>::<code>offset</code> plus <a href=\"#VkVertexInputAttributeDescription\">VkVertexInputAttributeDescription</a>::<code>format</code> size",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-pBuffers-parameter",
          "text": "<code>pBuffers</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bindingCount</code> valid or <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> <a href=\"#VkBuffer\">VkBuffer</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-pOffsets-parameter",
          "text": "<code>pOffsets</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bindingCount</code> <a href=\"#VkDeviceSize\">VkDeviceSize</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-pSizes-parameter",
          "text": "If <code>pSizes</code> is not <code>NULL</code>, <code>pSizes</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bindingCount</code> <a href=\"#VkDeviceSize\">VkDeviceSize</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-pStrides-parameter",
          "text": "If <code>pStrides</code> is not <code>NULL</code>, <code>pStrides</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>bindingCount</code> <a href=\"#VkDeviceSize\">VkDeviceSize</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-bindingCount-arraylength",
          "text": "If any of <code>pSizes</code>, or <code>pStrides</code> are not <code>NULL</code>, <code>bindingCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBindVertexBuffers2-commonparent",
          "text": "Both of <code>commandBuffer</code>, and the elements of <code>pBuffers</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineVertexInputDivisorStateCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkPipelineVertexInputDivisorStateCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineVertexInputDivisorStateCreateInfoEXT-pVertexBindingDivisors-parameter",
          "text": "<code>pVertexBindingDivisors</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>vertexBindingDivisorCount</code> <a href=\"#VkVertexInputBindingDivisorDescriptionEXT\">VkVertexInputBindingDivisorDescriptionEXT</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineVertexInputDivisorStateCreateInfoEXT-vertexBindingDivisorCount-arraylength",
          "text": "<code>vertexBindingDivisorCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkVertexInputBindingDivisorDescriptionEXT": {
      "core": [
        {
          "vuid": "VUID-VkVertexInputBindingDivisorDescriptionEXT-binding-01869",
          "text": "<code>binding</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxVertexInputBindings</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDivisorDescriptionEXT-vertexAttributeInstanceRateZeroDivisor-02228",
          "text": "If the <code>vertexAttributeInstanceRateZeroDivisor</code> feature is not enabled, <code>divisor</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDivisorDescriptionEXT-vertexAttributeInstanceRateDivisor-02229",
          "text": "If the <code>vertexAttributeInstanceRateDivisor</code> feature is not enabled, <code>divisor</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDivisorDescriptionEXT-divisor-01870",
          "text": "<code>divisor</code> <strong class=\"purple\">must</strong> be a value between <code>0</code> and <code>VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT</code>::<code>maxVertexAttribDivisor</code>, inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkVertexInputBindingDivisorDescriptionEXT-inputRate-01871",
          "text": "<a href=\"#VkVertexInputBindingDescription\">VkVertexInputBindingDescription</a>::<code>inputRate</code> <strong class=\"purple\">must</strong> be of type <code>VK_VERTEX_INPUT_RATE_INSTANCE</code> for this <code>binding</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineTessellationStateCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineTessellationStateCreateInfo-patchControlPoints-01214",
          "text": "<code>patchControlPoints</code> <strong class=\"purple\">must</strong> be greater than zero and less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxTessellationPatchSize</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineTessellationStateCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineTessellationStateCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkPipelineTessellationDomainOriginStateCreateInfo\">VkPipelineTessellationDomainOriginStateCreateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineTessellationStateCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineTessellationStateCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineTessellationDomainOriginStateCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineTessellationDomainOriginStateCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineTessellationDomainOriginStateCreateInfo-domainOrigin-parameter",
          "text": "<code>domainOrigin</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkTessellationDomainOrigin\">VkTessellationDomainOrigin</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineViewportStateCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-viewportCount-01216",
          "text": "If the <a href=\"#features-multiViewport\"><code>multiViewport</code></a> feature is not enabled, <code>viewportCount</code> <strong class=\"purple\">must</strong> not be greater than <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-scissorCount-01217",
          "text": "If the <a href=\"#features-multiViewport\"><code>multiViewport</code></a> feature is not enabled, <code>scissorCount</code> <strong class=\"purple\">must</strong> not be greater than <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-viewportCount-01218",
          "text": "<code>viewportCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxViewports</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-scissorCount-01219",
          "text": "<code>scissorCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxViewports</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-x-02821",
          "text": "The <code>x</code> and <code>y</code> members of <code>offset</code> member of any element of <code>pScissors</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-offset-02822",
          "text": "Evaluation of <span class=\"eq\">(<code>offset.x</code> +  <code>extent.width</code>)</span> <strong class=\"purple\">must</strong> not cause a signed integer addition overflow for any element of <code>pScissors</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-offset-02823",
          "text": "Evaluation of <span class=\"eq\">(<code>offset.y</code> +  <code>extent.height</code>)</span> <strong class=\"purple\">must</strong> not cause a signed integer addition overflow for any element of <code>pScissors</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-scissorCount-04134",
          "text": "If <code>scissorCount</code> and <code>viewportCount</code> are both not dynamic, then <code>scissorCount</code> and <code>viewportCount</code> <strong class=\"purple\">must</strong> be identical",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-viewportCount-04135",
          "text": "If the graphics pipeline is being created with <code>VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT</code> set then <code>viewportCount</code> <strong class=\"purple\">must</strong> be <code>0</code>, otherwise <code>viewportCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-scissorCount-04136",
          "text": "If the graphics pipeline is being created with <code>VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT</code> set then <code>scissorCount</code> <strong class=\"purple\">must</strong> be <code>0</code>, otherwise <code>scissorCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineViewportStateCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetViewportWithCount": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetViewportWithCount-None-08971",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState\"><code>extendedDynamicState</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewportWithCount-viewportCount-03394",
          "text": "<code>viewportCount</code> <strong class=\"purple\">must</strong> be between <code>1</code> and <code>VkPhysicalDeviceLimits</code>::<code>maxViewports</code>, inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewportWithCount-viewportCount-03395",
          "text": "If the <a href=\"#features-multiViewport\"><code>multiViewport</code></a> feature is not enabled, <code>viewportCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewportWithCount-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewportWithCount-pViewports-parameter",
          "text": "<code>pViewports</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>viewportCount</code> valid <a href=\"#VkViewport\">VkViewport</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewportWithCount-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewportWithCount-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewportWithCount-viewportCount-arraylength",
          "text": "<code>viewportCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetScissorWithCount": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetScissorWithCount-None-08971",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState\"><code>extendedDynamicState</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissorWithCount-scissorCount-03397",
          "text": "<code>scissorCount</code> <strong class=\"purple\">must</strong> be between <code>1</code> and <code>VkPhysicalDeviceLimits</code>::<code>maxViewports</code>, inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissorWithCount-scissorCount-03398",
          "text": "If the <a href=\"#features-multiViewport\"><code>multiViewport</code></a> feature is not enabled, <code>scissorCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissorWithCount-x-03399",
          "text": "The <code>x</code> and <code>y</code> members of <code>offset</code> member of any element of <code>pScissors</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissorWithCount-offset-03400",
          "text": "Evaluation of <span class=\"eq\">(<code>offset.x</code> +  <code>extent.width</code>)</span> <strong class=\"purple\">must</strong> not cause a signed integer addition overflow for any element of <code>pScissors</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissorWithCount-offset-03401",
          "text": "Evaluation of <span class=\"eq\">(<code>offset.y</code> +  <code>extent.height</code>)</span> <strong class=\"purple\">must</strong> not cause a signed integer addition overflow for any element of <code>pScissors</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissorWithCount-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissorWithCount-pScissors-parameter",
          "text": "<code>pScissors</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>scissorCount</code> <a href=\"#VkRect2D\">VkRect2D</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissorWithCount-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissorWithCount-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissorWithCount-scissorCount-arraylength",
          "text": "<code>scissorCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetViewport": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetViewport-firstViewport-01223",
          "text": "The sum of <code>firstViewport</code> and <code>viewportCount</code> <strong class=\"purple\">must</strong> be between <code>1</code> and <code>VkPhysicalDeviceLimits</code>::<code>maxViewports</code>, inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewport-firstViewport-01224",
          "text": "If the <a href=\"#features-multiViewport\"><code>multiViewport</code></a> feature is not enabled, <code>firstViewport</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewport-viewportCount-01225",
          "text": "If the <a href=\"#features-multiViewport\"><code>multiViewport</code></a> feature is not enabled, <code>viewportCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewport-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewport-pViewports-parameter",
          "text": "<code>pViewports</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>viewportCount</code> valid <a href=\"#VkViewport\">VkViewport</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewport-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewport-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetViewport-viewportCount-arraylength",
          "text": "<code>viewportCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkViewport": {
      "core": [
        {
          "vuid": "VUID-VkViewport-width-01770",
          "text": "<code>width</code> <strong class=\"purple\">must</strong> be greater than <code>0.0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkViewport-width-01771",
          "text": "<code>width</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxViewportDimensions</code>[0]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkViewport-height-01773",
          "text": "The absolute value of <code>height</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxViewportDimensions</code>[1]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkViewport-x-01774",
          "text": "<code>x</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>viewportBoundsRange</code>[0]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkViewport-x-01232",
          "text": "<span class=\"eq\">(<code>x</code> +  <code>width</code>)</span> <strong class=\"purple\">must</strong> be less than or equal to <code>viewportBoundsRange</code>[1]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkViewport-y-01775",
          "text": "<code>y</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>viewportBoundsRange</code>[0]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkViewport-y-01776",
          "text": "<code>y</code> <strong class=\"purple\">must</strong> be less than or equal to <code>viewportBoundsRange</code>[1]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkViewport-y-01777",
          "text": "<span class=\"eq\">(<code>y</code> +  <code>height</code>)</span> <strong class=\"purple\">must</strong> be greater than or equal to <code>viewportBoundsRange</code>[0]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkViewport-y-01233",
          "text": "<span class=\"eq\">(<code>y</code> +  <code>height</code>)</span> <strong class=\"purple\">must</strong> be less than or equal to <code>viewportBoundsRange</code>[1]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkViewport-minDepth-01234",
          "text": "If the <code><a href=\"#VK_EXT_depth_range_unrestricted\">VK_EXT_depth_range_unrestricted</a></code> extension is not enabled, <code>minDepth</code> <strong class=\"purple\">must</strong> be between <code>0.0</code> and <code>1.0</code>, inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkViewport-maxDepth-01235",
          "text": "If the <code><a href=\"#VK_EXT_depth_range_unrestricted\">VK_EXT_depth_range_unrestricted</a></code> extension is not enabled, <code>maxDepth</code> <strong class=\"purple\">must</strong> be between <code>0.0</code> and <code>1.0</code>, inclusive",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineRasterizationStateCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineRasterizationStateCreateInfo-depthClampEnable-00782",
          "text": "If the <a href=\"#features-depthClamp\"><code>depthClamp</code></a> feature is not enabled, <code>depthClampEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationStateCreateInfo-polygonMode-01507",
          "text": "If the <a href=\"#features-fillModeNonSolid\"><code>fillModeNonSolid</code></a> feature is not enabled, <code>polygonMode</code> <strong class=\"purple\">must</strong> be <code>VK_POLYGON_MODE_FILL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationStateCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationStateCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkPipelineRasterizationConservativeStateCreateInfoEXT\">VkPipelineRasterizationConservativeStateCreateInfoEXT</a>, <a href=\"#VkPipelineRasterizationDepthClipStateCreateInfoEXT\">VkPipelineRasterizationDepthClipStateCreateInfoEXT</a>, or <a href=\"#VkPipelineRasterizationLineStateCreateInfoEXT\">VkPipelineRasterizationLineStateCreateInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationStateCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationStateCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationStateCreateInfo-polygonMode-parameter",
          "text": "<code>polygonMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPolygonMode\">VkPolygonMode</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationStateCreateInfo-cullMode-parameter",
          "text": "<code>cullMode</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkCullModeFlagBits\">VkCullModeFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationStateCreateInfo-frontFace-parameter",
          "text": "<code>frontFace</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFrontFace\">VkFrontFace</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineRasterizationDepthClipStateCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkPipelineRasterizationDepthClipStateCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationDepthClipStateCreateInfoEXT-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineMultisampleStateCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineMultisampleStateCreateInfo-sampleShadingEnable-00784",
          "text": "If the <a href=\"#features-sampleRateShading\"><code>sampleRateShading</code></a> feature is not enabled, <code>sampleShadingEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineMultisampleStateCreateInfo-alphaToOneEnable-00785",
          "text": "If the <a href=\"#features-alphaToOne\"><code>alphaToOne</code></a> feature is not enabled, <code>alphaToOneEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineMultisampleStateCreateInfo-minSampleShading-00786",
          "text": "<code>minSampleShading</code> <strong class=\"purple\">must</strong> be in the range <span class=\"eq\">[0,1]</span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineMultisampleStateCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineMultisampleStateCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkPipelineSampleLocationsStateCreateInfoEXT\">VkPipelineSampleLocationsStateCreateInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineMultisampleStateCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineMultisampleStateCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineMultisampleStateCreateInfo-rasterizationSamples-parameter",
          "text": "<code>rasterizationSamples</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSampleCountFlagBits\">VkSampleCountFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineMultisampleStateCreateInfo-pSampleMask-parameter",
          "text": "If <code>pSampleMask</code> is not <code>NULL</code>, <code>pSampleMask</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of \\(\\lceil{\\mathit{rasterizationSamples} \\over 32}\\rceil\\) <a href=\"#VkSampleMask\">VkSampleMask</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetRasterizerDiscardEnable": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetRasterizerDiscardEnable-None-08970",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState2\"><code>extendedDynamicState2</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetRasterizerDiscardEnable-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetRasterizerDiscardEnable-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetRasterizerDiscardEnable-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineSampleLocationsStateCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkPipelineSampleLocationsStateCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineSampleLocationsStateCreateInfoEXT-sampleLocationsInfo-parameter",
          "text": "<code>sampleLocationsInfo</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSampleLocationsInfoEXT\">VkSampleLocationsInfoEXT</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkSampleLocationsInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkSampleLocationsInfoEXT-sampleLocationsPerPixel-01526",
          "text": "<code>sampleLocationsPerPixel</code> <strong class=\"purple\">must</strong> be a bit value that is set in <a href=\"#VkPhysicalDeviceSampleLocationsPropertiesEXT\">VkPhysicalDeviceSampleLocationsPropertiesEXT</a>::<code>sampleLocationSampleCounts</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSampleLocationsInfoEXT-sampleLocationsCount-01527",
          "text": "<code>sampleLocationsCount</code> <strong class=\"purple\">must</strong> equal <span class=\"eq\"><code>sampleLocationsPerPixel</code> × <code>sampleLocationGridSize.width</code> × <code>sampleLocationGridSize.height</code></span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSampleLocationsInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSampleLocationsInfoEXT-pSampleLocations-parameter",
          "text": "If <code>sampleLocationsCount</code> is not <code>0</code>, <code>pSampleLocations</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>sampleLocationsCount</code> <a href=\"#VkSampleLocationEXT\">VkSampleLocationEXT</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetSampleLocationsEXT": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetSampleLocationsEXT-variableSampleLocations-01530",
          "text": "If <a href=\"#VkPhysicalDeviceSampleLocationsPropertiesEXT\">VkPhysicalDeviceSampleLocationsPropertiesEXT</a>::<code>variableSampleLocations</code> is <code>VK_FALSE</code> then the current render pass <strong class=\"purple\">must</strong> have been begun by specifying a <a href=\"#VkRenderPassSampleLocationsBeginInfoEXT\">VkRenderPassSampleLocationsBeginInfoEXT</a> structure whose <code>pPostSubpassSampleLocations</code> member contains an element with a <code>subpassIndex</code> matching the current subpass index and the <code>sampleLocationsInfo</code> member of that element <strong class=\"purple\">must</strong> match the sample locations state pointed to by <code>pSampleLocationsInfo</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetSampleLocationsEXT-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetSampleLocationsEXT-pSampleLocationsInfo-parameter",
          "text": "<code>pSampleLocationsInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSampleLocationsInfoEXT\">VkSampleLocationsInfoEXT</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetSampleLocationsEXT-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetSampleLocationsEXT-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceFragmentShadingRatesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceFragmentShadingRatesKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceFragmentShadingRatesKHR-pFragmentShadingRateCount-parameter",
          "text": "<code>pFragmentShadingRateCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceFragmentShadingRatesKHR-pFragmentShadingRates-parameter",
          "text": "If the value referenced by <code>pFragmentShadingRateCount</code> is not <code>0</code>, and <code>pFragmentShadingRates</code> is not <code>NULL</code>, <code>pFragmentShadingRates</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pFragmentShadingRateCount</code> <a href=\"#VkPhysicalDeviceFragmentShadingRateKHR\">VkPhysicalDeviceFragmentShadingRateKHR</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceFragmentShadingRateKHR": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceFragmentShadingRateKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceFragmentShadingRateKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineFragmentShadingRateStateCreateInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkPipelineFragmentShadingRateStateCreateInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetFragmentShadingRateKHR": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-pipelineFragmentShadingRate-04507",
          "text": "If <a href=\"#features-pipelineFragmentShadingRate\"><code>pipelineFragmentShadingRate</code></a> is not enabled, <code>pFragmentSize-&gt;width</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-pipelineFragmentShadingRate-04508",
          "text": "If <a href=\"#features-pipelineFragmentShadingRate\"><code>pipelineFragmentShadingRate</code></a> is not enabled, <code>pFragmentSize-&gt;height</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-pipelineFragmentShadingRate-04509",
          "text": "One of <a href=\"#features-pipelineFragmentShadingRate\"><code>pipelineFragmentShadingRate</code></a>, <a href=\"#features-primitiveFragmentShadingRate\"><code>primitiveFragmentShadingRate</code></a>, or <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-primitiveFragmentShadingRate-04510",
          "text": "If the <a href=\"#features-primitiveFragmentShadingRate\"><code>primitiveFragmentShadingRate</code></a> feature is not enabled, <code>combinerOps</code>[0] <strong class=\"purple\">must</strong> be <code>VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-attachmentFragmentShadingRate-04511",
          "text": "If the <a href=\"#features-attachmentFragmentShadingRate\"><code>attachmentFragmentShadingRate</code></a> feature is not enabled, <code>combinerOps</code>[1] <strong class=\"purple\">must</strong> be <code>VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-fragmentSizeNonTrivialCombinerOps-04512",
          "text": "If the <a href=\"#limits-fragmentShadingRateNonTrivialCombinerOps\"><code>fragmentSizeNonTrivialCombinerOps</code></a> limit is not supported, elements of <code>combinerOps</code> <strong class=\"purple\">must</strong> be either <code>VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR</code> or <code>VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-pFragmentSize-04513",
          "text": "<code>pFragmentSize-&gt;width</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-pFragmentSize-04514",
          "text": "<code>pFragmentSize-&gt;height</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-pFragmentSize-04515",
          "text": "<code>pFragmentSize-&gt;width</code> <strong class=\"purple\">must</strong> be a power-of-two value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-pFragmentSize-04516",
          "text": "<code>pFragmentSize-&gt;height</code> <strong class=\"purple\">must</strong> be a power-of-two value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-pFragmentSize-04517",
          "text": "<code>pFragmentSize-&gt;width</code> <strong class=\"purple\">must</strong> be less than or equal to <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-pFragmentSize-04518",
          "text": "<code>pFragmentSize-&gt;height</code> <strong class=\"purple\">must</strong> be less than or equal to <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-pFragmentSize-parameter",
          "text": "<code>pFragmentSize</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkExtent2D\">VkExtent2D</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-combinerOps-parameter",
          "text": "Each element of <code>combinerOps</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFragmentShadingRateCombinerOpKHR\">VkFragmentShadingRateCombinerOpKHR</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFragmentShadingRateKHR-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineRasterizationLineStateCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkPipelineRasterizationLineStateCreateInfoEXT-lineRasterizationMode-02768",
          "text": "If <code>lineRasterizationMode</code> is <code>VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT</code>, then the <a href=\"#features-rectangularLines\"><code>rectangularLines</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationLineStateCreateInfoEXT-lineRasterizationMode-02769",
          "text": "If <code>lineRasterizationMode</code> is <code>VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT</code>, then the <a href=\"#features-bresenhamLines\"><code>bresenhamLines</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationLineStateCreateInfoEXT-lineRasterizationMode-02770",
          "text": "If <code>lineRasterizationMode</code> is <code>VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT</code>, then the <a href=\"#features-smoothLines\"><code>smoothLines</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationLineStateCreateInfoEXT-stippledLineEnable-02771",
          "text": "If <code>stippledLineEnable</code> is <code>VK_TRUE</code> and <code>lineRasterizationMode</code> is <code>VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT</code>, then the <a href=\"#features-stippledRectangularLines\"><code>stippledRectangularLines</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationLineStateCreateInfoEXT-stippledLineEnable-02772",
          "text": "If <code>stippledLineEnable</code> is <code>VK_TRUE</code> and <code>lineRasterizationMode</code> is <code>VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT</code>, then the <a href=\"#features-stippledBresenhamLines\"><code>stippledBresenhamLines</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationLineStateCreateInfoEXT-stippledLineEnable-02773",
          "text": "If <code>stippledLineEnable</code> is <code>VK_TRUE</code> and <code>lineRasterizationMode</code> is <code>VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT</code>, then the <a href=\"#features-stippledSmoothLines\"><code>stippledSmoothLines</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationLineStateCreateInfoEXT-stippledLineEnable-02774",
          "text": "If <code>stippledLineEnable</code> is <code>VK_TRUE</code> and <code>lineRasterizationMode</code> is <code>VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT</code>, then the <a href=\"#features-stippledRectangularLines\"><code>stippledRectangularLines</code></a> feature <strong class=\"purple\">must</strong> be enabled and <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>strictLines</code> <strong class=\"purple\">must</strong> be <code>VK_TRUE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationLineStateCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationLineStateCreateInfoEXT-lineRasterizationMode-parameter",
          "text": "<code>lineRasterizationMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkLineRasterizationModeEXT\">VkLineRasterizationModeEXT</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetLineWidth": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetLineWidth-lineWidth-00788",
          "text": "If the <a href=\"#features-wideLines\"><code>wideLines</code></a> feature is not enabled, <code>lineWidth</code> <strong class=\"purple\">must</strong> be <code>1.0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetLineWidth-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetLineWidth-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetLineWidth-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetLineStippleEXT": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetLineStippleEXT-lineStippleFactor-02776",
          "text": "<code>lineStippleFactor</code> <strong class=\"purple\">must</strong> be in the range <span class=\"eq\">[1,256]</span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetLineStippleEXT-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetLineStippleEXT-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetLineStippleEXT-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetFrontFace": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetFrontFace-None-08971",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState\"><code>extendedDynamicState</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFrontFace-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFrontFace-frontFace-parameter",
          "text": "<code>frontFace</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFrontFace\">VkFrontFace</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFrontFace-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetFrontFace-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetCullMode": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetCullMode-None-08971",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState\"><code>extendedDynamicState</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetCullMode-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetCullMode-cullMode-parameter",
          "text": "<code>cullMode</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkCullModeFlagBits\">VkCullModeFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetCullMode-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetCullMode-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetDepthBiasEnable": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetDepthBiasEnable-None-08970",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState2\"><code>extendedDynamicState2</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBiasEnable-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBiasEnable-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBiasEnable-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetDepthBias": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetDepthBias-depthBiasClamp-00790",
          "text": "If the <a href=\"#features-depthBiasClamp\"><code>depthBiasClamp</code></a> feature is not enabled, <code>depthBiasClamp</code> <strong class=\"purple\">must</strong> be <code>0.0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBias-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBias-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBias-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineRasterizationConservativeStateCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkPipelineRasterizationConservativeStateCreateInfoEXT-extraPrimitiveOverestimationSize-01769",
          "text": "<code>extraPrimitiveOverestimationSize</code> <strong class=\"purple\">must</strong> be in the range of <code>0.0</code> to <code>VkPhysicalDeviceConservativeRasterizationPropertiesEXT</code>::<code>maxExtraPrimitiveOverestimationSize</code> inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationConservativeStateCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationConservativeStateCreateInfoEXT-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineRasterizationConservativeStateCreateInfoEXT-conservativeRasterizationMode-parameter",
          "text": "<code>conservativeRasterizationMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkConservativeRasterizationModeEXT\">VkConservativeRasterizationModeEXT</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineDiscardRectangleStateCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkPipelineDiscardRectangleStateCreateInfoEXT-discardRectangleCount-00582",
          "text": "<code>discardRectangleCount</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceDiscardRectanglePropertiesEXT</code>::<code>maxDiscardRectangles</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDiscardRectangleStateCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDiscardRectangleStateCreateInfoEXT-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDiscardRectangleStateCreateInfoEXT-discardRectangleMode-parameter",
          "text": "<code>discardRectangleMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDiscardRectangleModeEXT\">VkDiscardRectangleModeEXT</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetDiscardRectangleEXT": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEXT-firstDiscardRectangle-00585",
          "text": "The sum of <code>firstDiscardRectangle</code> and <code>discardRectangleCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceDiscardRectanglePropertiesEXT\">VkPhysicalDeviceDiscardRectanglePropertiesEXT</a>::<code>maxDiscardRectangles</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEXT-x-00587",
          "text": "The <code>x</code> and <code>y</code> member of <code>offset</code> in each <a href=\"#VkRect2D\">VkRect2D</a> element of <code>pDiscardRectangles</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEXT-offset-00588",
          "text": "Evaluation of <span class=\"eq\">(<code>offset.x</code> +  <code>extent.width</code>)</span> in each <a href=\"#VkRect2D\">VkRect2D</a> element of <code>pDiscardRectangles</code> <strong class=\"purple\">must</strong> not cause a signed integer addition overflow",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEXT-offset-00589",
          "text": "Evaluation of <span class=\"eq\">(<code>offset.y</code> +  <code>extent.height</code>)</span> in each <a href=\"#VkRect2D\">VkRect2D</a> element of <code>pDiscardRectangles</code> <strong class=\"purple\">must</strong> not cause a signed integer addition overflow",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEXT-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEXT-pDiscardRectangles-parameter",
          "text": "<code>pDiscardRectangles</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>discardRectangleCount</code> <a href=\"#VkRect2D\">VkRect2D</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEXT-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEXT-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEXT-discardRectangleCount-arraylength",
          "text": "<code>discardRectangleCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetDiscardRectangleEnableEXT": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEnableEXT-specVersion-07851",
          "text": "The <code><a href=\"#VK_EXT_discard_rectangles\">VK_EXT_discard_rectangles</a></code> extension <strong class=\"purple\">must</strong> be enabled, and the implementation <strong class=\"purple\">must</strong> support at least <code>specVersion</code> <code>2</code> of this extension",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEnableEXT-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEnableEXT-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleEnableEXT-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetDiscardRectangleModeEXT": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleModeEXT-specVersion-07852",
          "text": "The <code><a href=\"#VK_EXT_discard_rectangles\">VK_EXT_discard_rectangles</a></code> extension <strong class=\"purple\">must</strong> be enabled, and the implementation <strong class=\"purple\">must</strong> support at least <code>specVersion</code> <code>2</code> of this extension",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleModeEXT-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleModeEXT-discardRectangleMode-parameter",
          "text": "<code>discardRectangleMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDiscardRectangleModeEXT\">VkDiscardRectangleModeEXT</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleModeEXT-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDiscardRectangleModeEXT-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetScissor": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetScissor-firstScissor-00592",
          "text": "The sum of <code>firstScissor</code> and <code>scissorCount</code> <strong class=\"purple\">must</strong> be between <code>1</code> and <code>VkPhysicalDeviceLimits</code>::<code>maxViewports</code>, inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissor-firstScissor-00593",
          "text": "If the <a href=\"#features-multiViewport\"><code>multiViewport</code></a> feature is not enabled, <code>firstScissor</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissor-scissorCount-00594",
          "text": "If the <a href=\"#features-multiViewport\"><code>multiViewport</code></a> feature is not enabled, <code>scissorCount</code> <strong class=\"purple\">must</strong> be <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissor-x-00595",
          "text": "The <code>x</code> and <code>y</code> members of <code>offset</code> member of any element of <code>pScissors</code> <strong class=\"purple\">must</strong> be greater than or equal to <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissor-offset-00596",
          "text": "Evaluation of <span class=\"eq\">(<code>offset.x</code> +  <code>extent.width</code>)</span> <strong class=\"purple\">must</strong> not cause a signed integer addition overflow for any element of <code>pScissors</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissor-offset-00597",
          "text": "Evaluation of <span class=\"eq\">(<code>offset.y</code> +  <code>extent.height</code>)</span> <strong class=\"purple\">must</strong> not cause a signed integer addition overflow for any element of <code>pScissors</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissor-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissor-pScissors-parameter",
          "text": "<code>pScissors</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>scissorCount</code> <a href=\"#VkRect2D\">VkRect2D</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissor-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissor-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetScissor-scissorCount-arraylength",
          "text": "<code>scissorCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineDepthStencilStateCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineDepthStencilStateCreateInfo-depthBoundsTestEnable-00598",
          "text": "If the <a href=\"#features-depthBounds\"><code>depthBounds</code></a> feature is not enabled, <code>depthBoundsTestEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDepthStencilStateCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDepthStencilStateCreateInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDepthStencilStateCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDepthStencilStateCreateInfo-depthCompareOp-parameter",
          "text": "<code>depthCompareOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCompareOp\">VkCompareOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDepthStencilStateCreateInfo-front-parameter",
          "text": "<code>front</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkStencilOpState\">VkStencilOpState</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineDepthStencilStateCreateInfo-back-parameter",
          "text": "<code>back</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkStencilOpState\">VkStencilOpState</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetDepthBoundsTestEnable": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetDepthBoundsTestEnable-None-08971",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState\"><code>extendedDynamicState</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBoundsTestEnable-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBoundsTestEnable-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBoundsTestEnable-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetDepthBounds": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetDepthBounds-minDepthBounds-00600",
          "text": "If the <code><a href=\"#VK_EXT_depth_range_unrestricted\">VK_EXT_depth_range_unrestricted</a></code> extension is not enabled <code>minDepthBounds</code> <strong class=\"purple\">must</strong> be between <code>0.0</code> and <code>1.0</code>, inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBounds-maxDepthBounds-00601",
          "text": "If the <code><a href=\"#VK_EXT_depth_range_unrestricted\">VK_EXT_depth_range_unrestricted</a></code> extension is not enabled <code>maxDepthBounds</code> <strong class=\"purple\">must</strong> be between <code>0.0</code> and <code>1.0</code>, inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBounds-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBounds-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthBounds-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetStencilTestEnable": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetStencilTestEnable-None-08971",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState\"><code>extendedDynamicState</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilTestEnable-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilTestEnable-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilTestEnable-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetStencilOp": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetStencilOp-None-08971",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState\"><code>extendedDynamicState</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilOp-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilOp-faceMask-parameter",
          "text": "<code>faceMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkStencilFaceFlagBits\">VkStencilFaceFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilOp-faceMask-requiredbitmask",
          "text": "<code>faceMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilOp-failOp-parameter",
          "text": "<code>failOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkStencilOp\">VkStencilOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilOp-passOp-parameter",
          "text": "<code>passOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkStencilOp\">VkStencilOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilOp-depthFailOp-parameter",
          "text": "<code>depthFailOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkStencilOp\">VkStencilOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilOp-compareOp-parameter",
          "text": "<code>compareOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCompareOp\">VkCompareOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilOp-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilOp-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "VkStencilOpState": {
      "core": [
        {
          "vuid": "VUID-VkStencilOpState-failOp-parameter",
          "text": "<code>failOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkStencilOp\">VkStencilOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkStencilOpState-passOp-parameter",
          "text": "<code>passOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkStencilOp\">VkStencilOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkStencilOpState-depthFailOp-parameter",
          "text": "<code>depthFailOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkStencilOp\">VkStencilOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkStencilOpState-compareOp-parameter",
          "text": "<code>compareOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCompareOp\">VkCompareOp</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetStencilCompareMask": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetStencilCompareMask-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilCompareMask-faceMask-parameter",
          "text": "<code>faceMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkStencilFaceFlagBits\">VkStencilFaceFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilCompareMask-faceMask-requiredbitmask",
          "text": "<code>faceMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilCompareMask-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilCompareMask-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetStencilWriteMask": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetStencilWriteMask-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilWriteMask-faceMask-parameter",
          "text": "<code>faceMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkStencilFaceFlagBits\">VkStencilFaceFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilWriteMask-faceMask-requiredbitmask",
          "text": "<code>faceMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilWriteMask-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilWriteMask-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetStencilReference": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetStencilReference-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilReference-faceMask-parameter",
          "text": "<code>faceMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkStencilFaceFlagBits\">VkStencilFaceFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilReference-faceMask-requiredbitmask",
          "text": "<code>faceMask</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilReference-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetStencilReference-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetDepthTestEnable": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetDepthTestEnable-None-08971",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState\"><code>extendedDynamicState</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthTestEnable-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthTestEnable-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthTestEnable-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetDepthCompareOp": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetDepthCompareOp-None-08971",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState\"><code>extendedDynamicState</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthCompareOp-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthCompareOp-depthCompareOp-parameter",
          "text": "<code>depthCompareOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCompareOp\">VkCompareOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthCompareOp-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthCompareOp-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetDepthWriteEnable": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetDepthWriteEnable-None-08971",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>the <a href=\"#features-extendedDynamicState\"><code>extendedDynamicState</code></a>\nfeature is enabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthWriteEnable-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthWriteEnable-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetDepthWriteEnable-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineColorBlendStateCreateInfo": {
      "core": [
        {
          "vuid": "VUID-VkPipelineColorBlendStateCreateInfo-pAttachments-00605",
          "text": "If the <a href=\"#features-independentBlend\"><code>independentBlend</code></a> feature is not enabled, all elements of <code>pAttachments</code> <strong class=\"purple\">must</strong> be identical",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendStateCreateInfo-logicOpEnable-00606",
          "text": "If the <a href=\"#features-logicOp\"><code>logicOp</code></a> feature is not enabled, <code>logicOpEnable</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendStateCreateInfo-logicOpEnable-00607",
          "text": "If <code>logicOpEnable</code> is <code>VK_TRUE</code>, <code>logicOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkLogicOp\">VkLogicOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendStateCreateInfo-pAttachments-07353",
          "text": "If <code>attachmentCount</code> is not <code>0</code> <code>pAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>attachmentCount</code> valid <a href=\"#VkPipelineColorBlendAttachmentState\">VkPipelineColorBlendAttachmentState</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendStateCreateInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendStateCreateInfo-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkPipelineColorBlendAdvancedStateCreateInfoEXT\">VkPipelineColorBlendAdvancedStateCreateInfoEXT</a> or <a href=\"#VkPipelineColorWriteCreateInfoEXT\">VkPipelineColorWriteCreateInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendStateCreateInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendStateCreateInfo-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendStateCreateInfo-pAttachments-parameter",
          "text": "If <code>attachmentCount</code> is not <code>0</code>, and <code>pAttachments</code> is not <code>NULL</code>, <code>pAttachments</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>attachmentCount</code> valid <a href=\"#VkPipelineColorBlendAttachmentState\">VkPipelineColorBlendAttachmentState</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineColorBlendAttachmentState": {
      "core": [
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-srcColorBlendFactor-00608",
          "text": "If the <a href=\"#features-dualSrcBlend\"><code>dualSrcBlend</code></a> feature is not enabled, <code>srcColorBlendFactor</code> <strong class=\"purple\">must</strong> not be <code>VK_BLEND_FACTOR_SRC1_COLOR</code>, <code>VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR</code>, <code>VK_BLEND_FACTOR_SRC1_ALPHA</code>, or <code>VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-dstColorBlendFactor-00609",
          "text": "If the <a href=\"#features-dualSrcBlend\"><code>dualSrcBlend</code></a> feature is not enabled, <code>dstColorBlendFactor</code> <strong class=\"purple\">must</strong> not be <code>VK_BLEND_FACTOR_SRC1_COLOR</code>, <code>VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR</code>, <code>VK_BLEND_FACTOR_SRC1_ALPHA</code>, or <code>VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-srcAlphaBlendFactor-00610",
          "text": "If the <a href=\"#features-dualSrcBlend\"><code>dualSrcBlend</code></a> feature is not enabled, <code>srcAlphaBlendFactor</code> <strong class=\"purple\">must</strong> not be <code>VK_BLEND_FACTOR_SRC1_COLOR</code>, <code>VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR</code>, <code>VK_BLEND_FACTOR_SRC1_ALPHA</code>, or <code>VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-dstAlphaBlendFactor-00611",
          "text": "If the <a href=\"#features-dualSrcBlend\"><code>dualSrcBlend</code></a> feature is not enabled, <code>dstAlphaBlendFactor</code> <strong class=\"purple\">must</strong> not be <code>VK_BLEND_FACTOR_SRC1_COLOR</code>, <code>VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR</code>, <code>VK_BLEND_FACTOR_SRC1_ALPHA</code>, or <code>VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-colorBlendOp-01406",
          "text": "If either of <code>colorBlendOp</code> or <code>alphaBlendOp</code> is an <a href=\"#framebuffer-blend-advanced\">advanced blend operation</a>, then <code>colorBlendOp</code> <strong class=\"purple\">must</strong> equal <code>alphaBlendOp</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-advancedBlendIndependentBlend-01407",
          "text": "If <a href=\"#VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT\">VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT</a>::<code>advancedBlendIndependentBlend</code> is <code>VK_FALSE</code> and <code>colorBlendOp</code> is an <a href=\"#framebuffer-blend-advanced\">advanced blend operation</a>, then <code>colorBlendOp</code> <strong class=\"purple\">must</strong> be the same for all attachments",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-advancedBlendIndependentBlend-01408",
          "text": "If <a href=\"#VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT\">VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT</a>::<code>advancedBlendIndependentBlend</code> is <code>VK_FALSE</code> and <code>alphaBlendOp</code> is an <a href=\"#framebuffer-blend-advanced\">advanced blend operation</a>, then <code>alphaBlendOp</code> <strong class=\"purple\">must</strong> be the same for all attachments",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-advancedBlendAllOperations-01409",
          "text": "If <a href=\"#VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT\">VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT</a>::<code>advancedBlendAllOperations</code> is <code>VK_FALSE</code>, then <code>colorBlendOp</code> <strong class=\"purple\">must</strong> not be <code>VK_BLEND_OP_ZERO_EXT</code>, <code>VK_BLEND_OP_SRC_EXT</code>, <code>VK_BLEND_OP_DST_EXT</code>, <code>VK_BLEND_OP_SRC_OVER_EXT</code>, <code>VK_BLEND_OP_DST_OVER_EXT</code>, <code>VK_BLEND_OP_SRC_IN_EXT</code>, <code>VK_BLEND_OP_DST_IN_EXT</code>, <code>VK_BLEND_OP_SRC_OUT_EXT</code>, <code>VK_BLEND_OP_DST_OUT_EXT</code>, <code>VK_BLEND_OP_SRC_ATOP_EXT</code>, <code>VK_BLEND_OP_DST_ATOP_EXT</code>, <code>VK_BLEND_OP_XOR_EXT</code>, <code>VK_BLEND_OP_INVERT_EXT</code>, <code>VK_BLEND_OP_INVERT_RGB_EXT</code>, <code>VK_BLEND_OP_LINEARDODGE_EXT</code>, <code>VK_BLEND_OP_LINEARBURN_EXT</code>, <code>VK_BLEND_OP_VIVIDLIGHT_EXT</code>, <code>VK_BLEND_OP_LINEARLIGHT_EXT</code>, <code>VK_BLEND_OP_PINLIGHT_EXT</code>, <code>VK_BLEND_OP_HARDMIX_EXT</code>, <code>VK_BLEND_OP_PLUS_EXT</code>, <code>VK_BLEND_OP_PLUS_CLAMPED_EXT</code>, <code>VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT</code>, <code>VK_BLEND_OP_PLUS_DARKER_EXT</code>, <code>VK_BLEND_OP_MINUS_EXT</code>, <code>VK_BLEND_OP_MINUS_CLAMPED_EXT</code>, <code>VK_BLEND_OP_CONTRAST_EXT</code>, <code>VK_BLEND_OP_INVERT_OVG_EXT</code>, <code>VK_BLEND_OP_RED_EXT</code>, <code>VK_BLEND_OP_GREEN_EXT</code>, or <code>VK_BLEND_OP_BLUE_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-colorBlendOp-01410",
          "text": "If <code>colorBlendOp</code> or <code>alphaBlendOp</code> is an <a href=\"#framebuffer-blend-advanced\">advanced blend operation</a>, then <code>colorAttachmentCount</code> of the subpass this pipeline is compiled against <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT\">VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT</a>::<code>advancedBlendMaxColorAttachments</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-srcColorBlendFactor-parameter",
          "text": "<code>srcColorBlendFactor</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBlendFactor\">VkBlendFactor</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-dstColorBlendFactor-parameter",
          "text": "<code>dstColorBlendFactor</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBlendFactor\">VkBlendFactor</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-colorBlendOp-parameter",
          "text": "<code>colorBlendOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBlendOp\">VkBlendOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-srcAlphaBlendFactor-parameter",
          "text": "<code>srcAlphaBlendFactor</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBlendFactor\">VkBlendFactor</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-dstAlphaBlendFactor-parameter",
          "text": "<code>dstAlphaBlendFactor</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBlendFactor\">VkBlendFactor</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-alphaBlendOp-parameter",
          "text": "<code>alphaBlendOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBlendOp\">VkBlendOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAttachmentState-colorWriteMask-parameter",
          "text": "<code>colorWriteMask</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkColorComponentFlagBits\">VkColorComponentFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetBlendConstants": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetBlendConstants-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetBlendConstants-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetBlendConstants-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineColorBlendAdvancedStateCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkPipelineColorBlendAdvancedStateCreateInfoEXT-srcPremultiplied-01424",
          "text": "If the <a href=\"#limits-advancedBlendNonPremultipliedSrcColor\">non-premultiplied source color</a> property is not supported, <code>srcPremultiplied</code> <strong class=\"purple\">must</strong> be <code>VK_TRUE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAdvancedStateCreateInfoEXT-dstPremultiplied-01425",
          "text": "If the <a href=\"#limits-advancedBlendNonPremultipliedDstColor\">non-premultiplied destination color</a> property is not supported, <code>dstPremultiplied</code> <strong class=\"purple\">must</strong> be <code>VK_TRUE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAdvancedStateCreateInfoEXT-blendOverlap-01426",
          "text": "If the <a href=\"#limits-advancedBlendCorrelatedOverlap\">correlated overlap</a> property is not supported, <code>blendOverlap</code> <strong class=\"purple\">must</strong> be <code>VK_BLEND_OVERLAP_UNCORRELATED_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAdvancedStateCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorBlendAdvancedStateCreateInfoEXT-blendOverlap-parameter",
          "text": "<code>blendOverlap</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBlendOverlapEXT\">VkBlendOverlapEXT</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetLogicOpEXT": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetLogicOpEXT-None-09422",
          "text": "At least one of the following <strong class=\"purple\">must</strong> be true:<div class=\"ulist\">\n<ul>\n<li>\n<p>The <a href=\"#features-extendedDynamicState2LogicOp\"><code>extendedDynamicState2LogicOp</code></a> feature is\nenabled</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetLogicOpEXT-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetLogicOpEXT-logicOp-parameter",
          "text": "<code>logicOp</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkLogicOp\">VkLogicOp</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetLogicOpEXT-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetLogicOpEXT-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        }
      ]
    },
    "VkPipelineColorWriteCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkPipelineColorWriteCreateInfoEXT-pAttachments-04801",
          "text": "If the <a href=\"#features-colorWriteEnable\"><code>colorWriteEnable</code></a> feature is not enabled, all elements of <code>pColorWriteEnables</code> <strong class=\"purple\">must</strong> be <code>VK_TRUE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorWriteCreateInfoEXT-attachmentCount-07608",
          "text": "<code>attachmentCount</code> <strong class=\"purple\">must</strong> be equal to the <code>attachmentCount</code> member of the <code>VkPipelineColorBlendStateCreateInfo</code> structure specified during pipeline creation",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorWriteCreateInfoEXT-attachmentCount-06655",
          "text": "<code>attachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>maxColorAttachments</code> member of <code>VkPhysicalDeviceLimits</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorWriteCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPipelineColorWriteCreateInfoEXT-pColorWriteEnables-parameter",
          "text": "If <code>attachmentCount</code> is not <code>0</code>, <code>pColorWriteEnables</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>attachmentCount</code> <a href=\"#VkBool32\">VkBool32</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdSetColorWriteEnableEXT": {
      "core": [
        {
          "vuid": "VUID-vkCmdSetColorWriteEnableEXT-None-04803",
          "text": "The <a href=\"#features-colorWriteEnable\"><code>colorWriteEnable</code></a> feature <strong class=\"purple\">must</strong> be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetColorWriteEnableEXT-attachmentCount-06656",
          "text": "<code>attachmentCount</code> <strong class=\"purple\">must</strong> be less than or equal to the <code>maxColorAttachments</code> member of <code>VkPhysicalDeviceLimits</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetColorWriteEnableEXT-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetColorWriteEnableEXT-pColorWriteEnables-parameter",
          "text": "<code>pColorWriteEnables</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>attachmentCount</code> <a href=\"#VkBool32\">VkBool32</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetColorWriteEnableEXT-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetColorWriteEnableEXT-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdSetColorWriteEnableEXT-attachmentCount-arraylength",
          "text": "<code>attachmentCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdDispatch": {
      "core": [
        {
          "vuid": "VUID-vkCmdDispatch-magFilter-04553",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>magFilter</code> or <code>minFilter</code> equal to <code>VK_FILTER_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-mipmapMode-04770",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>mipmapMode</code> equal to <code>VK_SAMPLER_MIPMAP_MODE_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-aspectMask-06478",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <a href=\"#textures-depth-compare-operation\">depth comparison</a>, the image view <strong class=\"purple\">must</strong> have been created with an <code>aspectMask</code> that contains <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-02691",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using atomic operations as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-07888",
          "text": "If a <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> descriptor is accessed using atomic operations as a result of this command, then the storage texel buffer&#8217;s <a href=\"#resources-buffer-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-02692",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-02693",
          "text": "If the <a href=\"#VK_EXT_filter_cubic\">VK_EXT_filter_cubic</a> extension is not enabled and any <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, it <strong class=\"purple\">must</strong> not have a <a href=\"#VkImageViewType\">VkImageViewType</a> of <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-filterCubic-02694",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubic</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-filterCubicMinmax-02695",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> with a reduction mode of either <code>VK_SAMPLER_REDUCTION_MODE_MIN</code> or <code>VK_SAMPLER_REDUCTION_MODE_MAX</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering together with minmax filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubicMinmax</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-08600",
          "text": "For each set <em>n</em> that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a descriptor set <strong class=\"purple\">must</strong> have been bound to <em>n</em> at the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for set <em>n</em>, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-08601",
          "text": "For each push constant that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a push constant value <strong class=\"purple\">must</strong> have been set for the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for push constants, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-08114",
          "text": "Descriptors in each bound descriptor set, specified via     <a href=\"#vkCmdBindDescriptorSets\">vkCmdBindDescriptorSets</a>, <strong class=\"purple\">must</strong> be valid as described by     <a href=\"#descriptor-validity\">descriptor validity</a> if they are statically used     by <a href=\"#shaders-binding\">a bound shader</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-08606",
          "text": "A     valid pipeline <strong class=\"purple\">must</strong> be bound to the pipeline bind point used by this     command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-08608",
          "text": "There     <strong class=\"purple\">must</strong> not have been any calls to dynamic state setting commands for any     state not specified as dynamic in the <a href=\"#VkPipeline\">VkPipeline</a> object bound to     the pipeline bind point used by this command, since that pipeline was     bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-08609",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used to sample from any <a href=\"#VkImage\">VkImage</a> with a <a href=\"#VkImageView\">VkImageView</a> of the type <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, <code>VK_IMAGE_VIEW_TYPE_1D_ARRAY</code>, <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code> or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-08610",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions with <code>ImplicitLod</code>, <code>Dref</code> or <code>Proj</code> in their name, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-08611",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions that includes a LOD bias or any offset values, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-uniformBuffers-06935",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a uniform buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-storageBuffers-06936",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a storage buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-commandBuffer-02707",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource accessed by <a href=\"#shaders-binding\">bound shaders</a> <strong class=\"purple\">must</strong> not be a protected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-06550",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> only be used with <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-ConstOffset-06551",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> not use the <code>ConstOffset</code> and <code>Offset</code> operands",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-viewType-07752",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the image view&#8217;s <code>viewType</code> <strong class=\"purple\">must</strong> match the <code>Dim</code> operand of the <code>OpTypeImage</code> as described in <a href=\"#textures-operation-validation\">Instruction/Sampler/Image View Validation</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-format-07753",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the <a href=\"#formats-numericformat\">numeric type</a> of the image view&#8217;s <code>format</code> and the <code>Sampled</code> <code>Type</code> operand of the <code>OpTypeImage</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-OpImageWrite-08795",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the image view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-OpImageWrite-04469",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the buffer view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-SampledType-04470",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-SampledType-04471",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-SampledType-04472",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-SampledType-04473",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-sparseImageInt64Atomics-04474",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkImage\">VkImage</a> objects created with the <code>VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-sparseImageInt64Atomics-04475",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkBuffer\">VkBuffer</a> objects created with the <code>VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-None-07288",
          "text": "Any shader invocation executed by this command <strong class=\"purple\">must</strong> <a href=\"#shaders-termination\">terminate</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-commandBuffer-02712",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource written to by the <code>VkPipeline</code> object bound to the pipeline bind point used by this command <strong class=\"purple\">must</strong> not be an unprotected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-commandBuffer-02713",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, pipeline stages other than the framebuffer-space and compute stages in the <code>VkPipeline</code> object bound to the pipeline bind point used by this command <strong class=\"purple\">must</strong> not write to any resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-groupCountX-00386",
          "text": "<code>groupCountX</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxComputeWorkGroupCount</code>[0]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-groupCountY-00387",
          "text": "<code>groupCountY</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxComputeWorkGroupCount</code>[1]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-groupCountZ-00388",
          "text": "<code>groupCountZ</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxComputeWorkGroupCount</code>[2]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatch-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdDispatchIndirect": {
      "core": [
        {
          "vuid": "VUID-vkCmdDispatchIndirect-magFilter-04553",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>magFilter</code> or <code>minFilter</code> equal to <code>VK_FILTER_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-mipmapMode-04770",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>mipmapMode</code> equal to <code>VK_SAMPLER_MIPMAP_MODE_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-aspectMask-06478",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <a href=\"#textures-depth-compare-operation\">depth comparison</a>, the image view <strong class=\"purple\">must</strong> have been created with an <code>aspectMask</code> that contains <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-02691",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using atomic operations as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-07888",
          "text": "If a <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> descriptor is accessed using atomic operations as a result of this command, then the storage texel buffer&#8217;s <a href=\"#resources-buffer-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-02692",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-02693",
          "text": "If the <a href=\"#VK_EXT_filter_cubic\">VK_EXT_filter_cubic</a> extension is not enabled and any <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, it <strong class=\"purple\">must</strong> not have a <a href=\"#VkImageViewType\">VkImageViewType</a> of <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-filterCubic-02694",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubic</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-filterCubicMinmax-02695",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> with a reduction mode of either <code>VK_SAMPLER_REDUCTION_MODE_MIN</code> or <code>VK_SAMPLER_REDUCTION_MODE_MAX</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering together with minmax filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubicMinmax</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-08600",
          "text": "For each set <em>n</em> that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a descriptor set <strong class=\"purple\">must</strong> have been bound to <em>n</em> at the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for set <em>n</em>, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-08601",
          "text": "For each push constant that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a push constant value <strong class=\"purple\">must</strong> have been set for the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for push constants, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-08114",
          "text": "Descriptors in each bound descriptor set, specified via     <a href=\"#vkCmdBindDescriptorSets\">vkCmdBindDescriptorSets</a>, <strong class=\"purple\">must</strong> be valid as described by     <a href=\"#descriptor-validity\">descriptor validity</a> if they are statically used     by <a href=\"#shaders-binding\">a bound shader</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-08606",
          "text": "A     valid pipeline <strong class=\"purple\">must</strong> be bound to the pipeline bind point used by this     command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-08608",
          "text": "There     <strong class=\"purple\">must</strong> not have been any calls to dynamic state setting commands for any     state not specified as dynamic in the <a href=\"#VkPipeline\">VkPipeline</a> object bound to     the pipeline bind point used by this command, since that pipeline was     bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-08609",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used to sample from any <a href=\"#VkImage\">VkImage</a> with a <a href=\"#VkImageView\">VkImageView</a> of the type <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, <code>VK_IMAGE_VIEW_TYPE_1D_ARRAY</code>, <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code> or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-08610",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions with <code>ImplicitLod</code>, <code>Dref</code> or <code>Proj</code> in their name, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-08611",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions that includes a LOD bias or any offset values, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-uniformBuffers-06935",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a uniform buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-storageBuffers-06936",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a storage buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-commandBuffer-02707",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource accessed by <a href=\"#shaders-binding\">bound shaders</a> <strong class=\"purple\">must</strong> not be a protected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-06550",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> only be used with <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-ConstOffset-06551",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> not use the <code>ConstOffset</code> and <code>Offset</code> operands",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-viewType-07752",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the image view&#8217;s <code>viewType</code> <strong class=\"purple\">must</strong> match the <code>Dim</code> operand of the <code>OpTypeImage</code> as described in <a href=\"#textures-operation-validation\">Instruction/Sampler/Image View Validation</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-format-07753",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the <a href=\"#formats-numericformat\">numeric type</a> of the image view&#8217;s <code>format</code> and the <code>Sampled</code> <code>Type</code> operand of the <code>OpTypeImage</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-OpImageWrite-08795",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the image view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-OpImageWrite-04469",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the buffer view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-SampledType-04470",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-SampledType-04471",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-SampledType-04472",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-SampledType-04473",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-sparseImageInt64Atomics-04474",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkImage\">VkImage</a> objects created with the <code>VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-sparseImageInt64Atomics-04475",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkBuffer\">VkBuffer</a> objects created with the <code>VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-None-07288",
          "text": "Any shader invocation executed by this command <strong class=\"purple\">must</strong> <a href=\"#shaders-termination\">terminate</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-buffer-02708",
          "text": "If <code>buffer</code> is non-sparse then it <strong class=\"purple\">must</strong> be bound completely and contiguously to a single <code>VkDeviceMemory</code> object",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-buffer-02709",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> have been created with the <code>VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT</code> bit set",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-offset-02710",
          "text": "<code>offset</code> <strong class=\"purple\">must</strong> be a multiple of <code>4</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-commandBuffer-02711",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> not be a protected command buffer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-offset-00407",
          "text": "The sum of <code>offset</code> and the size of <code>VkDispatchIndirectCommand</code> <strong class=\"purple\">must</strong> be less than or equal to the size of <code>buffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-buffer-parameter",
          "text": "<code>buffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkBuffer\">VkBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchIndirect-commonparent",
          "text": "Both of <code>buffer</code>, and <code>commandBuffer</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkDispatchIndirectCommand": {
      "core": [
        {
          "vuid": "VUID-VkDispatchIndirectCommand-x-00417",
          "text": "<code>x</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxComputeWorkGroupCount</code>[0]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDispatchIndirectCommand-y-00418",
          "text": "<code>y</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxComputeWorkGroupCount</code>[1]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDispatchIndirectCommand-z-00419",
          "text": "<code>z</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxComputeWorkGroupCount</code>[2]",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdDispatchBase": {
      "core": [
        {
          "vuid": "VUID-vkCmdDispatchBase-magFilter-04553",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>magFilter</code> or <code>minFilter</code> equal to <code>VK_FILTER_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-mipmapMode-04770",
          "text": "If a <a href=\"#VkSampler\">VkSampler</a> created with <code>mipmapMode</code> equal to <code>VK_SAMPLER_MIPMAP_MODE_LINEAR</code> and <code>compareEnable</code> equal to <code>VK_FALSE</code> is used to sample a <a href=\"#VkImageView\">VkImageView</a> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-aspectMask-06478",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <a href=\"#textures-depth-compare-operation\">depth comparison</a>, the image view <strong class=\"purple\">must</strong> have been created with an <code>aspectMask</code> that contains <code>VK_IMAGE_ASPECT_DEPTH_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-02691",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using atomic operations as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-07888",
          "text": "If a <code>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER</code> descriptor is accessed using atomic operations as a result of this command, then the storage texel buffer&#8217;s <a href=\"#resources-buffer-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-02692",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, then the image view&#8217;s <a href=\"#resources-image-view-format-features\">format features</a> <strong class=\"purple\">must</strong> contain <code>VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-02693",
          "text": "If the <a href=\"#VK_EXT_filter_cubic\">VK_EXT_filter_cubic</a> extension is not enabled and any <a href=\"#VkImageView\">VkImageView</a> is sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command, it <strong class=\"purple\">must</strong> not have a <a href=\"#VkImageViewType\">VkImageViewType</a> of <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-filterCubic-02694",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubic</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-filterCubicMinmax-02695",
          "text": "Any <a href=\"#VkImageView\">VkImageView</a> being sampled with <code>VK_FILTER_CUBIC_EXT</code> with a reduction mode of either <code>VK_SAMPLER_REDUCTION_MODE_MIN</code> or <code>VK_SAMPLER_REDUCTION_MODE_MAX</code> as a result of this command <strong class=\"purple\">must</strong> have a <a href=\"#VkImageViewType\">VkImageViewType</a> and format that supports cubic filtering together with minmax filtering, as specified by <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>::<code>filterCubicMinmax</code> returned by <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-08600",
          "text": "For each set <em>n</em> that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a descriptor set <strong class=\"purple\">must</strong> have been bound to <em>n</em> at the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for set <em>n</em>, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-08601",
          "text": "For each push constant that is statically used by <a href=\"#shaders-binding\">a bound shader</a>, a push constant value <strong class=\"purple\">must</strong> have been set for the same pipeline bind point, with a <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> that is compatible for push constants, with the <a href=\"#VkPipelineLayout\">VkPipelineLayout</a> used to create the current <a href=\"#VkPipeline\">VkPipeline</a> , as described in <a href=\"#descriptorsets-compatibility\">Pipeline Layout Compatibility</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-08114",
          "text": "Descriptors in each bound descriptor set, specified via     <a href=\"#vkCmdBindDescriptorSets\">vkCmdBindDescriptorSets</a>, <strong class=\"purple\">must</strong> be valid as described by     <a href=\"#descriptor-validity\">descriptor validity</a> if they are statically used     by <a href=\"#shaders-binding\">a bound shader</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-08606",
          "text": "A     valid pipeline <strong class=\"purple\">must</strong> be bound to the pipeline bind point used by this     command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-08608",
          "text": "There     <strong class=\"purple\">must</strong> not have been any calls to dynamic state setting commands for any     state not specified as dynamic in the <a href=\"#VkPipeline\">VkPipeline</a> object bound to     the pipeline bind point used by this command, since that pipeline was     bound",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-08609",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used to sample from any <a href=\"#VkImage\">VkImage</a> with a <a href=\"#VkImageView\">VkImageView</a> of the type <code>VK_IMAGE_VIEW_TYPE_3D</code>, <code>VK_IMAGE_VIEW_TYPE_CUBE</code>, <code>VK_IMAGE_VIEW_TYPE_1D_ARRAY</code>, <code>VK_IMAGE_VIEW_TYPE_2D_ARRAY</code> or <code>VK_IMAGE_VIEW_TYPE_CUBE_ARRAY</code>, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-08610",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions with <code>ImplicitLod</code>, <code>Dref</code> or <code>Proj</code> in their name, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-08611",
          "text": "If the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a <a href=\"#VkSampler\">VkSampler</a> object that uses unnormalized coordinates, that sampler <strong class=\"purple\">must</strong> not be used with any of the SPIR-V <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions that includes a LOD bias or any offset values, in any shader stage",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-uniformBuffers-06935",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a uniform buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-storageBuffers-06936",
          "text": "If any stage of the <a href=\"#VkPipeline\">VkPipeline</a> object bound to the pipeline bind point used by this command accesses a storage buffer, and the <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> feature is not enabled, that stage <strong class=\"purple\">must</strong> not access values outside of the range of the buffer as specified in the descriptor set bound to the same pipeline bind point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-commandBuffer-02707",
          "text": "If <code>commandBuffer</code> is an unprotected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource accessed by <a href=\"#shaders-binding\">bound shaders</a> <strong class=\"purple\">must</strong> not be a protected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-06550",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> only be used with <code>OpImageSample*</code> or <code>OpImageSparseSample*</code> instructions",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-ConstOffset-06551",
          "text": "If <a href=\"#shaders-binding\">a bound shader</a> accesses a <a href=\"#VkSampler\">VkSampler</a> or <a href=\"#VkImageView\">VkImageView</a> object that enables <a href=\"#samplers-YCbCr-conversion\">sampler Y′C<sub>B</sub>C<sub>R</sub> conversion</a>, that object <strong class=\"purple\">must</strong> not use the <code>ConstOffset</code> and <code>Offset</code> operands",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-viewType-07752",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the image view&#8217;s <code>viewType</code> <strong class=\"purple\">must</strong> match the <code>Dim</code> operand of the <code>OpTypeImage</code> as described in <a href=\"#textures-operation-validation\">Instruction/Sampler/Image View Validation</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-format-07753",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed as a result of this command, then the <a href=\"#formats-numericformat\">numeric type</a> of the image view&#8217;s <code>format</code> and the <code>Sampled</code> <code>Type</code> operand of the <code>OpTypeImage</code> <strong class=\"purple\">must</strong> match",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-OpImageWrite-08795",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the image view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-OpImageWrite-04469",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> is accessed using <code>OpImageWrite</code> as a result of this command, then the <code>Type</code> of the <code>Texel</code> operand of that instruction <strong class=\"purple\">must</strong> have at least as many components as the buffer view&#8217;s format",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-SampledType-04470",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-SampledType-04471",
          "text": "If a <a href=\"#VkImageView\">VkImageView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-SampledType-04472",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a 64-bit component width is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-SampledType-04473",
          "text": "If a <a href=\"#VkBufferView\">VkBufferView</a> with a <a href=\"#VkFormat\">VkFormat</a> that has a component width less than 64-bit is accessed as a result of this command, the <code>SampledType</code> of the <code>OpTypeImage</code> operand of that instruction <strong class=\"purple\">must</strong> have a <code>Width</code> of 32",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-sparseImageInt64Atomics-04474",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkImage\">VkImage</a> objects created with the <code>VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-sparseImageInt64Atomics-04475",
          "text": "If the <a href=\"#features-sparseImageInt64Atomics\"><code>sparseImageInt64Atomics</code></a> feature is not enabled, <a href=\"#VkBuffer\">VkBuffer</a> objects created with the <code>VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT</code> flag <strong class=\"purple\">must</strong> not be accessed by atomic instructions through an <code>OpTypeImage</code> with a <code>SampledType</code> with a <code>Width</code> of 64 by this command",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-None-07288",
          "text": "Any shader invocation executed by this command <strong class=\"purple\">must</strong> <a href=\"#shaders-termination\">terminate</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-commandBuffer-02712",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, any resource written to by the <code>VkPipeline</code> object bound to the pipeline bind point used by this command <strong class=\"purple\">must</strong> not be an unprotected resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-commandBuffer-02713",
          "text": "If <code>commandBuffer</code> is a protected command buffer and <a href=\"#limits-protectedNoFault\"><code>protectedNoFault</code></a> is not supported, pipeline stages other than the framebuffer-space and compute stages in the <code>VkPipeline</code> object bound to the pipeline bind point used by this command <strong class=\"purple\">must</strong> not write to any resource",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-baseGroupX-00421",
          "text": "<code>baseGroupX</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxComputeWorkGroupCount</code>[0]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-baseGroupX-00422",
          "text": "<code>baseGroupY</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxComputeWorkGroupCount</code>[1]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-baseGroupZ-00423",
          "text": "<code>baseGroupZ</code> <strong class=\"purple\">must</strong> be less than <code>VkPhysicalDeviceLimits</code>::<code>maxComputeWorkGroupCount</code>[2]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-groupCountX-00424",
          "text": "<code>groupCountX</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxComputeWorkGroupCount</code>[0] minus <code>baseGroupX</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-groupCountY-00425",
          "text": "<code>groupCountY</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxComputeWorkGroupCount</code>[1] minus <code>baseGroupY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-groupCountZ-00426",
          "text": "<code>groupCountZ</code> <strong class=\"purple\">must</strong> be less than or equal to <code>VkPhysicalDeviceLimits</code>::<code>maxComputeWorkGroupCount</code>[2] minus <code>baseGroupZ</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-baseGroupX-00427",
          "text": "If any of <code>baseGroupX</code>, <code>baseGroupY</code>, or <code>baseGroupZ</code> are not zero, then the bound compute pipeline <strong class=\"purple\">must</strong> have been created with the <code>VK_PIPELINE_CREATE_DISPATCH_BASE</code> flag",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support compute operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdDispatchBase-renderpass",
          "text": "This command <strong class=\"purple\">must</strong> only be called outside of a render pass instance",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroySurfaceKHR": {
      "core": [
        {
          "vuid": "VUID-vkDestroySurfaceKHR-instance-parameter",
          "text": "<code>instance</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkInstance\">VkInstance</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySurfaceKHR-surface-parameter",
          "text": "If <code>surface</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySurfaceKHR-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroySurfaceKHR-surface-parent",
          "text": "If <code>surface</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>instance</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceDisplayPropertiesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceDisplayPropertiesKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceDisplayPropertiesKHR-pPropertyCount-parameter",
          "text": "<code>pPropertyCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceDisplayPropertiesKHR-pProperties-parameter",
          "text": "If the value referenced by <code>pPropertyCount</code> is not <code>0</code>, and <code>pProperties</code> is not <code>NULL</code>, <code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPropertyCount</code> <a href=\"#VkDisplayPropertiesKHR\">VkDisplayPropertiesKHR</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceDisplayProperties2KHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceDisplayProperties2KHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceDisplayProperties2KHR-pPropertyCount-parameter",
          "text": "<code>pPropertyCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceDisplayProperties2KHR-pProperties-parameter",
          "text": "If the value referenced by <code>pPropertyCount</code> is not <code>0</code>, and <code>pProperties</code> is not <code>NULL</code>, <code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPropertyCount</code> <a href=\"#VkDisplayProperties2KHR\">VkDisplayProperties2KHR</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkDisplayProperties2KHR": {
      "core": [
        {
          "vuid": "VUID-VkDisplayProperties2KHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayProperties2KHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkReleaseDisplayEXT": {
      "core": [
        {
          "vuid": "VUID-vkReleaseDisplayEXT-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkReleaseDisplayEXT-display-parameter",
          "text": "<code>display</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayKHR\">VkDisplayKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkReleaseDisplayEXT-display-parent",
          "text": "<code>display</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>physicalDevice</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceDisplayPlanePropertiesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceDisplayPlanePropertiesKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceDisplayPlanePropertiesKHR-pPropertyCount-parameter",
          "text": "<code>pPropertyCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceDisplayPlanePropertiesKHR-pProperties-parameter",
          "text": "If the value referenced by <code>pPropertyCount</code> is not <code>0</code>, and <code>pProperties</code> is not <code>NULL</code>, <code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPropertyCount</code> <a href=\"#VkDisplayPlanePropertiesKHR\">VkDisplayPlanePropertiesKHR</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceDisplayPlaneProperties2KHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceDisplayPlaneProperties2KHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceDisplayPlaneProperties2KHR-pPropertyCount-parameter",
          "text": "<code>pPropertyCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceDisplayPlaneProperties2KHR-pProperties-parameter",
          "text": "If the value referenced by <code>pPropertyCount</code> is not <code>0</code>, and <code>pProperties</code> is not <code>NULL</code>, <code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPropertyCount</code> <a href=\"#VkDisplayPlaneProperties2KHR\">VkDisplayPlaneProperties2KHR</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkDisplayPlaneProperties2KHR": {
      "core": [
        {
          "vuid": "VUID-VkDisplayPlaneProperties2KHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayPlaneProperties2KHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDisplayPlaneSupportedDisplaysKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetDisplayPlaneSupportedDisplaysKHR-planeIndex-01249",
          "text": "<code>planeIndex</code> <strong class=\"purple\">must</strong> be less than the number of display planes supported by the device as determined by calling <code>vkGetPhysicalDeviceDisplayPlanePropertiesKHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayPlaneSupportedDisplaysKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayPlaneSupportedDisplaysKHR-pDisplayCount-parameter",
          "text": "<code>pDisplayCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayPlaneSupportedDisplaysKHR-pDisplays-parameter",
          "text": "If the value referenced by <code>pDisplayCount</code> is not <code>0</code>, and <code>pDisplays</code> is not <code>NULL</code>, <code>pDisplays</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pDisplayCount</code> <a href=\"#VkDisplayKHR\">VkDisplayKHR</a> handles",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDisplayModePropertiesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetDisplayModePropertiesKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayModePropertiesKHR-display-parameter",
          "text": "<code>display</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayKHR\">VkDisplayKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayModePropertiesKHR-pPropertyCount-parameter",
          "text": "<code>pPropertyCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayModePropertiesKHR-pProperties-parameter",
          "text": "If the value referenced by <code>pPropertyCount</code> is not <code>0</code>, and <code>pProperties</code> is not <code>NULL</code>, <code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPropertyCount</code> <a href=\"#VkDisplayModePropertiesKHR\">VkDisplayModePropertiesKHR</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayModePropertiesKHR-display-parent",
          "text": "<code>display</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>physicalDevice</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDisplayModeProperties2KHR": {
      "core": [
        {
          "vuid": "VUID-vkGetDisplayModeProperties2KHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayModeProperties2KHR-display-parameter",
          "text": "<code>display</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayKHR\">VkDisplayKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayModeProperties2KHR-pPropertyCount-parameter",
          "text": "<code>pPropertyCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayModeProperties2KHR-pProperties-parameter",
          "text": "If the value referenced by <code>pPropertyCount</code> is not <code>0</code>, and <code>pProperties</code> is not <code>NULL</code>, <code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPropertyCount</code> <a href=\"#VkDisplayModeProperties2KHR\">VkDisplayModeProperties2KHR</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayModeProperties2KHR-display-parent",
          "text": "<code>display</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>physicalDevice</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkDisplayModeProperties2KHR": {
      "core": [
        {
          "vuid": "VUID-VkDisplayModeProperties2KHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayModeProperties2KHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkDisplayModeParametersKHR": {
      "core": [
        {
          "vuid": "VUID-VkDisplayModeParametersKHR-width-01990",
          "text": "The <code>width</code> member of <code>visibleRegion</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayModeParametersKHR-height-01991",
          "text": "The <code>height</code> member of <code>visibleRegion</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayModeParametersKHR-refreshRate-01992",
          "text": "<code>refreshRate</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateDisplayModeKHR": {
      "core": [
        {
          "vuid": "VUID-vkCreateDisplayModeKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDisplayModeKHR-display-parameter",
          "text": "<code>display</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayKHR\">VkDisplayKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDisplayModeKHR-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDisplayModeCreateInfoKHR\">VkDisplayModeCreateInfoKHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDisplayModeKHR-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDisplayModeKHR-pMode-parameter",
          "text": "<code>pMode</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkDisplayModeKHR\">VkDisplayModeKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDisplayModeKHR-display-parent",
          "text": "<code>display</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>physicalDevice</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkDisplayModeCreateInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkDisplayModeCreateInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayModeCreateInfoKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayModeCreateInfoKHR-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayModeCreateInfoKHR-parameters-parameter",
          "text": "<code>parameters</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayModeParametersKHR\">VkDisplayModeParametersKHR</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDisplayPlaneCapabilitiesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetDisplayPlaneCapabilitiesKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayPlaneCapabilitiesKHR-mode-parameter",
          "text": "<code>mode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayModeKHR\">VkDisplayModeKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayPlaneCapabilitiesKHR-pCapabilities-parameter",
          "text": "<code>pCapabilities</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkDisplayPlaneCapabilitiesKHR\">VkDisplayPlaneCapabilitiesKHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayPlaneCapabilitiesKHR-mode-parent",
          "text": "<code>mode</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>physicalDevice</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDisplayPlaneCapabilities2KHR": {
      "core": [
        {
          "vuid": "VUID-vkGetDisplayPlaneCapabilities2KHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayPlaneCapabilities2KHR-pDisplayPlaneInfo-parameter",
          "text": "<code>pDisplayPlaneInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDisplayPlaneInfo2KHR\">VkDisplayPlaneInfo2KHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDisplayPlaneCapabilities2KHR-pCapabilities-parameter",
          "text": "<code>pCapabilities</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkDisplayPlaneCapabilities2KHR\">VkDisplayPlaneCapabilities2KHR</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkDisplayPlaneInfo2KHR": {
      "core": [
        {
          "vuid": "VUID-VkDisplayPlaneInfo2KHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayPlaneInfo2KHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayPlaneInfo2KHR-mode-parameter",
          "text": "<code>mode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayModeKHR\">VkDisplayModeKHR</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkDisplayPlaneCapabilities2KHR": {
      "core": [
        {
          "vuid": "VUID-VkDisplayPlaneCapabilities2KHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayPlaneCapabilities2KHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkDisplayPowerControlEXT": {
      "core": [
        {
          "vuid": "VUID-vkDisplayPowerControlEXT-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDisplayPowerControlEXT-display-parameter",
          "text": "<code>display</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayKHR\">VkDisplayKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDisplayPowerControlEXT-pDisplayPowerInfo-parameter",
          "text": "<code>pDisplayPowerInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDisplayPowerInfoEXT\">VkDisplayPowerInfoEXT</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDisplayPowerControlEXT-commonparent",
          "text": "Both of <code>device</code>, and <code>display</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkDisplayPowerInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkDisplayPowerInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayPowerInfoEXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayPowerInfoEXT-powerState-parameter",
          "text": "<code>powerState</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayPowerStateEXT\">VkDisplayPowerStateEXT</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateDisplayPlaneSurfaceKHR": {
      "core": [
        {
          "vuid": "VUID-vkCreateDisplayPlaneSurfaceKHR-instance-parameter",
          "text": "<code>instance</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkInstance\">VkInstance</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDisplayPlaneSurfaceKHR-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDisplaySurfaceCreateInfoKHR\">VkDisplaySurfaceCreateInfoKHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDisplayPlaneSurfaceKHR-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDisplayPlaneSurfaceKHR-pSurface-parameter",
          "text": "<code>pSurface</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkDisplaySurfaceCreateInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkDisplaySurfaceCreateInfoKHR-planeIndex-01252",
          "text": "<code>planeIndex</code> <strong class=\"purple\">must</strong> be less than the number of display planes supported by the device as determined by calling <code>vkGetPhysicalDeviceDisplayPlanePropertiesKHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplaySurfaceCreateInfoKHR-planeReorderPossible-01253",
          "text": "If the <code>planeReorderPossible</code> member of the <code>VkDisplayPropertiesKHR</code> structure returned by <code>vkGetPhysicalDeviceDisplayPropertiesKHR</code> for the display corresponding to <code>displayMode</code> is <code>VK_TRUE</code> then <code>planeStackIndex</code> <strong class=\"purple\">must</strong> be less than the number of display planes supported by the device as determined by calling <code>vkGetPhysicalDeviceDisplayPlanePropertiesKHR</code>; otherwise <code>planeStackIndex</code> <strong class=\"purple\">must</strong> equal the <code>currentStackIndex</code> member of <code>VkDisplayPlanePropertiesKHR</code> returned by <code>vkGetPhysicalDeviceDisplayPlanePropertiesKHR</code> for the display plane corresponding to <code>displayMode</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplaySurfaceCreateInfoKHR-alphaMode-01254",
          "text": "If <code>alphaMode</code> is <code>VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR</code> then <code>globalAlpha</code> <strong class=\"purple\">must</strong> be between <code>0</code> and <code>1</code>, inclusive",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplaySurfaceCreateInfoKHR-alphaMode-01255",
          "text": "<code>alphaMode</code> <strong class=\"purple\">must</strong> be one of the bits present in the <code>supportedAlpha</code> member of <code>VkDisplayPlaneCapabilitiesKHR</code> for the display plane corresponding to <code>displayMode</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplaySurfaceCreateInfoKHR-transform-06740",
          "text": "<code>transform</code> <strong class=\"purple\">must</strong> be one of the bits present in the <code>supportedTransforms</code> member of <code>VkDisplayPropertiesKHR</code> for the display corresponding to <code>displayMode</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplaySurfaceCreateInfoKHR-width-01256",
          "text": "The <code>width</code> and <code>height</code> members of <code>imageExtent</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>maxImageDimension2D</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplaySurfaceCreateInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplaySurfaceCreateInfoKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplaySurfaceCreateInfoKHR-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplaySurfaceCreateInfoKHR-displayMode-parameter",
          "text": "<code>displayMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayModeKHR\">VkDisplayModeKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplaySurfaceCreateInfoKHR-transform-parameter",
          "text": "<code>transform</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceTransformFlagBitsKHR\">VkSurfaceTransformFlagBitsKHR</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplaySurfaceCreateInfoKHR-alphaMode-parameter",
          "text": "<code>alphaMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDisplayPlaneAlphaFlagBitsKHR\">VkDisplayPlaneAlphaFlagBitsKHR</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateHeadlessSurfaceEXT": {
      "core": [
        {
          "vuid": "VUID-vkCreateHeadlessSurfaceEXT-instance-parameter",
          "text": "<code>instance</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkInstance\">VkInstance</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateHeadlessSurfaceEXT-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkHeadlessSurfaceCreateInfoEXT\">VkHeadlessSurfaceCreateInfoEXT</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateHeadlessSurfaceEXT-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateHeadlessSurfaceEXT-pSurface-parameter",
          "text": "<code>pSurface</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkHeadlessSurfaceCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkHeadlessSurfaceCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkHeadlessSurfaceCreateInfoEXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkHeadlessSurfaceCreateInfoEXT-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceSurfaceSupportKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceSupportKHR-queueFamilyIndex-01269",
          "text": "<code>queueFamilyIndex</code> <strong class=\"purple\">must</strong> be less than <code>pQueueFamilyPropertyCount</code> returned by <code>vkGetPhysicalDeviceQueueFamilyProperties</code> for the given <code>physicalDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceSupportKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceSupportKHR-surface-parameter",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceSupportKHR-pSupported-parameter",
          "text": "<code>pSupported</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkBool32\">VkBool32</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceSupportKHR-commonparent",
          "text": "Both of <code>physicalDevice</code>, and <code>surface</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkInstance\">VkInstance</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceSurfaceCapabilitiesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilitiesKHR-surface-06523",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilitiesKHR-surface-06211",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be supported by <code>physicalDevice</code>, as reported by <a href=\"#vkGetPhysicalDeviceSurfaceSupportKHR\">vkGetPhysicalDeviceSurfaceSupportKHR</a> or an equivalent platform-specific mechanism",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilitiesKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilitiesKHR-surface-parameter",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilitiesKHR-pSurfaceCapabilities-parameter",
          "text": "<code>pSurfaceCapabilities</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkSurfaceCapabilitiesKHR\">VkSurfaceCapabilitiesKHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilitiesKHR-commonparent",
          "text": "Both of <code>physicalDevice</code>, and <code>surface</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkInstance\">VkInstance</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceSurfaceCapabilities2KHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilities2KHR-pSurfaceInfo-06521",
          "text": "<code>pSurfaceInfo-&gt;surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilities2KHR-pSurfaceInfo-06522",
          "text": "<code>pSurfaceInfo-&gt;surface</code> <strong class=\"purple\">must</strong> be supported by <code>physicalDevice</code>, as reported by <a href=\"#vkGetPhysicalDeviceSurfaceSupportKHR\">vkGetPhysicalDeviceSurfaceSupportKHR</a> or an equivalent platform-specific mechanism",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilities2KHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilities2KHR-pSurfaceInfo-parameter",
          "text": "<code>pSurfaceInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPhysicalDeviceSurfaceInfo2KHR\">VkPhysicalDeviceSurfaceInfo2KHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilities2KHR-pSurfaceCapabilities-parameter",
          "text": "<code>pSurfaceCapabilities</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkSurfaceCapabilities2KHR\">VkSurfaceCapabilities2KHR</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceSurfaceInfo2KHR": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceSurfaceInfo2KHR-surface-07919",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceSurfaceInfo2KHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceSurfaceInfo2KHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceSurfaceInfo2KHR-surface-parameter",
          "text": "If <code>surface</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkSurfaceCapabilities2KHR": {
      "core": [
        {
          "vuid": "VUID-VkSurfaceCapabilities2KHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSurfaceCapabilities2KHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkSharedPresentSurfaceCapabilitiesKHR\">VkSharedPresentSurfaceCapabilitiesKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSurfaceCapabilities2KHR-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        }
      ]
    },
    "VkSharedPresentSurfaceCapabilitiesKHR": {
      "core": [
        {
          "vuid": "VUID-VkSharedPresentSurfaceCapabilitiesKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceSurfaceCapabilities2EXT": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilities2EXT-surface-06523",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilities2EXT-surface-06211",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be supported by <code>physicalDevice</code>, as reported by <a href=\"#vkGetPhysicalDeviceSurfaceSupportKHR\">vkGetPhysicalDeviceSurfaceSupportKHR</a> or an equivalent platform-specific mechanism",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilities2EXT-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilities2EXT-surface-parameter",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilities2EXT-pSurfaceCapabilities-parameter",
          "text": "<code>pSurfaceCapabilities</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkSurfaceCapabilities2EXT\">VkSurfaceCapabilities2EXT</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceCapabilities2EXT-commonparent",
          "text": "Both of <code>physicalDevice</code>, and <code>surface</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkInstance\">VkInstance</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkSurfaceCapabilities2EXT": {
      "core": [
        {
          "vuid": "VUID-VkSurfaceCapabilities2EXT-supportedSurfaceCounters-01246",
          "text": "<code>supportedSurfaceCounters</code> <strong class=\"purple\">must</strong> not include <code>VK_SURFACE_COUNTER_VBLANK_BIT_EXT</code> unless the surface queried is a <a href=\"#wsi-display-surfaces\">display surface</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSurfaceCapabilities2EXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSurfaceCapabilities2EXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceSurfaceFormatsKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormatsKHR-surface-06524",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormatsKHR-surface-06525",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be supported by <code>physicalDevice</code>, as reported by <a href=\"#vkGetPhysicalDeviceSurfaceSupportKHR\">vkGetPhysicalDeviceSurfaceSupportKHR</a> or an equivalent platform-specific mechanism",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormatsKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormatsKHR-surface-parameter",
          "text": "If <code>surface</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormatsKHR-pSurfaceFormatCount-parameter",
          "text": "<code>pSurfaceFormatCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormatsKHR-pSurfaceFormats-parameter",
          "text": "If the value referenced by <code>pSurfaceFormatCount</code> is not <code>0</code>, and <code>pSurfaceFormats</code> is not <code>NULL</code>, <code>pSurfaceFormats</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pSurfaceFormatCount</code> <a href=\"#VkSurfaceFormatKHR\">VkSurfaceFormatKHR</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormatsKHR-commonparent",
          "text": "Both of <code>physicalDevice</code>, and <code>surface</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkInstance\">VkInstance</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceSurfaceFormats2KHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormats2KHR-pSurfaceInfo-06521",
          "text": "<code>pSurfaceInfo-&gt;surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormats2KHR-pSurfaceInfo-06522",
          "text": "<code>pSurfaceInfo-&gt;surface</code> <strong class=\"purple\">must</strong> be supported by <code>physicalDevice</code>, as reported by <a href=\"#vkGetPhysicalDeviceSurfaceSupportKHR\">vkGetPhysicalDeviceSurfaceSupportKHR</a> or an equivalent platform-specific mechanism",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormats2KHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormats2KHR-pSurfaceInfo-parameter",
          "text": "<code>pSurfaceInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPhysicalDeviceSurfaceInfo2KHR\">VkPhysicalDeviceSurfaceInfo2KHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormats2KHR-pSurfaceFormatCount-parameter",
          "text": "<code>pSurfaceFormatCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfaceFormats2KHR-pSurfaceFormats-parameter",
          "text": "If the value referenced by <code>pSurfaceFormatCount</code> is not <code>0</code>, and <code>pSurfaceFormats</code> is not <code>NULL</code>, <code>pSurfaceFormats</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pSurfaceFormatCount</code> <a href=\"#VkSurfaceFormat2KHR\">VkSurfaceFormat2KHR</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkSurfaceFormat2KHR": {
      "core": [
        {
          "vuid": "VUID-VkSurfaceFormat2KHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSurfaceFormat2KHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceSurfacePresentModesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfacePresentModesKHR-surface-06524",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfacePresentModesKHR-surface-06525",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be supported by <code>physicalDevice</code>, as reported by <a href=\"#vkGetPhysicalDeviceSurfaceSupportKHR\">vkGetPhysicalDeviceSurfaceSupportKHR</a> or an equivalent platform-specific mechanism",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfacePresentModesKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfacePresentModesKHR-surface-parameter",
          "text": "If <code>surface</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfacePresentModesKHR-pPresentModeCount-parameter",
          "text": "<code>pPresentModeCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfacePresentModesKHR-pPresentModes-parameter",
          "text": "If the value referenced by <code>pPresentModeCount</code> is not <code>0</code>, and <code>pPresentModes</code> is not <code>NULL</code>, <code>pPresentModes</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPresentModeCount</code> <a href=\"#VkPresentModeKHR\">VkPresentModeKHR</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceSurfacePresentModesKHR-commonparent",
          "text": "Both of <code>physicalDevice</code>, and <code>surface</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkInstance\">VkInstance</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDeviceGroupPresentCapabilitiesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetDeviceGroupPresentCapabilitiesKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceGroupPresentCapabilitiesKHR-pDeviceGroupPresentCapabilities-parameter",
          "text": "<code>pDeviceGroupPresentCapabilities</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkDeviceGroupPresentCapabilitiesKHR\">VkDeviceGroupPresentCapabilitiesKHR</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceGroupPresentCapabilitiesKHR": {
      "core": [
        {
          "vuid": "VUID-VkDeviceGroupPresentCapabilitiesKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupPresentCapabilitiesKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetDeviceGroupSurfacePresentModesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetDeviceGroupSurfacePresentModesKHR-surface-06212",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be supported by all physical devices associated with <code>device</code>, as reported by <a href=\"#vkGetPhysicalDeviceSurfaceSupportKHR\">vkGetPhysicalDeviceSurfaceSupportKHR</a> or an equivalent platform-specific mechanism",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceGroupSurfacePresentModesKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceGroupSurfacePresentModesKHR-surface-parameter",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceGroupSurfacePresentModesKHR-pModes-parameter",
          "text": "<code>pModes</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkDeviceGroupPresentModeFlagsKHR\">VkDeviceGroupPresentModeFlagsKHR</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetDeviceGroupSurfacePresentModesKHR-commonparent",
          "text": "Both of <code>device</code>, and <code>surface</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkInstance\">VkInstance</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDevicePresentRectanglesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDevicePresentRectanglesKHR-surface-06523",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDevicePresentRectanglesKHR-surface-06211",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be supported by <code>physicalDevice</code>, as reported by <a href=\"#vkGetPhysicalDeviceSurfaceSupportKHR\">vkGetPhysicalDeviceSurfaceSupportKHR</a> or an equivalent platform-specific mechanism",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDevicePresentRectanglesKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDevicePresentRectanglesKHR-surface-parameter",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDevicePresentRectanglesKHR-pRectCount-parameter",
          "text": "<code>pRectCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDevicePresentRectanglesKHR-pRects-parameter",
          "text": "If the value referenced by <code>pRectCount</code> is not <code>0</code>, and <code>pRects</code> is not <code>NULL</code>, <code>pRects</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pRectCount</code> <a href=\"#VkRect2D\">VkRect2D</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDevicePresentRectanglesKHR-commonparent",
          "text": "Both of <code>physicalDevice</code>, and <code>surface</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkInstance\">VkInstance</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetSwapchainStatusKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetSwapchainStatusKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSwapchainStatusKHR-swapchain-parameter",
          "text": "<code>swapchain</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSwapchainKHR\">VkSwapchainKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSwapchainStatusKHR-swapchain-parent",
          "text": "<code>swapchain</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateSwapchainKHR": {
      "core": [
        {
          "vuid": "VUID-vkCreateSwapchainKHR-device-05068",
          "text": "The number of swapchains currently allocated from <code>device</code> plus 1 <strong class=\"purple\">must</strong> be less than or equal to the total number of swapchains requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>swapchainRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSwapchainKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSwapchainKHR-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkSwapchainCreateInfoKHR\">VkSwapchainCreateInfoKHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSwapchainKHR-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSwapchainKHR-pSwapchain-parameter",
          "text": "<code>pSwapchain</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkSwapchainKHR\">VkSwapchainKHR</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkSwapchainCreateInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-surface-01270",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a surface that is supported by the device as determined using <a href=\"#vkGetPhysicalDeviceSurfaceSupportKHR\">vkGetPhysicalDeviceSurfaceSupportKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-minImageCount-01272",
          "text": "<code>minImageCount</code> <strong class=\"purple\">must</strong> be less than or equal to the value returned in the <code>maxImageCount</code> member of the <code>VkSurfaceCapabilitiesKHR</code> structure returned by <code>vkGetPhysicalDeviceSurfaceCapabilitiesKHR</code> for the surface if the returned <code>maxImageCount</code> is not zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-presentMode-02839",
          "text": "If <code>presentMode</code> is not <code>VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR</code> nor <code>VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR</code>, then <code>minImageCount</code> <strong class=\"purple\">must</strong> be greater than or equal to the value returned in the <code>minImageCount</code> member of the <code>VkSurfaceCapabilitiesKHR</code> structure returned by <a href=\"#vkGetPhysicalDeviceSurfaceCapabilitiesKHR\">vkGetPhysicalDeviceSurfaceCapabilitiesKHR</a> for the surface",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-minImageCount-01383",
          "text": "<code>minImageCount</code> <strong class=\"purple\">must</strong> be <code>1</code> if <code>presentMode</code> is either <code>VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR</code> or <code>VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageFormat-01273",
          "text": "<code>imageFormat</code> and <code>imageColorSpace</code> <strong class=\"purple\">must</strong> match the <code>format</code> and <code>colorSpace</code> members, respectively, of one of the <code>VkSurfaceFormatKHR</code> structures returned by <code>vkGetPhysicalDeviceSurfaceFormatsKHR</code> for the surface",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-pNext-07781",
          "text": "<code>imageExtent</code> <strong class=\"purple\">must</strong> be between <code>minImageExtent</code> and <code>maxImageExtent</code>, inclusive, where <code>minImageExtent</code> and <code>maxImageExtent</code> are members of the <code>VkSurfaceCapabilitiesKHR</code> structure returned by <code>vkGetPhysicalDeviceSurfaceCapabilitiesKHR</code> for the surface",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageExtent-01689",
          "text": "<code>imageExtent</code> members <code>width</code> and <code>height</code> <strong class=\"purple\">must</strong> both be non-zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageArrayLayers-01275",
          "text": "<code>imageArrayLayers</code> <strong class=\"purple\">must</strong> be greater than <code>0</code> and less than or equal to the <code>maxImageArrayLayers</code> member of the <code>VkSurfaceCapabilitiesKHR</code> structure returned by <code>vkGetPhysicalDeviceSurfaceCapabilitiesKHR</code> for the surface",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-presentMode-01427",
          "text": "If <code>presentMode</code> is <code>VK_PRESENT_MODE_IMMEDIATE_KHR</code>, <code>VK_PRESENT_MODE_MAILBOX_KHR</code>, <code>VK_PRESENT_MODE_FIFO_KHR</code> or <code>VK_PRESENT_MODE_FIFO_RELAXED_KHR</code>, <code>imageUsage</code> <strong class=\"purple\">must</strong> be a subset of the supported usage flags present in the <code>supportedUsageFlags</code> member of the <a href=\"#VkSurfaceCapabilitiesKHR\">VkSurfaceCapabilitiesKHR</a> structure returned by <a href=\"#vkGetPhysicalDeviceSurfaceCapabilitiesKHR\">vkGetPhysicalDeviceSurfaceCapabilitiesKHR</a> for <code>surface</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageUsage-01384",
          "text": "If <code>presentMode</code> is <code>VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR</code> or <code>VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR</code>, <code>imageUsage</code> <strong class=\"purple\">must</strong> be a subset of the supported usage flags present in the <code>sharedPresentSupportedUsageFlags</code> member of the <a href=\"#VkSharedPresentSurfaceCapabilitiesKHR\">VkSharedPresentSurfaceCapabilitiesKHR</a> structure returned by <a href=\"#vkGetPhysicalDeviceSurfaceCapabilities2KHR\">vkGetPhysicalDeviceSurfaceCapabilities2KHR</a> for <code>surface</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageSharingMode-01277",
          "text": "If <code>imageSharingMode</code> is <code>VK_SHARING_MODE_CONCURRENT</code>, <code>pQueueFamilyIndices</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>queueFamilyIndexCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageSharingMode-01278",
          "text": "If <code>imageSharingMode</code> is <code>VK_SHARING_MODE_CONCURRENT</code>, <code>queueFamilyIndexCount</code> <strong class=\"purple\">must</strong> be greater than <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageSharingMode-01428",
          "text": "If <code>imageSharingMode</code> is <code>VK_SHARING_MODE_CONCURRENT</code>, each element of <code>pQueueFamilyIndices</code> <strong class=\"purple\">must</strong> be unique and <strong class=\"purple\">must</strong> be less than <code>pQueueFamilyPropertyCount</code> returned by either <a href=\"#vkGetPhysicalDeviceQueueFamilyProperties\">vkGetPhysicalDeviceQueueFamilyProperties</a> or <a href=\"#vkGetPhysicalDeviceQueueFamilyProperties2\">vkGetPhysicalDeviceQueueFamilyProperties2</a> for the <code>physicalDevice</code> that was used to create <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-preTransform-01279",
          "text": "<code>preTransform</code> <strong class=\"purple\">must</strong> be one of the bits present in the <code>supportedTransforms</code> member of the <code>VkSurfaceCapabilitiesKHR</code> structure returned by <code>vkGetPhysicalDeviceSurfaceCapabilitiesKHR</code> for the surface",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-compositeAlpha-01280",
          "text": "<code>compositeAlpha</code> <strong class=\"purple\">must</strong> be one of the bits present in the <code>supportedCompositeAlpha</code> member of the <code>VkSurfaceCapabilitiesKHR</code> structure returned by <code>vkGetPhysicalDeviceSurfaceCapabilitiesKHR</code> for the surface",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-presentMode-01281",
          "text": "<code>presentMode</code> <strong class=\"purple\">must</strong> be one of the <a href=\"#VkPresentModeKHR\">VkPresentModeKHR</a> values returned by <code>vkGetPhysicalDeviceSurfacePresentModesKHR</code> for the surface",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-physicalDeviceCount-01429",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> not contain <code>VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-oldSwapchain-05073",
          "text": "<code>oldSwapchain</code> <strong class=\"purple\">must</strong> be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageFormat-01778",
          "text": "The <a href=\"#swapchain-wsi-image-create-info\">implied image creation parameters</a> of the swapchain <strong class=\"purple\">must</strong> be supported as reported by <a href=\"#vkGetPhysicalDeviceImageFormatProperties\">vkGetPhysicalDeviceImageFormatProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-flags-03168",
          "text": "If <code>flags</code> contains <code>VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR</code> then the <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a> structure with a <code>viewFormatCount</code> greater than zero and <code>pViewFormats</code> <strong class=\"purple\">must</strong> have an element equal to <code>imageFormat</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-pNext-04099",
          "text": "If a <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a> structure was included in the <code>pNext</code> chain and <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>::<code>viewFormatCount</code> is not zero then all of the formats in <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>::<code>pViewFormats</code> <strong class=\"purple\">must</strong> be compatible with the <code>format</code> as described in the <a href=\"#formats-compatibility\">compatibility table</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-flags-04100",
          "text": "If <code>flags</code> does not contain <code>VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR</code> and the <code>pNext</code> chain include a <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a> structure then <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>::<code>viewFormatCount</code> <strong class=\"purple\">must</strong> be <code>0</code> or <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkDeviceGroupSwapchainCreateInfoKHR\">VkDeviceGroupSwapchainCreateInfoKHR</a>, <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>, or <a href=\"#VkSwapchainCounterCreateInfoEXT\">VkSwapchainCounterCreateInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkSwapchainCreateFlagBitsKHR\">VkSwapchainCreateFlagBitsKHR</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-surface-parameter",
          "text": "<code>surface</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceKHR\">VkSurfaceKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageFormat-parameter",
          "text": "<code>imageFormat</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageColorSpace-parameter",
          "text": "<code>imageColorSpace</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkColorSpaceKHR\">VkColorSpaceKHR</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageUsage-parameter",
          "text": "<code>imageUsage</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageUsageFlagBits\">VkImageUsageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageUsage-requiredbitmask",
          "text": "<code>imageUsage</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-imageSharingMode-parameter",
          "text": "<code>imageSharingMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSharingMode\">VkSharingMode</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-preTransform-parameter",
          "text": "<code>preTransform</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceTransformFlagBitsKHR\">VkSurfaceTransformFlagBitsKHR</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-compositeAlpha-parameter",
          "text": "<code>compositeAlpha</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCompositeAlphaFlagBitsKHR\">VkCompositeAlphaFlagBitsKHR</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-presentMode-parameter",
          "text": "<code>presentMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPresentModeKHR\">VkPresentModeKHR</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCreateInfoKHR-commonparent",
          "text": "Both of <code>oldSwapchain</code>, and <code>surface</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkInstance\">VkInstance</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceGroupSwapchainCreateInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkDeviceGroupSwapchainCreateInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupSwapchainCreateInfoKHR-modes-parameter",
          "text": "<code>modes</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkDeviceGroupPresentModeFlagBitsKHR\">VkDeviceGroupPresentModeFlagBitsKHR</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupSwapchainCreateInfoKHR-modes-requiredbitmask",
          "text": "<code>modes</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkSwapchainCounterCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkSwapchainCounterCreateInfoEXT-surfaceCounters-01244",
          "text": "The bits in <code>surfaceCounters</code> <strong class=\"purple\">must</strong> be supported by <a href=\"#VkSwapchainCreateInfoKHR\">VkSwapchainCreateInfoKHR</a>::<code>surface</code>, as reported by <a href=\"#vkGetPhysicalDeviceSurfaceCapabilities2EXT\">vkGetPhysicalDeviceSurfaceCapabilities2EXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCounterCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkSwapchainCounterCreateInfoEXT-surfaceCounters-parameter",
          "text": "<code>surfaceCounters</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkSurfaceCounterFlagBitsEXT\">VkSurfaceCounterFlagBitsEXT</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkGetSwapchainCounterEXT": {
      "core": [
        {
          "vuid": "VUID-vkGetSwapchainCounterEXT-swapchain-01245",
          "text": "One or more present commands on <code>swapchain</code> <strong class=\"purple\">must</strong> have been processed by the presentation engine",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSwapchainCounterEXT-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSwapchainCounterEXT-swapchain-parameter",
          "text": "<code>swapchain</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSwapchainKHR\">VkSwapchainKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSwapchainCounterEXT-counter-parameter",
          "text": "<code>counter</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSurfaceCounterFlagBitsEXT\">VkSurfaceCounterFlagBitsEXT</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSwapchainCounterEXT-pCounterValue-parameter",
          "text": "<code>pCounterValue</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint64_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSwapchainCounterEXT-swapchain-parent",
          "text": "<code>swapchain</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateSharedSwapchainsKHR": {
      "core": [
        {
          "vuid": "VUID-vkCreateSharedSwapchainsKHR-device-05068",
          "text": "The number of swapchains currently allocated from <code>device</code> plus <code>swapchainCount</code> <strong class=\"purple\">must</strong> be less than or equal to the total number of swapchains requested via <a href=\"#VkDeviceObjectReservationCreateInfo\">VkDeviceObjectReservationCreateInfo</a>::<code>swapchainRequestCount</code> specified when <code>device</code> was created",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSharedSwapchainsKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSharedSwapchainsKHR-pCreateInfos-parameter",
          "text": "<code>pCreateInfos</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>swapchainCount</code> valid <a href=\"#VkSwapchainCreateInfoKHR\">VkSwapchainCreateInfoKHR</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSharedSwapchainsKHR-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSharedSwapchainsKHR-pSwapchains-parameter",
          "text": "<code>pSwapchains</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>swapchainCount</code> <a href=\"#VkSwapchainKHR\">VkSwapchainKHR</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateSharedSwapchainsKHR-swapchainCount-arraylength",
          "text": "<code>swapchainCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetSwapchainImagesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetSwapchainImagesKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSwapchainImagesKHR-swapchain-parameter",
          "text": "<code>swapchain</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSwapchainKHR\">VkSwapchainKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSwapchainImagesKHR-pSwapchainImageCount-parameter",
          "text": "<code>pSwapchainImageCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSwapchainImagesKHR-pSwapchainImages-parameter",
          "text": "If the value referenced by <code>pSwapchainImageCount</code> is not <code>0</code>, and <code>pSwapchainImages</code> is not <code>NULL</code>, <code>pSwapchainImages</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pSwapchainImageCount</code> <a href=\"#VkImage\">VkImage</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetSwapchainImagesKHR-swapchain-parent",
          "text": "<code>swapchain</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkAcquireNextImageKHR": {
      "core": [
        {
          "vuid": "VUID-vkAcquireNextImageKHR-swapchain-01285",
          "text": "<code>swapchain</code> <strong class=\"purple\">must</strong> not be in the retired state",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-semaphore-01286",
          "text": "If <code>semaphore</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> it <strong class=\"purple\">must</strong> be unsignaled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-semaphore-01779",
          "text": "If <code>semaphore</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> it <strong class=\"purple\">must</strong> not have any uncompleted signal or wait operations pending",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-fence-01287",
          "text": "If <code>fence</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> it <strong class=\"purple\">must</strong> be unsignaled and <strong class=\"purple\">must</strong> not be associated with any other queue command that has not yet completed execution on that queue",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-semaphore-01780",
          "text": "<code>semaphore</code> and <code>fence</code> <strong class=\"purple\">must</strong> not both be equal to <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-surface-07783",
          "text": "If <a href=\"#swapchain-acquire-forward-progress\">forward progress</a> cannot be guaranteed for the <code>surface</code> used to create the <code>swapchain</code> member of <code>pAcquireInfo</code>, the <code>timeout</code> member of <code>pAcquireInfo</code> <strong class=\"purple\">must</strong> not be <code>UINT64_MAX</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-semaphore-03265",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> have a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_BINARY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-swapchain-parameter",
          "text": "<code>swapchain</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSwapchainKHR\">VkSwapchainKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-semaphore-parameter",
          "text": "If <code>semaphore</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>semaphore</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSemaphore\">VkSemaphore</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-fence-parameter",
          "text": "If <code>fence</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>fence</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-pImageIndex-parameter",
          "text": "<code>pImageIndex</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-swapchain-parent",
          "text": "<code>swapchain</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-semaphore-parent",
          "text": "If <code>semaphore</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImageKHR-fence-parent",
          "text": "If <code>fence</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkAcquireNextImage2KHR": {
      "core": [
        {
          "vuid": "VUID-vkAcquireNextImage2KHR-surface-07784",
          "text": "If <a href=\"#swapchain-acquire-forward-progress\">forward progress</a> cannot be guaranteed for the <code>surface</code> used to create <code>swapchain</code>, the <code>timeout</code> member of <code>pAcquireInfo</code> <strong class=\"purple\">must</strong> not be <code>UINT64_MAX</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImage2KHR-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImage2KHR-pAcquireInfo-parameter",
          "text": "<code>pAcquireInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkAcquireNextImageInfoKHR\">VkAcquireNextImageInfoKHR</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkAcquireNextImage2KHR-pImageIndex-parameter",
          "text": "<code>pImageIndex</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        }
      ]
    },
    "VkAcquireNextImageInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-swapchain-01675",
          "text": "<code>swapchain</code> <strong class=\"purple\">must</strong> not be in the retired state",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-semaphore-01288",
          "text": "If <code>semaphore</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> it <strong class=\"purple\">must</strong> be unsignaled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-semaphore-01781",
          "text": "If <code>semaphore</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> it <strong class=\"purple\">must</strong> not have any uncompleted signal or wait operations pending",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-fence-01289",
          "text": "If <code>fence</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> it <strong class=\"purple\">must</strong> be unsignaled and <strong class=\"purple\">must</strong> not be associated with any other queue command that has not yet completed execution on that queue",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-semaphore-01782",
          "text": "<code>semaphore</code> and <code>fence</code> <strong class=\"purple\">must</strong> not both be equal to <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-deviceMask-01290",
          "text": "<code>deviceMask</code> <strong class=\"purple\">must</strong> be a valid device mask",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-deviceMask-01291",
          "text": "<code>deviceMask</code> <strong class=\"purple\">must</strong> not be zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-semaphore-03266",
          "text": "<code>semaphore</code> <strong class=\"purple\">must</strong> have a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_BINARY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-swapchain-parameter",
          "text": "<code>swapchain</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSwapchainKHR\">VkSwapchainKHR</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-semaphore-parameter",
          "text": "If <code>semaphore</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>semaphore</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSemaphore\">VkSemaphore</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-fence-parameter",
          "text": "If <code>fence</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>fence</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFence\">VkFence</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkAcquireNextImageInfoKHR-commonparent",
          "text": "Each of <code>fence</code>, <code>semaphore</code>, and <code>swapchain</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "vkQueuePresentKHR": {
      "core": [
        {
          "vuid": "VUID-vkQueuePresentKHR-pSwapchains-01292",
          "text": "Each element of <code>pSwapchains</code> member of <code>pPresentInfo</code> <strong class=\"purple\">must</strong> be a swapchain that is created for a surface for which presentation is supported from <code>queue</code> as determined using a call to <code>vkGetPhysicalDeviceSurfaceSupportKHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueuePresentKHR-pSwapchains-01293",
          "text": "If more than one member of <code>pSwapchains</code> was created from a display surface, all display surfaces referenced that refer to the same display <strong class=\"purple\">must</strong> use the same display mode",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueuePresentKHR-pWaitSemaphores-01294",
          "text": "When a semaphore wait operation referring to a binary semaphore defined by the elements of the <code>pWaitSemaphores</code> member of <code>pPresentInfo</code> executes on <code>queue</code>, there <strong class=\"purple\">must</strong> be no other queues waiting on the same semaphore",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueuePresentKHR-pWaitSemaphores-03267",
          "text": "All elements of the <code>pWaitSemaphores</code> member of <code>pPresentInfo</code> <strong class=\"purple\">must</strong> be created with a <a href=\"#VkSemaphoreType\">VkSemaphoreType</a> of <code>VK_SEMAPHORE_TYPE_BINARY</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueuePresentKHR-pWaitSemaphores-03268",
          "text": "All elements of the <code>pWaitSemaphores</code> member of <code>pPresentInfo</code> <strong class=\"purple\">must</strong> reference a semaphore signal operation that has been submitted for execution and any <a href=\"#synchronization-semaphores-signaling\">semaphore signal operations</a> on which it depends <strong class=\"purple\">must</strong> have also been submitted for execution",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueuePresentKHR-queue-parameter",
          "text": "<code>queue</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueue\">VkQueue</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueuePresentKHR-pPresentInfo-parameter",
          "text": "<code>pPresentInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPresentInfoKHR\">VkPresentInfoKHR</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkPresentInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkPresentInfoKHR-pSwapchain-09231",
          "text": "Elements of <code>pSwapchain</code> <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentInfoKHR-pImageIndices-01430",
          "text": "Each element of <code>pImageIndices</code> <strong class=\"purple\">must</strong> be the index of a presentable image acquired from the swapchain specified by the corresponding element of the <code>pSwapchains</code> array, and the presented image subresource <strong class=\"purple\">must</strong> be in the <code>VK_IMAGE_LAYOUT_PRESENT_SRC_KHR</code> or <code>VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR</code> layout at the time the operation is executed on a <code>VkDevice</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PRESENT_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentInfoKHR-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkDeviceGroupPresentInfoKHR\">VkDeviceGroupPresentInfoKHR</a>, <a href=\"#VkDisplayPresentInfoKHR\">VkDisplayPresentInfoKHR</a>, or <a href=\"#VkPresentRegionsKHR\">VkPresentRegionsKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentInfoKHR-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentInfoKHR-pWaitSemaphores-parameter",
          "text": "If <code>waitSemaphoreCount</code> is not <code>0</code>, <code>pWaitSemaphores</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>waitSemaphoreCount</code> valid <a href=\"#VkSemaphore\">VkSemaphore</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentInfoKHR-pSwapchains-parameter",
          "text": "<code>pSwapchains</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>swapchainCount</code> valid <a href=\"#VkSwapchainKHR\">VkSwapchainKHR</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentInfoKHR-pImageIndices-parameter",
          "text": "<code>pImageIndices</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>swapchainCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentInfoKHR-pResults-parameter",
          "text": "If <code>pResults</code> is not <code>NULL</code>, <code>pResults</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>swapchainCount</code> <a href=\"#VkResult\">VkResult</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentInfoKHR-swapchainCount-arraylength",
          "text": "<code>swapchainCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentInfoKHR-commonparent",
          "text": "Both of the elements of <code>pSwapchains</code>, and the elements of <code>pWaitSemaphores</code> that are valid handles of non-ignored parameters <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from the same <a href=\"#VkDevice\">VkDevice</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkPresentRegionsKHR": {
      "core": [
        {
          "vuid": "VUID-VkPresentRegionsKHR-swapchainCount-01260",
          "text": "<code>swapchainCount</code> <strong class=\"purple\">must</strong> be the same value as <code>VkPresentInfoKHR</code>::<code>swapchainCount</code>, where <code>VkPresentInfoKHR</code> is included in the <code>pNext</code> chain of this <code>VkPresentRegionsKHR</code> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentRegionsKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentRegionsKHR-pRegions-parameter",
          "text": "If <code>pRegions</code> is not <code>NULL</code>, <code>pRegions</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>swapchainCount</code> valid <a href=\"#VkPresentRegionKHR\">VkPresentRegionKHR</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPresentRegionsKHR-swapchainCount-arraylength",
          "text": "<code>swapchainCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPresentRegionKHR": {
      "core": [
        {
          "vuid": "VUID-VkPresentRegionKHR-pRectangles-parameter",
          "text": "If <code>rectangleCount</code> is not <code>0</code>, and <code>pRectangles</code> is not <code>NULL</code>, <code>pRectangles</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>rectangleCount</code> valid <a href=\"#VkRectLayerKHR\">VkRectLayerKHR</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkRectLayerKHR": {
      "core": [
        {
          "vuid": "VUID-VkRectLayerKHR-offset-04864",
          "text": "The sum of <code>offset</code> and <code>extent</code>, after being transformed according to the <code>preTransform</code> member of the <a href=\"#VkSwapchainCreateInfoKHR\">VkSwapchainCreateInfoKHR</a> structure, <strong class=\"purple\">must</strong> be no greater than the <code>imageExtent</code> member of the <a href=\"#VkSwapchainCreateInfoKHR\">VkSwapchainCreateInfoKHR</a> structure passed to <a href=\"#vkCreateSwapchainKHR\">vkCreateSwapchainKHR</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkRectLayerKHR-layer-01262",
          "text": "<code>layer</code> <strong class=\"purple\">must</strong> be less than the <code>imageArrayLayers</code> member of the <a href=\"#VkSwapchainCreateInfoKHR\">VkSwapchainCreateInfoKHR</a> structure passed to <a href=\"#vkCreateSwapchainKHR\">vkCreateSwapchainKHR</a>",
          "page": "vkspec"
        }
      ]
    },
    "VkDisplayPresentInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkDisplayPresentInfoKHR-srcRect-01257",
          "text": "<code>srcRect</code> <strong class=\"purple\">must</strong> specify a rectangular region that is a subset of the image being presented",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayPresentInfoKHR-dstRect-01258",
          "text": "<code>dstRect</code> <strong class=\"purple\">must</strong> specify a rectangular region that is a subset of the <code>visibleRegion</code> parameter of the display mode the swapchain being presented uses",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayPresentInfoKHR-persistentContent-01259",
          "text": "If the <code>persistentContent</code> member of the <code>VkDisplayPropertiesKHR</code> structure returned by <code>vkGetPhysicalDeviceDisplayPropertiesKHR</code> for the display the present operation targets is <code>VK_FALSE</code>, then <code>persistent</code> <strong class=\"purple\">must</strong> be <code>VK_FALSE</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDisplayPresentInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkDeviceGroupPresentInfoKHR": {
      "core": [
        {
          "vuid": "VUID-VkDeviceGroupPresentInfoKHR-swapchainCount-01297",
          "text": "<code>swapchainCount</code> <strong class=\"purple\">must</strong> equal <code>0</code> or <a href=\"#VkPresentInfoKHR\">VkPresentInfoKHR</a>::<code>swapchainCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupPresentInfoKHR-mode-01298",
          "text": "If <code>mode</code> is <code>VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR</code>, then each element of <code>pDeviceMasks</code> <strong class=\"purple\">must</strong> have exactly one bit set, and the corresponding element of <a href=\"#VkDeviceGroupPresentCapabilitiesKHR\">VkDeviceGroupPresentCapabilitiesKHR</a>::<code>presentMask</code> <strong class=\"purple\">must</strong> be non-zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupPresentInfoKHR-mode-01299",
          "text": "If <code>mode</code> is <code>VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR</code>, then each element of <code>pDeviceMasks</code> <strong class=\"purple\">must</strong> have exactly one bit set, and some physical device in the logical device <strong class=\"purple\">must</strong> include that bit in its <a href=\"#VkDeviceGroupPresentCapabilitiesKHR\">VkDeviceGroupPresentCapabilitiesKHR</a>::<code>presentMask</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupPresentInfoKHR-mode-01300",
          "text": "If <code>mode</code> is <code>VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR</code>, then each element of <code>pDeviceMasks</code> <strong class=\"purple\">must</strong> have a value for which all set bits are set in one of the elements of <a href=\"#VkDeviceGroupPresentCapabilitiesKHR\">VkDeviceGroupPresentCapabilitiesKHR</a>::<code>presentMask</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupPresentInfoKHR-mode-01301",
          "text": "If <code>mode</code> is <code>VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR</code>, then for each bit set in each element of <code>pDeviceMasks</code>, the corresponding element of <a href=\"#VkDeviceGroupPresentCapabilitiesKHR\">VkDeviceGroupPresentCapabilitiesKHR</a>::<code>presentMask</code> <strong class=\"purple\">must</strong> be non-zero",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupPresentInfoKHR-pDeviceMasks-01302",
          "text": "The value of each element of <code>pDeviceMasks</code> <strong class=\"purple\">must</strong> be equal to the device mask passed in <a href=\"#VkAcquireNextImageInfoKHR\">VkAcquireNextImageInfoKHR</a>::<code>deviceMask</code> when the image index was last acquired",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupPresentInfoKHR-mode-01303",
          "text": "<code>mode</code> <strong class=\"purple\">must</strong> have exactly one bit set, and that bit <strong class=\"purple\">must</strong> have been included in <a href=\"#VkDeviceGroupSwapchainCreateInfoKHR\">VkDeviceGroupSwapchainCreateInfoKHR</a>::<code>modes</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupPresentInfoKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupPresentInfoKHR-pDeviceMasks-parameter",
          "text": "If <code>swapchainCount</code> is not <code>0</code>, <code>pDeviceMasks</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>swapchainCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDeviceGroupPresentInfoKHR-mode-parameter",
          "text": "<code>mode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDeviceGroupPresentModeFlagBitsKHR\">VkDeviceGroupPresentModeFlagBitsKHR</a> value",
          "page": "vkspec"
        }
      ]
    },
    "vkSetHdrMetadataEXT": {
      "core": [
        {
          "vuid": "VUID-vkSetHdrMetadataEXT-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetHdrMetadataEXT-pSwapchains-parameter",
          "text": "<code>pSwapchains</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>swapchainCount</code> valid <a href=\"#VkSwapchainKHR\">VkSwapchainKHR</a> handles",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetHdrMetadataEXT-pMetadata-parameter",
          "text": "<code>pMetadata</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>swapchainCount</code> valid <a href=\"#VkHdrMetadataEXT\">VkHdrMetadataEXT</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetHdrMetadataEXT-swapchainCount-arraylength",
          "text": "<code>swapchainCount</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetHdrMetadataEXT-pSwapchains-parent",
          "text": "Each element of <code>pSwapchains</code> <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>device</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkHdrMetadataEXT": {
      "core": [
        {
          "vuid": "VUID-VkHdrMetadataEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_HDR_METADATA_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkHdrMetadataEXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkEnumerateInstanceLayerProperties": {
      "core": [
        {
          "vuid": "VUID-vkEnumerateInstanceLayerProperties-pPropertyCount-parameter",
          "text": "<code>pPropertyCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumerateInstanceLayerProperties-pProperties-parameter",
          "text": "If the value referenced by <code>pPropertyCount</code> is not <code>0</code>, and <code>pProperties</code> is not <code>NULL</code>, <code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPropertyCount</code> <a href=\"#VkLayerProperties\">VkLayerProperties</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "vkEnumerateDeviceLayerProperties": {
      "core": [
        {
          "vuid": "VUID-vkEnumerateDeviceLayerProperties-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumerateDeviceLayerProperties-pPropertyCount-parameter",
          "text": "<code>pPropertyCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumerateDeviceLayerProperties-pProperties-parameter",
          "text": "If the value referenced by <code>pPropertyCount</code> is not <code>0</code>, and <code>pProperties</code> is not <code>NULL</code>, <code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPropertyCount</code> <a href=\"#VkLayerProperties\">VkLayerProperties</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "vkEnumerateInstanceExtensionProperties": {
      "core": [
        {
          "vuid": "VUID-vkEnumerateInstanceExtensionProperties-pLayerName-parameter",
          "text": "If <code>pLayerName</code> is not <code>NULL</code>, <code>pLayerName</code> <strong class=\"purple\">must</strong> be a null-terminated UTF-8 string",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumerateInstanceExtensionProperties-pPropertyCount-parameter",
          "text": "<code>pPropertyCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumerateInstanceExtensionProperties-pProperties-parameter",
          "text": "If the value referenced by <code>pPropertyCount</code> is not <code>0</code>, and <code>pProperties</code> is not <code>NULL</code>, <code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPropertyCount</code> <a href=\"#VkExtensionProperties\">VkExtensionProperties</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "vkEnumerateDeviceExtensionProperties": {
      "core": [
        {
          "vuid": "VUID-vkEnumerateDeviceExtensionProperties-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumerateDeviceExtensionProperties-pLayerName-parameter",
          "text": "If <code>pLayerName</code> is not <code>NULL</code>, <code>pLayerName</code> <strong class=\"purple\">must</strong> be a null-terminated UTF-8 string",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumerateDeviceExtensionProperties-pPropertyCount-parameter",
          "text": "<code>pPropertyCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkEnumerateDeviceExtensionProperties-pProperties-parameter",
          "text": "If the value referenced by <code>pPropertyCount</code> is not <code>0</code>, and <code>pProperties</code> is not <code>NULL</code>, <code>pProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pPropertyCount</code> <a href=\"#VkExtensionProperties\">VkExtensionProperties</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceFeatures": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceFeatures-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceFeatures-pFeatures-parameter",
          "text": "<code>pFeatures</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkPhysicalDeviceFeatures\">VkPhysicalDeviceFeatures</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceFeatures2": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceFeatures2-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceFeatures2-pFeatures-parameter",
          "text": "<code>pFeatures</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkPhysicalDeviceFeatures2\">VkPhysicalDeviceFeatures2</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceFeatures2": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceFeatures2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceVulkan11Features": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceVulkan11Features-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceVulkan12Features": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceVulkan12Features-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceVariablePointersFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceVariablePointersFeatures-variablePointers-01431",
          "text": "If <code>variablePointers</code> is enabled then <code>variablePointersStorageBuffer</code> <strong class=\"purple\">must</strong> also be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceVariablePointersFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceMultiviewFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceMultiviewFeatures-multiviewGeometryShader-00580",
          "text": "If <code>multiviewGeometryShader</code> is enabled then <code>multiview</code> <strong class=\"purple\">must</strong> also be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceMultiviewFeatures-multiviewTessellationShader-00581",
          "text": "If <code>multiviewTessellationShader</code> is enabled then <code>multiview</code> <strong class=\"purple\">must</strong> also be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceMultiviewFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceShaderAtomicFloatFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceShaderAtomicInt64Features": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceShaderAtomicInt64Features-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDevice8BitStorageFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDevice8BitStorageFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDevice16BitStorageFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDevice16BitStorageFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceShaderFloat16Int8Features": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceShaderFloat16Int8Features-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceShaderClockFeaturesKHR": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceShaderClockFeaturesKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceSamplerYcbcrConversionFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceSamplerYcbcrConversionFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceProtectedMemoryFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceProtectedMemoryFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceShaderDrawParametersFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceShaderDrawParametersFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceDescriptorIndexingFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceDescriptorIndexingFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceASTCDecodeFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceASTCDecodeFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceVulkanMemoryModelFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceVulkanMemoryModelFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceScalarBlockLayoutFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceScalarBlockLayoutFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceUniformBufferStandardLayoutFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceUniformBufferStandardLayoutFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceDepthClipEnableFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceDepthClipEnableFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceBufferDeviceAddressFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceBufferDeviceAddressFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceImagelessFramebufferFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceImagelessFramebufferFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceYcbcrImageArraysFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceHostQueryResetFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceHostQueryResetFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceTimelineSemaphoreFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceTimelineSemaphoreFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceExternalSciSyncFeaturesNV": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceExternalSciSyncFeaturesNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SCI_SYNC_FEATURES_NV</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceExternalSciSync2FeaturesNV": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceExternalSciSync2FeaturesNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SCI_SYNC_2_FEATURES_NV</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceExternalMemorySciBufFeaturesNV": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceExternalMemorySciBufFeaturesNV-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCI_BUF_FEATURES_NV</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceExternalMemoryScreenBufferFeaturesQNX": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceExternalMemoryScreenBufferFeaturesQNX-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCREEN_BUFFER_FEATURES_QNX</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceIndexTypeUint8FeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceIndexTypeUint8FeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceTextureCompressionASTCHDRFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceTextureCompressionASTCHDRFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceLineRasterizationFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceLineRasterizationFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceSubgroupSizeControlFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceSubgroupSizeControlFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceExtendedDynamicStateFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceExtendedDynamicStateFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceExtendedDynamicState2FeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceExtendedDynamicState2FeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceRobustness2FeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceRobustness2FeaturesEXT-robustBufferAccess2-04000",
          "text": "If <code>robustBufferAccess2</code> is enabled then <a href=\"#features-robustBufferAccess\"><code>robustBufferAccess</code></a> <strong class=\"purple\">must</strong> also be enabled",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceRobustness2FeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceImageRobustnessFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceImageRobustnessFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceShaderTerminateInvocationFeatures": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceShaderTerminateInvocationFeatures-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceCustomBorderColorFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceCustomBorderColorFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceVulkanSC10Features": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceVulkanSC10Features-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_SC_1_0_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDevicePerformanceQueryFeaturesKHR": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDevicePerformanceQueryFeaturesKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDevice4444FormatsFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDevice4444FormatsFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceSynchronization2Features": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceSynchronization2Features-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceFragmentShadingRateFeaturesKHR": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceFragmentShadingRateFeaturesKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceColorWriteEnableFeaturesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceColorWriteEnableFeaturesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceMultiviewProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceMultiviewProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceFloatControlsProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceFloatControlsProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceDiscardRectanglePropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceDiscardRectanglePropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceSampleLocationsPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceSampleLocationsPropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceExternalMemoryHostPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceExternalMemoryHostPropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDevicePointClippingProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDevicePointClippingProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceSubgroupProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceSubgroupProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceSubgroupSizeControlProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceSubgroupSizeControlProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceSamplerFilterMinmaxProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceSamplerFilterMinmaxProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceProtectedMemoryProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceProtectedMemoryProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceMaintenance3Properties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceMaintenance3Properties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceDescriptorIndexingProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceDescriptorIndexingProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceConservativeRasterizationPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceConservativeRasterizationPropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceDepthStencilResolveProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceDepthStencilResolveProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDevicePerformanceQueryPropertiesKHR": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDevicePerformanceQueryPropertiesKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceTexelBufferAlignmentProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceTexelBufferAlignmentProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceTimelineSemaphoreProperties": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceTimelineSemaphoreProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceLineRasterizationPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceLineRasterizationPropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceRobustness2PropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceRobustness2PropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceFragmentShadingRatePropertiesKHR": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceFragmentShadingRatePropertiesKHR-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceCustomBorderColorPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceCustomBorderColorPropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceMultisamplePropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceMultisamplePropertiesEXT-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceMultisamplePropertiesEXT-samples-parameter",
          "text": "<code>samples</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSampleCountFlagBits\">VkSampleCountFlagBits</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceMultisamplePropertiesEXT-pMultisampleProperties-parameter",
          "text": "<code>pMultisampleProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkMultisamplePropertiesEXT\">VkMultisamplePropertiesEXT</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkMultisamplePropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkMultisamplePropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkMultisamplePropertiesEXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceFormatProperties": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceFormatProperties-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceFormatProperties-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceFormatProperties-pFormatProperties-parameter",
          "text": "<code>pFormatProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkFormatProperties\">VkFormatProperties</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceFormatProperties2": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceFormatProperties2-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceFormatProperties2-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceFormatProperties2-pFormatProperties-parameter",
          "text": "<code>pFormatProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkFormatProperties2\">VkFormatProperties2</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkFormatProperties2": {
      "core": [
        {
          "vuid": "VUID-VkFormatProperties2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFormatProperties2-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkDrmFormatModifierPropertiesList2EXT\">VkDrmFormatModifierPropertiesList2EXT</a> or <a href=\"#VkDrmFormatModifierPropertiesListEXT\">VkDrmFormatModifierPropertiesListEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFormatProperties2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        }
      ]
    },
    "VkDrmFormatModifierPropertiesListEXT": {
      "core": [
        {
          "vuid": "VUID-VkDrmFormatModifierPropertiesListEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceImageFormatProperties": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceImageFormatProperties-tiling-02248",
          "text": "<code>tiling</code> <strong class=\"purple\">must</strong> not be <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code>. (Use <a href=\"#vkGetPhysicalDeviceImageFormatProperties2\">vkGetPhysicalDeviceImageFormatProperties2</a> instead)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceImageFormatProperties-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceImageFormatProperties-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceImageFormatProperties-type-parameter",
          "text": "<code>type</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageType\">VkImageType</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceImageFormatProperties-tiling-parameter",
          "text": "<code>tiling</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageTiling\">VkImageTiling</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceImageFormatProperties-usage-parameter",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageUsageFlagBits\">VkImageUsageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceImageFormatProperties-usage-requiredbitmask",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceImageFormatProperties-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageCreateFlagBits\">VkImageCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceImageFormatProperties-pImageFormatProperties-parameter",
          "text": "<code>pImageFormatProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkImageFormatProperties\">VkImageFormatProperties</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceImageFormatProperties2": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceImageFormatProperties2-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceImageFormatProperties2-pImageFormatInfo-parameter",
          "text": "<code>pImageFormatInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPhysicalDeviceImageFormatInfo2\">VkPhysicalDeviceImageFormatInfo2</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceImageFormatProperties2-pImageFormatProperties-parameter",
          "text": "<code>pImageFormatProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkImageFormatProperties2\">VkImageFormatProperties2</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceImageFormatInfo2": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceImageFormatInfo2-tiling-02249",
          "text": "<code>tiling</code> <strong class=\"purple\">must</strong> be <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code> if and only if the <code>pNext</code> chain includes <a href=\"#VkPhysicalDeviceImageDrmFormatModifierInfoEXT\">VkPhysicalDeviceImageDrmFormatModifierInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageFormatInfo2-tiling-02313",
          "text": "If <code>tiling</code> is <code>VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT</code> and <code>flags</code> contains <code>VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT</code>, then the <code>pNext</code> chain <strong class=\"purple\">must</strong> include a <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a> structure with non-zero <code>viewFormatCount</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageFormatInfo2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageFormatInfo2-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkImageFormatListCreateInfo\">VkImageFormatListCreateInfo</a>, <a href=\"#VkImageStencilUsageCreateInfo\">VkImageStencilUsageCreateInfo</a>, <a href=\"#VkPhysicalDeviceExternalImageFormatInfo\">VkPhysicalDeviceExternalImageFormatInfo</a>, <a href=\"#VkPhysicalDeviceImageDrmFormatModifierInfoEXT\">VkPhysicalDeviceImageDrmFormatModifierInfoEXT</a>, or <a href=\"#VkPhysicalDeviceImageViewImageFormatInfoEXT\">VkPhysicalDeviceImageViewImageFormatInfoEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageFormatInfo2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageFormatInfo2-format-parameter",
          "text": "<code>format</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFormat\">VkFormat</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageFormatInfo2-type-parameter",
          "text": "<code>type</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageType\">VkImageType</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageFormatInfo2-tiling-parameter",
          "text": "<code>tiling</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageTiling\">VkImageTiling</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageFormatInfo2-usage-parameter",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageUsageFlagBits\">VkImageUsageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageFormatInfo2-usage-requiredbitmask",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageFormatInfo2-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkImageCreateFlagBits\">VkImageCreateFlagBits</a> values",
          "page": "vkspec"
        }
      ]
    },
    "VkImageFormatProperties2": {
      "core": [
        {
          "vuid": "VUID-VkImageFormatProperties2-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageFormatProperties2-pNext-pNext",
          "text": "Each <code>pNext</code> member of any structure (including this one) in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be either <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkExternalImageFormatProperties\">VkExternalImageFormatProperties</a>, <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a>, or <a href=\"#VkSamplerYcbcrConversionImageFormatProperties\">VkSamplerYcbcrConversionImageFormatProperties</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkImageFormatProperties2-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceExternalImageFormatInfo": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceExternalImageFormatInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceExternalImageFormatInfo-handleType-parameter",
          "text": "If <code>handleType</code> is not <code>0</code>, <code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkExternalImageFormatProperties": {
      "core": [
        {
          "vuid": "VUID-VkExternalImageFormatProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceImageDrmFormatModifierInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceImageDrmFormatModifierInfoEXT-sharingMode-02314",
          "text": "If <code>sharingMode</code> is <code>VK_SHARING_MODE_CONCURRENT</code>, then <code>pQueueFamilyIndices</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>queueFamilyIndexCount</code> <code>uint32_t</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageDrmFormatModifierInfoEXT-sharingMode-02315",
          "text": "If <code>sharingMode</code> is <code>VK_SHARING_MODE_CONCURRENT</code>, then <code>queueFamilyIndexCount</code> <strong class=\"purple\">must</strong> be greater than <code>1</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageDrmFormatModifierInfoEXT-sharingMode-02316",
          "text": "If <code>sharingMode</code> is <code>VK_SHARING_MODE_CONCURRENT</code>, each element of <code>pQueueFamilyIndices</code> <strong class=\"purple\">must</strong> be unique and <strong class=\"purple\">must</strong> be less than the <code>pQueueFamilyPropertyCount</code> returned by <a href=\"#vkGetPhysicalDeviceQueueFamilyProperties2\">vkGetPhysicalDeviceQueueFamilyProperties2</a> for the <code>physicalDevice</code> that was used to create <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageDrmFormatModifierInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageDrmFormatModifierInfoEXT-sharingMode-parameter",
          "text": "<code>sharingMode</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkSharingMode\">VkSharingMode</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkSamplerYcbcrConversionImageFormatProperties": {
      "core": [
        {
          "vuid": "VUID-VkSamplerYcbcrConversionImageFormatProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceImageViewImageFormatInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceImageViewImageFormatInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceImageViewImageFormatInfoEXT-imageViewType-parameter",
          "text": "<code>imageViewType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkImageViewType\">VkImageViewType</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkFilterCubicImageViewImageFormatPropertiesEXT": {
      "core": [
        {
          "vuid": "VUID-VkFilterCubicImageViewImageFormatPropertiesEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFilterCubicImageViewImageFormatPropertiesEXT-pNext-02627",
          "text": "If the <code>pNext</code> chain of the <a href=\"#VkImageFormatProperties2\">VkImageFormatProperties2</a> structure includes a <a href=\"#VkFilterCubicImageViewImageFormatPropertiesEXT\">VkFilterCubicImageViewImageFormatPropertiesEXT</a> structure, the <code>pNext</code> chain of the <a href=\"#VkPhysicalDeviceImageFormatInfo2\">VkPhysicalDeviceImageFormatInfo2</a> structure <strong class=\"purple\">must</strong> include a <a href=\"#VkPhysicalDeviceImageViewImageFormatInfoEXT\">VkPhysicalDeviceImageViewImageFormatInfoEXT</a> structure with an <code>imageViewType</code> that is compatible with <code>imageType</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceExternalBufferProperties": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalBufferProperties-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalBufferProperties-pExternalBufferInfo-parameter",
          "text": "<code>pExternalBufferInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPhysicalDeviceExternalBufferInfo\">VkPhysicalDeviceExternalBufferInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalBufferProperties-pExternalBufferProperties-parameter",
          "text": "<code>pExternalBufferProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkExternalBufferProperties\">VkExternalBufferProperties</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceExternalBufferInfo": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceExternalBufferInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceExternalBufferInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceExternalBufferInfo-flags-parameter",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkBufferCreateFlagBits\">VkBufferCreateFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceExternalBufferInfo-usage-parameter",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkBufferUsageFlagBits\">VkBufferUsageFlagBits</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceExternalBufferInfo-usage-requiredbitmask",
          "text": "<code>usage</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceExternalBufferInfo-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalMemoryHandleTypeFlagBits\">VkExternalMemoryHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkExternalBufferProperties": {
      "core": [
        {
          "vuid": "VUID-VkExternalBufferProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExternalBufferProperties-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceExternalSemaphoreProperties": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalSemaphoreProperties-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalSemaphoreProperties-pExternalSemaphoreInfo-parameter",
          "text": "<code>pExternalSemaphoreInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPhysicalDeviceExternalSemaphoreInfo\">VkPhysicalDeviceExternalSemaphoreInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalSemaphoreProperties-pExternalSemaphoreProperties-parameter",
          "text": "<code>pExternalSemaphoreProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkExternalSemaphoreProperties\">VkExternalSemaphoreProperties</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceExternalSemaphoreInfo": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceExternalSemaphoreInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceExternalSemaphoreInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a pointer to a valid instance of <a href=\"#VkSemaphoreTypeCreateInfo\">VkSemaphoreTypeCreateInfo</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceExternalSemaphoreInfo-sType-unique",
          "text": "The <code>sType</code> value of each struct in the <code>pNext</code> chain <strong class=\"purple\">must</strong> be unique",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceExternalSemaphoreInfo-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalSemaphoreHandleTypeFlagBits\">VkExternalSemaphoreHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkExternalSemaphoreProperties": {
      "core": [
        {
          "vuid": "VUID-VkExternalSemaphoreProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExternalSemaphoreProperties-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceExternalFenceProperties": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalFenceProperties-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalFenceProperties-pExternalFenceInfo-parameter",
          "text": "<code>pExternalFenceInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkPhysicalDeviceExternalFenceInfo\">VkPhysicalDeviceExternalFenceInfo</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceExternalFenceProperties-pExternalFenceProperties-parameter",
          "text": "<code>pExternalFenceProperties</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkExternalFenceProperties\">VkExternalFenceProperties</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkPhysicalDeviceExternalFenceInfo": {
      "core": [
        {
          "vuid": "VUID-VkPhysicalDeviceExternalFenceInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceExternalFenceInfo-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkPhysicalDeviceExternalFenceInfo-handleType-parameter",
          "text": "<code>handleType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkExternalFenceHandleTypeFlagBits\">VkExternalFenceHandleTypeFlagBits</a> value",
          "page": "vkspec"
        }
      ]
    },
    "VkExternalFenceProperties": {
      "core": [
        {
          "vuid": "VUID-VkExternalFenceProperties-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkExternalFenceProperties-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceCalibrateableTimeDomainsEXT-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceCalibrateableTimeDomainsEXT-pTimeDomainCount-parameter",
          "text": "<code>pTimeDomainCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceCalibrateableTimeDomainsEXT-pTimeDomains-parameter",
          "text": "If the value referenced by <code>pTimeDomainCount</code> is not <code>0</code>, and <code>pTimeDomains</code> is not <code>NULL</code>, <code>pTimeDomains</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pTimeDomainCount</code> <a href=\"#VkTimeDomainEXT\">VkTimeDomainEXT</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkGetPhysicalDeviceRefreshableObjectTypesKHR": {
      "core": [
        {
          "vuid": "VUID-vkGetPhysicalDeviceRefreshableObjectTypesKHR-physicalDevice-parameter",
          "text": "<code>physicalDevice</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceRefreshableObjectTypesKHR-pRefreshableObjectTypeCount-parameter",
          "text": "<code>pRefreshableObjectTypeCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetPhysicalDeviceRefreshableObjectTypesKHR-pRefreshableObjectTypes-parameter",
          "text": "If the value referenced by <code>pRefreshableObjectTypeCount</code> is not <code>0</code>, and <code>pRefreshableObjectTypes</code> is not <code>NULL</code>, <code>pRefreshableObjectTypes</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pRefreshableObjectTypeCount</code> <a href=\"#VkObjectType\">VkObjectType</a> values",
          "page": "vkspec"
        }
      ]
    },
    "vkSetDebugUtilsObjectNameEXT": {
      "core": [
        {
          "vuid": "VUID-vkSetDebugUtilsObjectNameEXT-pNameInfo-02587",
          "text": "<code>pNameInfo-&gt;objectType</code> <strong class=\"purple\">must</strong> not be <code>VK_OBJECT_TYPE_UNKNOWN</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetDebugUtilsObjectNameEXT-pNameInfo-02588",
          "text": "<code>pNameInfo-&gt;objectHandle</code> <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetDebugUtilsObjectNameEXT-pNameInfo-07872",
          "text": "If <code>pNameInfo-&gt;objectHandle</code> is the valid handle of an instance-level object, the <a href=\"#VkDevice\">VkDevice</a> identified by <code>device</code> <strong class=\"purple\">must</strong> be a descendent of the same <a href=\"#VkInstance\">VkInstance</a> as the object identified by <code>pNameInfo-&gt;objectHandle</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetDebugUtilsObjectNameEXT-pNameInfo-07873",
          "text": "If <code>pNameInfo-&gt;objectHandle</code> is the valid handle of a physical-device-level object, the <a href=\"#VkDevice\">VkDevice</a> identified by <code>device</code> <strong class=\"purple\">must</strong> be a descendant of the same <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> as the object identified by <code>pNameInfo-&gt;objectHandle</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetDebugUtilsObjectNameEXT-pNameInfo-07874",
          "text": "If <code>pNameInfo-&gt;objectHandle</code> is the valid handle of a device-level object, that object <strong class=\"purple\">must</strong> be a descendent of the <a href=\"#VkDevice\">VkDevice</a> identified by <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetDebugUtilsObjectNameEXT-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetDebugUtilsObjectNameEXT-pNameInfo-parameter",
          "text": "<code>pNameInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDebugUtilsObjectNameInfoEXT\">VkDebugUtilsObjectNameInfoEXT</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkDebugUtilsObjectNameInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkDebugUtilsObjectNameInfoEXT-objectType-02589",
          "text": "If <code>objectType</code> is <code>VK_OBJECT_TYPE_UNKNOWN</code>, <code>objectHandle</code> <strong class=\"purple\">must</strong> not be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsObjectNameInfoEXT-objectType-02590",
          "text": "If <code>objectType</code> is not <code>VK_OBJECT_TYPE_UNKNOWN</code>, <code>objectHandle</code> <strong class=\"purple\">must</strong> be <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a> or a valid Vulkan handle of the type associated with <code>objectType</code> as defined in the <a href=\"#debugging-object-types\"><code>VkObjectType</code> and Vulkan Handle Relationship</a> table",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsObjectNameInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsObjectNameInfoEXT-objectType-parameter",
          "text": "<code>objectType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkObjectType\">VkObjectType</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsObjectNameInfoEXT-pObjectName-parameter",
          "text": "If <code>pObjectName</code> is not <code>NULL</code>, <code>pObjectName</code> <strong class=\"purple\">must</strong> be a null-terminated UTF-8 string",
          "page": "vkspec"
        }
      ]
    },
    "vkSetDebugUtilsObjectTagEXT": {
      "core": [
        {
          "vuid": "VUID-vkSetDebugUtilsObjectTagEXT-pNameInfo-07875",
          "text": "If <code>pNameInfo-&gt;objectHandle</code> is the valid handle of an instance-level object, the <a href=\"#VkDevice\">VkDevice</a> identified by <code>device</code> <strong class=\"purple\">must</strong> be a descendent of the same <a href=\"#VkInstance\">VkInstance</a> as the object identified by <code>pNameInfo-&gt;objectHandle</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetDebugUtilsObjectTagEXT-pNameInfo-07876",
          "text": "If <code>pNameInfo-&gt;objectHandle</code> is the valid handle of a physical-device-level object, the <a href=\"#VkDevice\">VkDevice</a> identified by <code>device</code> <strong class=\"purple\">must</strong> be a descendant of the same <a href=\"#VkPhysicalDevice\">VkPhysicalDevice</a> as the object identified by <code>pNameInfo-&gt;objectHandle</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetDebugUtilsObjectTagEXT-pNameInfo-07877",
          "text": "If <code>pNameInfo-&gt;objectHandle</code> is the valid handle of a device-level object, that object <strong class=\"purple\">must</strong> be a descendent of the <a href=\"#VkDevice\">VkDevice</a> identified by <code>device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetDebugUtilsObjectTagEXT-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSetDebugUtilsObjectTagEXT-pTagInfo-parameter",
          "text": "<code>pTagInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDebugUtilsObjectTagInfoEXT\">VkDebugUtilsObjectTagInfoEXT</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkDebugUtilsObjectTagInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkDebugUtilsObjectTagInfoEXT-objectType-01908",
          "text": "<code>objectType</code> <strong class=\"purple\">must</strong> not be <code>VK_OBJECT_TYPE_UNKNOWN</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsObjectTagInfoEXT-objectHandle-01910",
          "text": "<code>objectHandle</code> <strong class=\"purple\">must</strong> be a valid Vulkan handle of the type associated with <code>objectType</code> as defined in the <a href=\"#debugging-object-types\"><code>VkObjectType</code> and Vulkan Handle Relationship</a> table",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsObjectTagInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsObjectTagInfoEXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsObjectTagInfoEXT-objectType-parameter",
          "text": "<code>objectType</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkObjectType\">VkObjectType</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsObjectTagInfoEXT-pTag-parameter",
          "text": "<code>pTag</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>tagSize</code> bytes",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsObjectTagInfoEXT-tagSize-arraylength",
          "text": "<code>tagSize</code> <strong class=\"purple\">must</strong> be greater than <code>0</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkQueueBeginDebugUtilsLabelEXT": {
      "core": [
        {
          "vuid": "VUID-vkQueueBeginDebugUtilsLabelEXT-queue-parameter",
          "text": "<code>queue</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueue\">VkQueue</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueBeginDebugUtilsLabelEXT-pLabelInfo-parameter",
          "text": "<code>pLabelInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDebugUtilsLabelEXT\">VkDebugUtilsLabelEXT</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "VkDebugUtilsLabelEXT": {
      "core": [
        {
          "vuid": "VUID-VkDebugUtilsLabelEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsLabelEXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsLabelEXT-pLabelName-parameter",
          "text": "<code>pLabelName</code> <strong class=\"purple\">must</strong> be a null-terminated UTF-8 string",
          "page": "vkspec"
        }
      ]
    },
    "vkQueueEndDebugUtilsLabelEXT": {
      "core": [
        {
          "vuid": "VUID-vkQueueEndDebugUtilsLabelEXT-None-01911",
          "text": "There <strong class=\"purple\">must</strong> be an outstanding <code>vkQueueBeginDebugUtilsLabelEXT</code> command prior to the <code>vkQueueEndDebugUtilsLabelEXT</code> on the queue",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueEndDebugUtilsLabelEXT-queue-parameter",
          "text": "<code>queue</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueue\">VkQueue</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "vkQueueInsertDebugUtilsLabelEXT": {
      "core": [
        {
          "vuid": "VUID-vkQueueInsertDebugUtilsLabelEXT-queue-parameter",
          "text": "<code>queue</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkQueue\">VkQueue</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkQueueInsertDebugUtilsLabelEXT-pLabelInfo-parameter",
          "text": "<code>pLabelInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDebugUtilsLabelEXT\">VkDebugUtilsLabelEXT</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdBeginDebugUtilsLabelEXT": {
      "core": [
        {
          "vuid": "VUID-vkCmdBeginDebugUtilsLabelEXT-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginDebugUtilsLabelEXT-pLabelInfo-parameter",
          "text": "<code>pLabelInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDebugUtilsLabelEXT\">VkDebugUtilsLabelEXT</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginDebugUtilsLabelEXT-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdBeginDebugUtilsLabelEXT-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdEndDebugUtilsLabelEXT": {
      "core": [
        {
          "vuid": "VUID-vkCmdEndDebugUtilsLabelEXT-commandBuffer-01912",
          "text": "There <strong class=\"purple\">must</strong> be an outstanding <code>vkCmdBeginDebugUtilsLabelEXT</code> command prior to the <code>vkCmdEndDebugUtilsLabelEXT</code> on the queue that <code>commandBuffer</code> is submitted to",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndDebugUtilsLabelEXT-commandBuffer-01913",
          "text": "If <code>commandBuffer</code> is a secondary command buffer, there <strong class=\"purple\">must</strong> be an outstanding <code>vkCmdBeginDebugUtilsLabelEXT</code> command recorded to <code>commandBuffer</code> that has not previously been ended by a call to <code>vkCmdEndDebugUtilsLabelEXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndDebugUtilsLabelEXT-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndDebugUtilsLabelEXT-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdEndDebugUtilsLabelEXT-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCmdInsertDebugUtilsLabelEXT": {
      "core": [
        {
          "vuid": "VUID-vkCmdInsertDebugUtilsLabelEXT-commandBuffer-parameter",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkCommandBuffer\">VkCommandBuffer</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdInsertDebugUtilsLabelEXT-pLabelInfo-parameter",
          "text": "<code>pLabelInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDebugUtilsLabelEXT\">VkDebugUtilsLabelEXT</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdInsertDebugUtilsLabelEXT-commandBuffer-recording",
          "text": "<code>commandBuffer</code> <strong class=\"purple\">must</strong> be in the <a href=\"#commandbuffers-lifecycle\">recording state</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCmdInsertDebugUtilsLabelEXT-commandBuffer-cmdpool",
          "text": "The <code>VkCommandPool</code> that <code>commandBuffer</code> was allocated from <strong class=\"purple\">must</strong> support graphics, or compute operations",
          "page": "vkspec"
        }
      ]
    },
    "vkCreateDebugUtilsMessengerEXT": {
      "core": [
        {
          "vuid": "VUID-vkCreateDebugUtilsMessengerEXT-instance-parameter",
          "text": "<code>instance</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkInstance\">VkInstance</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDebugUtilsMessengerEXT-pCreateInfo-parameter",
          "text": "<code>pCreateInfo</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDebugUtilsMessengerCreateInfoEXT\">VkDebugUtilsMessengerCreateInfoEXT</a> structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDebugUtilsMessengerEXT-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkCreateDebugUtilsMessengerEXT-pMessenger-parameter",
          "text": "<code>pMessenger</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkDebugUtilsMessengerEXT\">VkDebugUtilsMessengerEXT</a> handle",
          "page": "vkspec"
        }
      ]
    },
    "VkDebugUtilsMessengerCreateInfoEXT": {
      "core": [
        {
          "vuid": "VUID-VkDebugUtilsMessengerCreateInfoEXT-pfnUserCallback-01914",
          "text": "<code>pfnUserCallback</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#PFN_vkDebugUtilsMessengerCallbackEXT\">PFN_vkDebugUtilsMessengerCallbackEXT</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCreateInfoEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCreateInfoEXT-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCreateInfoEXT-messageSeverity-parameter",
          "text": "<code>messageSeverity</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkDebugUtilsMessageSeverityFlagBitsEXT\">VkDebugUtilsMessageSeverityFlagBitsEXT</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCreateInfoEXT-messageSeverity-requiredbitmask",
          "text": "<code>messageSeverity</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCreateInfoEXT-messageType-parameter",
          "text": "<code>messageType</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkDebugUtilsMessageTypeFlagBitsEXT\">VkDebugUtilsMessageTypeFlagBitsEXT</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCreateInfoEXT-messageType-requiredbitmask",
          "text": "<code>messageType</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCreateInfoEXT-pfnUserCallback-parameter",
          "text": "<code>pfnUserCallback</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#PFN_vkDebugUtilsMessengerCallbackEXT\">PFN_vkDebugUtilsMessengerCallbackEXT</a> value",
          "page": "vkspec"
        }
      ]
    },
    "PFN_vkDebugUtilsMessengerCallbackEXT": {
      "core": [
        {
          "vuid": "VUID-PFN_vkDebugUtilsMessengerCallbackEXT-None-04769",
          "text": "The callback <strong class=\"purple\">must</strong> not make calls to any Vulkan commands",
          "page": "vkspec"
        }
      ]
    },
    "VkDebugUtilsMessengerCallbackDataEXT": {
      "core": [
        {
          "vuid": "VUID-VkDebugUtilsMessengerCallbackDataEXT-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCallbackDataEXT-pNext-pNext",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCallbackDataEXT-flags-zerobitmask",
          "text": "<code>flags</code> <strong class=\"purple\">must</strong> be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCallbackDataEXT-pMessageIdName-parameter",
          "text": "If <code>pMessageIdName</code> is not <code>NULL</code>, <code>pMessageIdName</code> <strong class=\"purple\">must</strong> be a null-terminated UTF-8 string",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCallbackDataEXT-pMessage-parameter",
          "text": "<code>pMessage</code> <strong class=\"purple\">must</strong> be a null-terminated UTF-8 string",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCallbackDataEXT-pQueueLabels-parameter",
          "text": "If <code>queueLabelCount</code> is not <code>0</code>, <code>pQueueLabels</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>queueLabelCount</code> valid <a href=\"#VkDebugUtilsLabelEXT\">VkDebugUtilsLabelEXT</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCallbackDataEXT-pCmdBufLabels-parameter",
          "text": "If <code>cmdBufLabelCount</code> is not <code>0</code>, <code>pCmdBufLabels</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>cmdBufLabelCount</code> valid <a href=\"#VkDebugUtilsLabelEXT\">VkDebugUtilsLabelEXT</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkDebugUtilsMessengerCallbackDataEXT-pObjects-parameter",
          "text": "If <code>objectCount</code> is not <code>0</code>, <code>pObjects</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>objectCount</code> valid <a href=\"#VkDebugUtilsObjectNameInfoEXT\">VkDebugUtilsObjectNameInfoEXT</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "vkSubmitDebugUtilsMessageEXT": {
      "core": [
        {
          "vuid": "VUID-vkSubmitDebugUtilsMessageEXT-objectType-02591",
          "text": "The <code>objectType</code> member of each element of <code>pCallbackData-&gt;pObjects</code> <strong class=\"purple\">must</strong> not be <code>VK_OBJECT_TYPE_UNKNOWN</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSubmitDebugUtilsMessageEXT-instance-parameter",
          "text": "<code>instance</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkInstance\">VkInstance</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSubmitDebugUtilsMessageEXT-messageSeverity-parameter",
          "text": "<code>messageSeverity</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDebugUtilsMessageSeverityFlagBitsEXT\">VkDebugUtilsMessageSeverityFlagBitsEXT</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSubmitDebugUtilsMessageEXT-messageTypes-parameter",
          "text": "<code>messageTypes</code> <strong class=\"purple\">must</strong> be a valid combination of <a href=\"#VkDebugUtilsMessageTypeFlagBitsEXT\">VkDebugUtilsMessageTypeFlagBitsEXT</a> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSubmitDebugUtilsMessageEXT-messageTypes-requiredbitmask",
          "text": "<code>messageTypes</code> <strong class=\"purple\">must</strong> not be <code>0</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkSubmitDebugUtilsMessageEXT-pCallbackData-parameter",
          "text": "<code>pCallbackData</code> <strong class=\"purple\">must</strong> be a valid pointer to a valid <a href=\"#VkDebugUtilsMessengerCallbackDataEXT\">VkDebugUtilsMessengerCallbackDataEXT</a> structure",
          "page": "vkspec"
        }
      ]
    },
    "vkDestroyDebugUtilsMessengerEXT": {
      "core": [
        {
          "vuid": "VUID-vkDestroyDebugUtilsMessengerEXT-instance-parameter",
          "text": "<code>instance</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkInstance\">VkInstance</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyDebugUtilsMessengerEXT-messenger-parameter",
          "text": "If <code>messenger</code> is not <a href=\"#VK_NULL_HANDLE\">VK_NULL_HANDLE</a>, <code>messenger</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDebugUtilsMessengerEXT\">VkDebugUtilsMessengerEXT</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyDebugUtilsMessengerEXT-pAllocator-null",
          "text": "<code>pAllocator</code> <strong class=\"purple\">must</strong> be <code>NULL</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkDestroyDebugUtilsMessengerEXT-messenger-parent",
          "text": "If <code>messenger</code> is a valid handle, it <strong class=\"purple\">must</strong> have been created, allocated, or retrieved from <code>instance</code>",
          "page": "vkspec"
        }
      ]
    },
    "VkFaultData": {
      "core": [
        {
          "vuid": "VUID-VkFaultData-pNext-05019",
          "text": "<code>pNext</code> <strong class=\"purple\">must</strong> be <code>NULL</code> or a valid pointer to an implementation-specific structure",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFaultData-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_FAULT_DATA</code>",
          "page": "vkspec"
        }
      ]
    },
    "vkGetFaultData": {
      "core": [
        {
          "vuid": "VUID-vkGetFaultData-pFaultCount-05020",
          "text": "<code>pFaultCount</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxQueryFaultCount\"><code>maxQueryFaultCount</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFaultData-device-parameter",
          "text": "<code>device</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkDevice\">VkDevice</a> handle",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFaultData-faultQueryBehavior-parameter",
          "text": "<code>faultQueryBehavior</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#VkFaultQueryBehavior\">VkFaultQueryBehavior</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFaultData-pUnrecordedFaults-parameter",
          "text": "<code>pUnrecordedFaults</code> <strong class=\"purple\">must</strong> be a valid pointer to a <a href=\"#VkBool32\">VkBool32</a> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFaultData-pFaultCount-parameter",
          "text": "<code>pFaultCount</code> <strong class=\"purple\">must</strong> be a valid pointer to a <code>uint32_t</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-vkGetFaultData-pFaults-parameter",
          "text": "If the value referenced by <code>pFaultCount</code> is not <code>0</code>, and <code>pFaults</code> is not <code>NULL</code>, <code>pFaults</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>pFaultCount</code> <a href=\"#VkFaultData\">VkFaultData</a> structures",
          "page": "vkspec"
        }
      ]
    },
    "VkFaultCallbackInfo": {
      "core": [
        {
          "vuid": "VUID-VkFaultCallbackInfo-faultCount-05138",
          "text": "<code>faultCount</code> <strong class=\"purple\">must</strong> either be 0, or equal to <a href=\"#limits-maxCallbackFaultCount\"><code>VkPhysicalDeviceVulkanSC10Properties</code>::<code>maxCallbackFaultCount</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFaultCallbackInfo-sType-sType",
          "text": "<code>sType</code> <strong class=\"purple\">must</strong> be <code>VK_STRUCTURE_TYPE_FAULT_CALLBACK_INFO</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFaultCallbackInfo-pFaults-parameter",
          "text": "If <code>faultCount</code> is not <code>0</code>, and <code>pFaults</code> is not <code>NULL</code>, <code>pFaults</code> <strong class=\"purple\">must</strong> be a valid pointer to an array of <code>faultCount</code> <a href=\"#VkFaultData\">VkFaultData</a> structures",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-VkFaultCallbackInfo-pfnFaultCallback-parameter",
          "text": "<code>pfnFaultCallback</code> <strong class=\"purple\">must</strong> be a valid <a href=\"#PFN_vkFaultCallbackFunction\">PFN_vkFaultCallbackFunction</a> value",
          "page": "vkspec"
        }
      ]
    },
    "StandaloneSpirv": {
      "core": [
        {
          "vuid": "VUID-StandaloneSpirv-None-04633",
          "text": "Every entry point <strong class=\"purple\">must</strong> have no return value and accept no arguments",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04634",
          "text": "The static function-call graph for an entry point <strong class=\"purple\">must</strong> not contain cycles; that is, static recursion is not allowed",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04635",
          "text": "The <code>Logical</code> or <code>PhysicalStorageBuffer64</code> addressing model <strong class=\"purple\">must</strong> be selected",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04636",
          "text": "<code>Scope</code> for execution <strong class=\"purple\">must</strong> be limited to <code>Workgroup</code> or <code>Subgroup</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04637",
          "text": "If the <code>Scope</code> for execution is <code>Workgroup</code>, then it <strong class=\"purple\">must</strong> only be used in the task, mesh, tessellation control, or compute <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04638",
          "text": "<code>Scope</code> for memory <strong class=\"purple\">must</strong> be limited to <code>Device</code>, <code>QueueFamily</code>, <code>Workgroup</code>, <code>ShaderCallKHR</code>, <code>Subgroup</code>, or <code>Invocation</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-ExecutionModel-07320",
          "text": "If the <code>Execution</code> <code>Model</code> is <code>TessellationControl</code>, and the <code>MemoryModel</code> is <code>GLSL450</code>, the <code>Scope</code> for memory <strong class=\"purple\">must</strong> not be <code>Workgroup</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-07321",
          "text": "If the <code>Scope</code> for memory is <code>Workgroup</code>, then it <strong class=\"purple\">must</strong> only be used in the task, mesh, tessellation control, or compute <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04640",
          "text": "If the <code>Scope</code> for memory is <code>ShaderCallKHR</code>, then it <strong class=\"purple\">must</strong> only be used in ray generation, intersection, closest hit, any-hit, miss, and callable <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04641",
          "text": "If the <code>Scope</code> for memory is <code>Invocation</code>, then memory semantics <strong class=\"purple\">must</strong> be <code>None</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04642",
          "text": "<code>Scope</code> for <a href=\"#shaders-group-operations\">group operations</a> <strong class=\"purple\">must</strong> be limited to <code>Subgroup</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-SubgroupVoteKHR-07951",
          "text": "If none of the <code>SubgroupVoteKHR</code>, <code>GroupNonUniform</code>, or <code>SubgroupBallotKHR</code> capabilities are declared, <code>Scope</code> for memory <strong class=\"purple\">must</strong> not be <code>Subgroup</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04643",
          "text": "<code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> be limited to <code>UniformConstant</code>, <code>Input</code>, <code>Uniform</code>, <code>Output</code>, <code>Workgroup</code>, <code>Private</code>, <code>Function</code>, <code>PushConstant</code>, <code>Image</code>, <code>StorageBuffer</code>, <code>RayPayloadKHR</code>, <code>IncomingRayPayloadKHR</code>, <code>HitAttributeKHR</code>, <code>CallableDataKHR</code>, <code>IncomingCallableDataKHR</code>, <code>ShaderRecordBufferKHR</code>, <code>PhysicalStorageBuffer</code>, or <code>TileImageEXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04644",
          "text": "If the <code>Storage</code> <code>Class</code> is <code>Output</code>, then it <strong class=\"purple\">must</strong> not be used in the <code>GlCompute</code>, <code>RayGenerationKHR</code>, <code>IntersectionKHR</code>, <code>AnyHitKHR</code>, <code>ClosestHitKHR</code>, <code>MissKHR</code>, or <code>CallableKHR</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04645",
          "text": "If the <code>Storage</code> <code>Class</code> is <code>Workgroup</code>, then it <strong class=\"purple\">must</strong> only be used in the task, mesh, or compute <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-08720",
          "text": "If the <code>Storage</code> <code>Class</code> is <code>TileImageEXT</code>, then it <strong class=\"purple\">must</strong> only be used in the fragment execution model",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpAtomicStore-04730",
          "text": "<code>OpAtomicStore</code> <strong class=\"purple\">must</strong> not use <code>Acquire</code>, <code>AcquireRelease</code>, or <code>SequentiallyConsistent</code> memory semantics",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpAtomicLoad-04731",
          "text": "<code>OpAtomicLoad</code> <strong class=\"purple\">must</strong> not use <code>Release</code>, <code>AcquireRelease</code>, or <code>SequentiallyConsistent</code> memory semantics",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpMemoryBarrier-04732",
          "text": "<code>OpMemoryBarrier</code> <strong class=\"purple\">must</strong> use one of <code>Acquire</code>, <code>Release</code>, <code>AcquireRelease</code>, or <code>SequentiallyConsistent</code> memory semantics",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpMemoryBarrier-04733",
          "text": "<code>OpMemoryBarrier</code> <strong class=\"purple\">must</strong> include at least one <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpControlBarrier-04650",
          "text": "If the semantics for <code>OpControlBarrier</code> includes one of <code>Acquire</code>, <code>Release</code>, <code>AcquireRelease</code>, or <code>SequentiallyConsistent</code> memory semantics, then it <strong class=\"purple\">must</strong> include at least one <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpVariable-04651",
          "text": "Any <code>OpVariable</code> with an <code>Initializer</code> operand <strong class=\"purple\">must</strong> have <code>Output</code>, <code>Private</code>, <code>Function</code>, or <code>Workgroup</code> as its <code>Storage</code> <code>Class</code> operand",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpVariable-04734",
          "text": "Any <code>OpVariable</code> with an <code>Initializer</code> operand and <code>Workgroup</code> as its <code>Storage</code> <code>Class</code> operand <strong class=\"purple\">must</strong> use <code>OpConstantNull</code> as the initializer",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpReadClockKHR-04652",
          "text": "<code>Scope</code> for <code>OpReadClockKHR</code> <strong class=\"purple\">must</strong> be limited to <code>Subgroup</code> or <code>Device</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OriginLowerLeft-04653",
          "text": "The <code>OriginLowerLeft</code> <code>Execution</code> <code>Mode</code> <strong class=\"purple\">must</strong> not be used; fragment entry points <strong class=\"purple\">must</strong> declare <code>OriginUpperLeft</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-PixelCenterInteger-04654",
          "text": "The <code>PixelCenterInteger</code> <code>Execution</code> <code>Mode</code> <strong class=\"purple\">must</strong> not be used (pixels are always centered at half-integer coordinates)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-UniformConstant-04655",
          "text": "Any variable in the <code>UniformConstant</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> be typed as either <code>OpTypeImage</code>, <code>OpTypeSampler</code>, <code>OpTypeSampledImage</code>, <code>OpTypeAccelerationStructureKHR</code>, or an array of one of these types",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Uniform-06807",
          "text": "Any variable in the <code>Uniform</code> or <code>StorageBuffer</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> be typed as <code>OpTypeStruct</code> or an array of this type",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-PushConstant-06808",
          "text": "Any variable in the <code>PushConstant</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> be typed as <code>OpTypeStruct</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpTypeImage-04656",
          "text": "<code>OpTypeImage</code> <strong class=\"purple\">must</strong> declare a scalar 32-bit float, 64-bit integer, or 32-bit integer type for the &#8220;Sampled Type&#8221; (<code>RelaxedPrecision</code> <strong class=\"purple\">can</strong> be applied to a sampling instruction and to the variable holding the result of a sampling instruction)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpTypeImage-04657",
          "text": "<code>OpTypeImage</code> <strong class=\"purple\">must</strong> have a &#8220;Sampled&#8221; operand of 1 (sampled image) or 2 (storage image)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpTypeSampledImage-06671",
          "text": "<code>OpTypeSampledImage</code> <strong class=\"purple\">must</strong> have a <code>OpTypeImage</code> with a &#8220;Sampled&#8221; operand of 1 (sampled image)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Image-04965",
          "text": "The <a href=\"#spirv-type\">SPIR-V Type</a> of the <code>Image</code> <code>Format</code> operand of an <code>OpTypeImage</code> <strong class=\"purple\">must</strong> match the <code>Sampled</code> <code>Type</code>, as defined in <a href=\"#spirvenv-format-type-matching\">Image Format and Type Matching</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpImageTexelPointer-04658",
          "text": "If an <code>OpImageTexelPointer</code> is used in an atomic operation, the image type of the <code>image</code> parameter to <code>OpImageTexelPointer</code> <strong class=\"purple\">must</strong> have an image format of <code>R64i</code>, <code>R64ui</code>, <code>R32f</code>, <code>R32i</code>, or <code>R32ui</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpImageQuerySizeLod-04659",
          "text": "<code>OpImageQuerySizeLod</code>, <code>OpImageQueryLod</code>, and <code>OpImageQueryLevels</code> <strong class=\"purple\">must</strong> only consume an &#8220;Image&#8221; operand whose type has its &#8220;Sampled&#8221; operand set to 1",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpTypeImage-06214",
          "text": "An <code>OpTypeImage</code> with a &#8220;Dim&#8221; operand of <code>SubpassData</code> <strong class=\"purple\">must</strong> have an &#8220;Arrayed&#8221; operand of 0 (non-arrayed) and a &#8220;Sampled&#8221; operand of 2 (storage image)",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-SubpassData-04660",
          "text": "The <span class=\"eq\">(u,v)</span> coordinates used for a <code>SubpassData</code> <strong class=\"purple\">must</strong> be the &lt;id&gt; of a constant vector <span class=\"eq\">(0,0)</span>, or if a layer coordinate is used, <strong class=\"purple\">must</strong> be a vector that was formed with constant 0 for the <span class=\"eq\">u</span> and <span class=\"eq\">v</span> components",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpTypeImage-06924",
          "text": "Objects of types <code>OpTypeImage</code>, <code>OpTypeSampler</code>, <code>OpTypeSampledImage</code>, <code>OpTypeAccelerationStructureKHR</code>, and arrays of these types <strong class=\"purple\">must</strong> not be stored to or modified",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Uniform-06925",
          "text": "Any variable in the <code>Uniform</code> <code>Storage</code> <code>Class</code> decorated as <code>Block</code> <strong class=\"purple\">must</strong> not be stored to or modified",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Offset-04663",
          "text": "Image operand <code>Offset</code> <strong class=\"purple\">must</strong> only be used with <code>OpImage*Gather</code> instructions",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Offset-04865",
          "text": "Any image instruction which uses an <code>Offset</code>, <code>ConstOffset</code>, or <code>ConstOffsets</code> image operand, must only consume a &#8220;Sampled Image&#8221; operand whose type has its &#8220;Sampled&#8221; operand set to 1",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpImageGather-04664",
          "text": "The &#8220;Component&#8221; operand of <code>OpImageGather</code>, and <code>OpImageSparseGather</code> <strong class=\"purple\">must</strong> be the &lt;id&gt; of a constant instruction",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpImage-04777",
          "text": "<code>OpImage*Dref*</code> instructions <strong class=\"purple\">must</strong> not consume an image whose <code>Dim</code> is 3D",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04667",
          "text": "Structure types <strong class=\"purple\">must</strong> not contain opaque types",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-BuiltIn-04668",
          "text": "Any <code>BuiltIn</code> decoration not listed in <a href=\"#interfaces-builtin-variables\">Built-In Variables</a> <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Location-06672",
          "text": "The <code>Location</code> or <code>Component</code> decorations <strong class=\"purple\">must</strong> only be used with the <code>Input</code>, <code>Output</code>, <code>RayPayloadKHR</code>, <code>IncomingRayPayloadKHR</code>, <code>HitAttributeKHR</code>, <code>HitObjectAttributeNV</code>, <code>CallableDataKHR</code>, <code>IncomingCallableDataKHR</code>, or <code>ShaderRecordBufferKHR</code> storage classes",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Location-04915",
          "text": "The <code>Location</code> or <code>Component</code> decorations <strong class=\"purple\">must</strong> not be used with <code>BuiltIn</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Location-04916",
          "text": "The <code>Location</code> decorations <strong class=\"purple\">must</strong> be used on <a href=\"#interfaces-iointerfaces-user\">user-defined variables</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Location-04917",
          "text": "If a <a href=\"#interfaces-iointerfaces-user\">user-defined variable</a> is not a pointer to a <code>Block</code> decorated <code>OpTypeStruct</code>, then the <code>OpVariable</code> <strong class=\"purple\">must</strong> have a <code>Location</code> decoration",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Location-04918",
          "text": "If a <a href=\"#interfaces-iointerfaces-user\">user-defined variable</a> has a <code>Location</code> decoration, and the variable is a pointer to a <code>OpTypeStruct</code>, then the members of that structure <strong class=\"purple\">must</strong> not have <code>Location</code> decorations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Location-04919",
          "text": "If a <a href=\"#interfaces-iointerfaces-user\">user-defined variable</a> does not have a <code>Location</code> decoration, and the variable is a pointer to a <code>Block</code> decorated <code>OpTypeStruct</code>, then each member of the struct <strong class=\"purple\">must</strong> have a <code>Location</code> decoration",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Component-04920",
          "text": "The <code>Component</code> decoration value <strong class=\"purple\">must</strong> not be greater than 3",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Component-04921",
          "text": "If the <code>Component</code> decoration is used on an <code>OpVariable</code> that has a <code>OpTypeVector</code> type with a <code>Component</code> <code>Type</code> with a <code>Width</code> that is less than or equal to 32, the sum of its <code>Component</code> <code>Count</code> and the <code>Component</code> decoration value <strong class=\"purple\">must</strong> be less than or equal to 4",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Component-04922",
          "text": "If the <code>Component</code> decoration is used on an <code>OpVariable</code> that has a <code>OpTypeVector</code> type with a <code>Component</code> <code>Type</code> with a <code>Width</code> that is equal to 64, the sum of two times its <code>Component</code> <code>Count</code> and the <code>Component</code> decoration value <strong class=\"purple\">must</strong> be less than or equal to 4",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Component-04923",
          "text": "The <code>Component</code> decorations value <strong class=\"purple\">must</strong> not be 1 or 3 for scalar or two-component 64-bit data types",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Component-04924",
          "text": "The <code>Component</code> decorations <strong class=\"purple\">must</strong> not be used with any type that is not a scalar or vector, or an array of such a type",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Component-07703",
          "text": "The <code>Component</code> decorations <strong class=\"purple\">must</strong> not be used for a 64-bit vector type with more than two components",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-GLSLShared-04669",
          "text": "The <code>GLSLShared</code> and <code>GLSLPacked</code> decorations <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Flat-04670",
          "text": "The <code>Flat</code>, <code>NoPerspective</code>, <code>Sample</code>, and <code>Centroid</code> decorations <strong class=\"purple\">must</strong> only be used on variables with the <code>Output</code> or <code>Input</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Flat-06201",
          "text": "The <code>Flat</code>, <code>NoPerspective</code>, <code>Sample</code>, and <code>Centroid</code> decorations <strong class=\"purple\">must</strong> not be used on variables with the <code>Output</code> storage class in a fragment shader",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Flat-06202",
          "text": "The <code>Flat</code>, <code>NoPerspective</code>, <code>Sample</code>, and <code>Centroid</code> decorations <strong class=\"purple\">must</strong> not be used on variables with the <code>Input</code> storage class in a vertex shader",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-PerVertexKHR-06777",
          "text": "The <code>PerVertexKHR</code> decoration <strong class=\"purple\">must</strong> only be used on variables with the <code>Input</code> <code>Storage</code> <code>Class</code> in a fragment shader",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Flat-04744",
          "text": "Any variable with integer or double-precision floating-point type and with <code>Input</code> <code>Storage</code> <code>Class</code> in a fragment shader, <strong class=\"purple\">must</strong> be decorated <code>Flat</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-ViewportRelativeNV-04672",
          "text": "The <code>ViewportRelativeNV</code> decoration <strong class=\"purple\">must</strong> only be used on a variable decorated with <code>Layer</code> in the vertex, tessellation evaluation, or geometry shader stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-ViewportRelativeNV-04673",
          "text": "The <code>ViewportRelativeNV</code> decoration <strong class=\"purple\">must</strong> not be used unless a variable decorated with one of <code>ViewportIndex</code> or <code>ViewportMaskNV</code> is also statically used by the same <code>OpEntryPoint</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-ViewportMaskNV-04674",
          "text": "The <code>ViewportMaskNV</code> and <code>ViewportIndex</code> decorations <strong class=\"purple\">must</strong> not both be statically used by one or more <code>OpEntryPoint</code>&#8217;s that form the <a href=\"#pipelines-graphics-subsets-pre-rasterization\">pre-rasterization shader stages</a> of a graphics pipeline",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-FPRoundingMode-04675",
          "text": "Rounding modes other than round-to-nearest-even and round-towards-zero <strong class=\"purple\">must</strong> not be used for the <code>FPRoundingMode</code> decoration",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Invariant-04677",
          "text": "Variables decorated with <code>Invariant</code> and variables with structure types that have any members decorated with <code>Invariant</code> <strong class=\"purple\">must</strong> be in the <code>Output</code> or <code>Input</code> <code>Storage</code> <code>Class</code>, <code>Invariant</code> used on an <code>Input</code> <code>Storage</code> <code>Class</code> variable or structure member has no effect",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-VulkanMemoryModel-04678",
          "text": "<a id=\"builtin-volatile-semantics\"></a> If the <code>VulkanMemoryModel</code> capability is not declared, the <code>Volatile</code> decoration <strong class=\"purple\">must</strong> be used on any variable declaration that includes one of the <code>SMIDNV</code>, <code>WarpIDNV</code>, <code>SubgroupSize</code>, <code>SubgroupLocalInvocationId</code>, <code>SubgroupEqMask</code>, <code>SubgroupGeMask</code>, <code>SubgroupGtMask</code>, <code>SubgroupLeMask</code>, or <code>SubgroupLtMask</code> <code>BuiltIn</code> decorations when used in the ray generation, closest hit, miss, intersection, or callable shaders, or with the <code>RayTmaxKHR</code> <code>Builtin</code> decoration when used in an intersection shader",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-VulkanMemoryModel-04679",
          "text": "If the <code>VulkanMemoryModel</code> capability is declared, the <code>OpLoad</code> instruction <strong class=\"purple\">must</strong> use the <code>Volatile</code> memory semantics when it accesses into any variable that includes one of the <code>SMIDNV</code>, <code>WarpIDNV</code>, <code>SubgroupSize</code>, <code>SubgroupLocalInvocationId</code>, <code>SubgroupEqMask</code>, <code>SubgroupGeMask</code>, <code>SubgroupGtMask</code>, <code>SubgroupLeMask</code>, or <code>SubgroupLtMask</code> <code>BuiltIn</code> decorations when used in the ray generation, closest hit, miss, intersection, or callable shaders, or with the <code>RayTmaxKHR</code> <code>Builtin</code> decoration when used in an intersection shader",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpTypeRuntimeArray-04680",
          "text": "<code>OpTypeRuntimeArray</code> <strong class=\"purple\">must</strong> only be used for:<div class=\"ulist\">\n<ul>\n<li>\n<p>the last member of a <code>Block</code>-decorated <code>OpTypeStruct</code> in\n<code>StorageBuffer</code> or <code>PhysicalStorageBuffer</code> storage <code>Storage</code> <code>Class</code></p>\n</li>\n<li>\n<p><code>BufferBlock</code>-decorated <code>OpTypeStruct</code> in the <code>Uniform</code>\nstorage <code>Storage</code> <code>Class</code></p>\n</li>\n<li>\n<p>the outermost dimension of an arrayed variable in the\n<code>StorageBuffer</code>, <code>Uniform</code>, or <code>UniformConstant</code> storage\n<code>Storage</code> <code>Class</code></p>\n</li>\n<li>\n<p>variables in the <code>NodePayloadAMDX</code> storage <code>Storage</code> <code>Class</code> when the\n<code>CoalescingAMDX</code> <code>Execution</code> <code>Mode</code> is specified</p>\n</li>\n</ul>\n</div>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Function-04681",
          "text": "A type <em>T</em> that is an array sized with a specialization constant <strong class=\"purple\">must</strong> neither be, nor be contained in, the type <em>T2</em> of a variable <em>V</em>, unless either: a) <em>T</em> is equal to <em>T2</em>, b) <em>V</em> is declared in the <code>Function</code>, or <code>Private</code> <code>Storage</code> <code>Class</code>, c) <em>V</em> is a non-Block variable in the <code>Workgroup</code> <code>Storage</code> <code>Class</code>, or d) <em>V</em> is an interface variable with an additional level of arrayness, <a href=\"#interfaces-iointerfaces-matching\">as described in interface matching</a>, and <em>T</em> is the member type of the array type <em>T2</em>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpControlBarrier-04682",
          "text": "If <code>OpControlBarrier</code> is used in ray generation, intersection, any-hit, closest hit, miss, fragment, vertex, tessellation evaluation, or geometry shaders, the execution Scope <strong class=\"purple\">must</strong> be <code>Subgroup</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-LocalSize-06426",
          "text": "For each compute shader entry point, either a <code>LocalSize</code> or <code>LocalSizeId</code> <code>Execution</code> <code>Mode</code>, or an object decorated with the <code>WorkgroupSize</code> decoration <strong class=\"purple\">must</strong> be specified",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-DerivativeGroupQuadsNV-04684",
          "text": "For compute shaders using the <code>DerivativeGroupQuadsNV</code> execution mode, the first two dimensions of the local workgroup size <strong class=\"purple\">must</strong> be a multiple of two",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-DerivativeGroupLinearNV-04778",
          "text": "For compute shaders using the <code>DerivativeGroupLinearNV</code> execution mode, the product of the dimensions of the local workgroup size <strong class=\"purple\">must</strong> be a multiple of four",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpGroupNonUniformBallotBitCount-04685",
          "text": "If <code>OpGroupNonUniformBallotBitCount</code> is used, the group operation <strong class=\"purple\">must</strong> be limited to <code>Reduce</code>, <code>InclusiveScan</code>, or <code>ExclusiveScan</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04686",
          "text": "The <em>Pointer</em> operand of all atomic instructions <strong class=\"purple\">must</strong> have a <code>Storage</code> <code>Class</code> limited to <code>Uniform</code>, <code>Workgroup</code>, <code>Image</code>, <code>StorageBuffer</code>, <code>PhysicalStorageBuffer</code>, or <code>TaskPayloadWorkgroupEXT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Offset-04687",
          "text": "Output variables or block members decorated with <code>Offset</code> that have a 64-bit type, or a composite type containing a 64-bit type, <strong class=\"purple\">must</strong> specify an <code>Offset</code> value aligned to a 8 byte boundary",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Offset-04689",
          "text": "The size of any output block containing any member decorated with <code>Offset</code> that is a 64-bit type <strong class=\"purple\">must</strong> be a multiple of 8",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Offset-04690",
          "text": "The first member of an output block specifying a <code>Offset</code> decoration <strong class=\"purple\">must</strong> specify a <code>Offset</code> value that is aligned to an 8 byte boundary if that block contains any member decorated with <code>Offset</code> and is a 64-bit type",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Offset-04691",
          "text": "Output variables or block members decorated with <code>Offset</code> that have a 32-bit type, or a composite type contains a 32-bit type, <strong class=\"purple\">must</strong> specify an <code>Offset</code> value aligned to a 4 byte boundary",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Offset-04692",
          "text": "Output variables, blocks or block members decorated with <code>Offset</code> <strong class=\"purple\">must</strong> only contain base types that have components that are either 32-bit or 64-bit in size",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Offset-04716",
          "text": "Only variables or block members in the output interface decorated with <code>Offset</code> <strong class=\"purple\">can</strong> be captured for transform feedback, and those variables or block members <strong class=\"purple\">must</strong> also be decorated with <code>XfbBuffer</code> and <code>XfbStride</code>, or inherit <code>XfbBuffer</code> and <code>XfbStride</code> decorations from a block containing them",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-XfbBuffer-04693",
          "text": "All variables or block members in the output interface of the entry point being compiled decorated with a specific <code>XfbBuffer</code> value <strong class=\"purple\">must</strong> all be decorated with identical <code>XfbStride</code> values",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Stream-04694",
          "text": "If any variables or block members in the output interface of the entry point being compiled are decorated with <code>Stream</code>, then all variables belonging to the same <code>XfbBuffer</code> <strong class=\"purple\">must</strong> specify the same <code>Stream</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-XfbBuffer-04696",
          "text": "For any two variables or block members in the output interface of the entry point being compiled with the same <code>XfbBuffer</code> value, the ranges determined by the <code>Offset</code> decoration and the size of the type <strong class=\"purple\">must</strong> not overlap",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-XfbBuffer-04697",
          "text": "All block members in the output interface of the entry point being compiled that are in the same block and have a declared or inherited <code>XfbBuffer</code> decoration <strong class=\"purple\">must</strong> specify the same <code>XfbBuffer</code> value",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-RayPayloadKHR-04698",
          "text": "<code>RayPayloadKHR</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> only be used in ray generation, closest hit or miss shaders",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-IncomingRayPayloadKHR-04699",
          "text": "<code>IncomingRayPayloadKHR</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> only be used in closest hit, any-hit, or miss shaders",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-IncomingRayPayloadKHR-04700",
          "text": "There <strong class=\"purple\">must</strong> be at most one variable with the <code>IncomingRayPayloadKHR</code> <code>Storage</code> <code>Class</code> in the input interface of an entry point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-HitAttributeKHR-04701",
          "text": "<code>HitAttributeKHR</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> only be used in intersection, any-hit, or closest hit shaders",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-HitAttributeKHR-04702",
          "text": "There <strong class=\"purple\">must</strong> be at most one variable with the <code>HitAttributeKHR</code> <code>Storage</code> <code>Class</code> in the input interface of an entry point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-HitAttributeKHR-04703",
          "text": "A variable with <code>HitAttributeKHR</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> only be written to in an intersection shader",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-CallableDataKHR-04704",
          "text": "<code>CallableDataKHR</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> only be used in ray generation, closest hit, miss, and callable shaders",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-IncomingCallableDataKHR-04705",
          "text": "<code>IncomingCallableDataKHR</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> only be used in callable shaders",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-IncomingCallableDataKHR-04706",
          "text": "There <strong class=\"purple\">must</strong> be at most one variable with the <code>IncomingCallableDataKHR</code> <code>Storage</code> <code>Class</code> in the input interface of an entry point",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-ShaderRecordBufferKHR-07119",
          "text": "<code>ShaderRecordBufferKHR</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> only be used in ray generation, intersection, any-hit, closest hit, callable, or miss shaders",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Base-07650",
          "text": "The <code>Base</code> operand of <code>OpPtrAccessChain</code> <strong class=\"purple\">must</strong> have a storage class of <code>Workgroup</code>, <code>StorageBuffer</code>, or <code>PhysicalStorageBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Base-07651",
          "text": "If the <code>Base</code> operand of <code>OpPtrAccessChain</code> has a <code>Workgroup</code> <code>Storage</code> <code>Class</code>, then the <code>VariablePointers</code> capability <strong class=\"purple\">must</strong> be declared",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Base-07652",
          "text": "If the <code>Base</code> operand of <code>OpPtrAccessChain</code> has a <code>StorageBuffer</code> <code>Storage</code> <code>Class</code>, then the <code>VariablePointers</code> or <code>VariablePointersStorageBuffer</code> capability <strong class=\"purple\">must</strong> be declared",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-PhysicalStorageBuffer64-04708",
          "text": "If the <code>PhysicalStorageBuffer64</code> addressing model is enabled, all instructions that support memory access operands and that use a physical pointer <strong class=\"purple\">must</strong> include the <code>Aligned</code> operand",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-PhysicalStorageBuffer64-04709",
          "text": "If the <code>PhysicalStorageBuffer64</code> addressing model is enabled, any access chain instruction that accesses into a <code>RowMajor</code> matrix <strong class=\"purple\">must</strong> only be used as the <code>Pointer</code> operand to <code>OpLoad</code> or <code>OpStore</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-PhysicalStorageBuffer64-04710",
          "text": "If the <code>PhysicalStorageBuffer64</code> addressing model is enabled, <code>OpConvertUToPtr</code> and <code>OpConvertPtrToU</code> <strong class=\"purple\">must</strong> use an integer type whose <code>Width</code> is 64",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpTypeForwardPointer-04711",
          "text": "<code>OpTypeForwardPointer</code> <strong class=\"purple\">must</strong> have a <code>Storage</code> <code>Class</code> of <code>PhysicalStorageBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-04745",
          "text": "All block members in a variable with a <code>Storage</code> <code>Class</code> of <code>PushConstant</code> declared as an array <strong class=\"purple\">must</strong> only be accessed by dynamically uniform indices",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpVariable-06673",
          "text": "There <strong class=\"purple\">must</strong> not be more than one <code>OpVariable</code> in the <code>PushConstant</code> <code>Storage</code> <code>Class</code> listed in the <code>Interface</code> for each <code>OpEntryPoint</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpEntryPoint-06674",
          "text": "Each <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> not statically use more than one <code>OpVariable</code> in the <code>PushConstant</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpEntryPoint-08721",
          "text": "Each <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> not have more than one <code>Input</code> variable assigned the same <code>Component</code> word inside a <code>Location</code> slot, either explicitly or implicitly",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-OpEntryPoint-08722",
          "text": "Each <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> not have more than one <code>Output</code> variable assigned the same <code>Component</code> word inside a <code>Location</code> slot, either explicitly or implicitly",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Result-04780",
          "text": "The <code>Result</code> <code>Type</code> operand of any <code>OpImageRead</code> or <code>OpImageSparseRead</code> instruction <strong class=\"purple\">must</strong> be a vector of four components",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Base-04781",
          "text": "The <code>Base</code> operand of any <code>OpBitCount</code>, <code>OpBitReverse</code>, <code>OpBitFieldInsert</code>, <code>OpBitFieldSExtract</code>, or <code>OpBitFieldUExtract</code> instruction <strong class=\"purple\">must</strong> be a 32-bit integer scalar or a vector of 32-bit integers",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-PushConstant-06675",
          "text": "Any variable in the <code>PushConstant</code> or <code>StorageBuffer</code> storage class <strong class=\"purple\">must</strong> be decorated as <code>Block</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Uniform-06676",
          "text": "Any variable in the <code>Uniform</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> be decorated as <code>Block</code> or <code>BufferBlock</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-UniformConstant-06677",
          "text": "Any variable in the <code>UniformConstant</code>, <code>StorageBuffer</code>, or <code>Uniform</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> be decorated with <code>DescriptorSet</code> and <code>Binding</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-InputAttachmentIndex-06678",
          "text": "Variables decorated with <code>InputAttachmentIndex</code> <strong class=\"purple\">must</strong> be in the <code>UniformConstant</code> <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-DescriptorSet-06491",
          "text": "If a variable is decorated by <code>DescriptorSet</code> or <code>Binding</code>, the <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> correspond to an entry in <a href=\"#interfaces-resources-storage-class-correspondence\">Shader Resource and Storage Class Correspondence</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Input-06778",
          "text": "Variables with a <code>Storage</code> <code>Class</code> of <code>Input</code> in a fragment shader stage that are decorated with <code>PerVertexKHR</code> <strong class=\"purple\">must</strong> be declared as arrays",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-MeshEXT-07102",
          "text": "The module <strong class=\"purple\">must</strong> not contain both an entry point that uses the <code>TaskEXT</code> or <code>MeshEXT</code> <code>Execution</code> <code>Model</code> and an entry point that uses the <code>TaskNV</code> or <code>MeshNV</code> <code>Execution</code> <code>Model</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-MeshEXT-07106",
          "text": "In mesh shaders using the <code>MeshEXT</code> <code>Execution</code> <code>Model</code> <code>OpSetMeshOutputsEXT</code> <strong class=\"purple\">must</strong> be called before any outputs are written",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-MeshEXT-07107",
          "text": "In mesh shaders using the <code>MeshEXT</code> <code>Execution</code> <code>Model</code> all variables declared as output <strong class=\"purple\">must</strong> not be read from",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-MeshEXT-07108",
          "text": "In mesh shaders using the <code>MeshEXT</code> <code>Execution</code> <code>Model</code> for <code>OpSetMeshOutputsEXT</code> instructions, the &#8220;Vertex Count&#8221; and &#8220;Primitive Count&#8221; operands <strong class=\"purple\">must</strong> not depend on <code>ViewIndex</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-MeshEXT-07109",
          "text": "In mesh shaders using the <code>MeshEXT</code> <code>Execution</code> <code>Model</code> variables decorated with <code>PrimitivePointIndicesEXT</code>, <code>PrimitiveLineIndicesEXT</code>, or <code>PrimitiveTriangleIndicesEXT</code> declared as an array <strong class=\"purple\">must</strong> not be accessed by indices that depend on <code>ViewIndex</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-MeshEXT-07110",
          "text": "In mesh shaders using the <code>MeshEXT</code> <code>Execution</code> <code>Model</code> any values stored in variables decorated with <code>PrimitivePointIndicesEXT</code>, <code>PrimitiveLineIndicesEXT</code>, or <code>PrimitiveTriangleIndicesEXT</code> <strong class=\"purple\">must</strong> not depend on <code>ViewIndex</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-MeshEXT-07111",
          "text": "In mesh shaders using the <code>MeshEXT</code> <code>Execution</code> <code>Model</code> variables in workgroup or private <code>Storage</code> <code>Class</code> declared as or containing a composite type <strong class=\"purple\">must</strong> not be accessed by indices that depend on <code>ViewIndex</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-MeshEXT-07330",
          "text": "In mesh shaders using the <code>MeshEXT</code> <code>Execution</code> <code>Model</code> the <code>OutputVertices</code> <code>Execution</code> <code>Mode</code> <strong class=\"purple\">must</strong> be greater than 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-MeshEXT-07331",
          "text": "In mesh shaders using the <code>MeshEXT</code> <code>Execution</code> <code>Model</code> the <code>OutputPrimitivesEXT</code> <code>Execution</code> <code>Mode</code> <strong class=\"purple\">must</strong> be greater than 0",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Input-07290",
          "text": "Variables with a <code>Storage</code> <code>Class</code> of <code>Input</code> or <code>Output</code> and a type of <code>OpTypeBool</code> <strong class=\"purple\">must</strong> be decorated with the <code>BuiltIn</code> decoration",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-TileImageEXT-08723",
          "text": "The tile image variable declarations <strong class=\"purple\">must</strong> obey the constraints on the <code>TileImageEXT</code> <code>Storage</code> <code>Class</code> and the <code>Location</code> decoration described in <a href=\"#interfaces-fragmenttileimage\">Fragment Tile Image Interface</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-None-08724",
          "text": "The <code>TileImageEXT</code> <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> only be used for declaring tile image variables.",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-StandaloneSpirv-Pointer-08973",
          "text": "The <code>Storage</code> <code>Class</code> of the <code>Pointer</code> operand to <code>OpCooperativeMatrixLoadKHR</code> or <code>OpCooperativeMatrixStoreKHR</code> <strong class=\"purple\">must</strong> be limited to <code>Workgroup</code>, <code>StorageBuffer</code>, or <code>PhysicalStorageBuffer</code>.",
          "page": "vkspec"
        }
      ]
    },
    "RuntimeSpirv": {
      "core": [
        {
          "vuid": "VUID-RuntimeSpirv-vulkanMemoryModel-06265",
          "text": "If <a href=\"#features-vulkanMemoryModel\"><code>vulkanMemoryModel</code></a> is enabled and <a href=\"#features-vulkanMemoryModelDeviceScope\"><code>vulkanMemoryModelDeviceScope</code></a> is not enabled, <code>Device</code> memory scope <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-vulkanMemoryModel-06266",
          "text": "If <a href=\"#features-vulkanMemoryModel\"><code>vulkanMemoryModel</code></a> is not enabled, <code>QueueFamily</code> memory scope <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderSubgroupClock-06267",
          "text": "If <a href=\"#features-shaderSubgroupClock\"><code>shaderSubgroupClock</code></a> is not enabled, the <code>Subgroup</code> scope <strong class=\"purple\">must</strong> not be used for <code>OpReadClockKHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderDeviceClock-06268",
          "text": "If <a href=\"#features-shaderDeviceClock\"><code>shaderDeviceClock</code></a> is not enabled, the <code>Device</code> scope <strong class=\"purple\">must</strong> not be used for <code>OpReadClockKHR</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpTypeImage-06269",
          "text": "If <a href=\"#features-shaderStorageImageWriteWithoutFormat\"><code>shaderStorageImageWriteWithoutFormat</code></a> is not enabled, any variable created with a &#8220;Type&#8221; of <code>OpTypeImage</code> that has a &#8220;Sampled&#8221; operand of 2 and an &#8220;Image Format&#8221; operand of <code>Unknown</code> <strong class=\"purple\">must</strong> be decorated with <code>NonWritable</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpTypeImage-06270",
          "text": "If <a href=\"#features-shaderStorageImageReadWithoutFormat\"><code>shaderStorageImageReadWithoutFormat</code></a> is not enabled, any variable created with a &#8220;Type&#8221; of <code>OpTypeImage</code> that has a &#8220;Sampled&#8221; operand of 2 and an &#8220;Image Format&#8221; operand of <code>Unknown</code> <strong class=\"purple\">must</strong> be decorated with <code>NonReadable</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpImageWrite-07112",
          "text": "<code>OpImageWrite</code> to any <code>Image</code> whose <code>Image</code> <code>Format</code> is not <code>Unknown</code> <strong class=\"purple\">must</strong> have the <code>Texel</code> operand contain at least as many components as the corresponding <a href=\"#VkFormat\">VkFormat</a> as given in the <a href=\"#spirvenv-image-formats\">SPIR-V Image Format compatibility table</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-Location-06272",
          "text": "The sum of <code>Location</code> and the number of locations the variable it decorates consumes <strong class=\"purple\">must</strong> be less than or equal to the value for the matching <code>Execution</code> <code>Model</code> defined in <a href=\"#interfaces-iointerfaces-limits\">Shader Input and Output Locations</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-Location-06428",
          "text": "The maximum number of storage buffers, storage images, and output <code>Location</code> decorated color attachments written to in the <code>Fragment</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxFragmentCombinedOutputResources\"><code>maxFragmentCombinedOutputResources</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-NonUniform-06274",
          "text": "If an instruction loads from or stores to a resource (including atomics and image instructions) and the resource descriptor being accessed is not dynamically uniform, then the operand corresponding to that resource (e.g. the pointer or sampled image operand) <strong class=\"purple\">must</strong> be decorated with <code>NonUniform</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-None-06275",
          "text": "<a href=\"#features-subgroup-extended-types\"><code>shaderSubgroupExtendedTypes</code></a> <strong class=\"purple\">must</strong> be enabled for <a href=\"#shaders-group-operations\">group operations</a> to use 8-bit integer, 16-bit integer, 64-bit integer, 16-bit floating-point, and vectors of these types",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-subgroupBroadcastDynamicId-06276",
          "text": "If <a href=\"#features-subgroupBroadcastDynamicId\"><code>subgroupBroadcastDynamicId</code></a> is <code>VK_TRUE</code>, and the shader module version is 1.5 or higher, the &#8220;Index&#8221; for <code>OpGroupNonUniformQuadBroadcast</code> <strong class=\"purple\">must</strong> be dynamically uniform within the derivative group. Otherwise, &#8220;Index&#8221; <strong class=\"purple\">must</strong> be a constant",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-subgroupBroadcastDynamicId-06277",
          "text": "If <a href=\"#features-subgroupBroadcastDynamicId\"><code>subgroupBroadcastDynamicId</code></a> is <code>VK_TRUE</code>, and the shader module version is 1.5 or higher, the &#8220;Id&#8221; for <code>OpGroupNonUniformBroadcast</code> <strong class=\"purple\">must</strong> be dynamically uniform within the subgroup. Otherwise, &#8220;Id&#8221; <strong class=\"purple\">must</strong> be a constant",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-None-06280",
          "text": "<a href=\"#features-shaderBufferFloat32Atomics\"><code>shaderBufferFloat32Atomics</code></a>, or <a href=\"#features-shaderBufferFloat32AtomicAdd\"><code>shaderBufferFloat32AtomicAdd</code></a>, or <a href=\"#features-shaderBufferFloat64Atomics\"><code>shaderBufferFloat64Atomics</code></a>, or <a href=\"#features-shaderBufferFloat64AtomicAdd\"><code>shaderBufferFloat64AtomicAdd</code></a> <strong class=\"purple\">must</strong> be enabled for floating-point atomic operations to be supported on a <em>Pointer</em> with a <code>Storage</code> <code>Class</code> of <code>StorageBuffer</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-None-06281",
          "text": "<a href=\"#features-shaderSharedFloat32Atomics\"><code>shaderSharedFloat32Atomics</code></a>, or <a href=\"#features-shaderSharedFloat32AtomicAdd\"><code>shaderSharedFloat32AtomicAdd</code></a>, or <a href=\"#features-shaderSharedFloat64Atomics\"><code>shaderSharedFloat64Atomics</code></a>, or <a href=\"#features-shaderSharedFloat64AtomicAdd\"><code>shaderSharedFloat64AtomicAdd</code></a> <strong class=\"purple\">must</strong> be enabled for floating-point atomic operations to be supported on a <em>Pointer</em> with a <code>Storage</code> <code>Class</code> of <code>Workgroup</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-None-06282",
          "text": "<a href=\"#features-shaderImageFloat32Atomics\"><code>shaderImageFloat32Atomics</code></a> or <a href=\"#features-shaderImageFloat32AtomicAdd\"><code>shaderImageFloat32AtomicAdd</code></a> <strong class=\"purple\">must</strong> be enabled for 32-bit floating-point atomic operations to be supported on a <em>Pointer</em> with a <code>Storage</code> <code>Class</code> of <code>Image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-None-06283",
          "text": "<a href=\"#features-sparseImageFloat32Atomics\"><code>sparseImageFloat32Atomics</code></a> or <a href=\"#features-sparseImageFloat32AtomicAdd\"><code>sparseImageFloat32AtomicAdd</code></a> <strong class=\"purple\">must</strong> be enabled for 32-bit floating-point atomics to be supported on sparse images",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-None-06288",
          "text": "<a href=\"#features-shaderImageInt64Atomics\"><code>shaderImageInt64Atomics</code></a> <strong class=\"purple\">must</strong> be enabled for 64-bit integer atomic operations to be supported on a <em>Pointer</em> with a <code>Storage</code> <code>Class</code> of <code>Image</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-denormBehaviorIndependence-06289",
          "text": "If <a href=\"#features-denormBehaviorIndependence\"><code>denormBehaviorIndependence</code></a> is <code>VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY</code>, then the entry point <strong class=\"purple\">must</strong> use the same denormals <code>Execution</code> <code>Mode</code> for both 16-bit and 64-bit floating-point types",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-denormBehaviorIndependence-06290",
          "text": "If <a href=\"#features-denormBehaviorIndependence\"><code>denormBehaviorIndependence</code></a> is <code>VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE</code>, then the entry point <strong class=\"purple\">must</strong> use the same denormals <code>Execution</code> <code>Mode</code> for all floating-point types",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-roundingModeIndependence-06291",
          "text": "If <a href=\"#features-roundingModeIndependence\"><code>roundingModeIndependence</code></a> is <code>VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY</code>, then the entry point <strong class=\"purple\">must</strong> use the same rounding <code>Execution</code> <code>Mode</code> for both 16-bit and 64-bit floating-point types",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-roundingModeIndependence-06292",
          "text": "If <a href=\"#features-roundingModeIndependence\"><code>roundingModeIndependence</code></a> is <code>VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE</code>, then the entry point <strong class=\"purple\">must</strong> use the same rounding <code>Execution</code> <code>Mode</code> for all floating-point types",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderSignedZeroInfNanPreserveFloat16-06293",
          "text": "If <a href=\"#limits-shaderSignedZeroInfNanPreserveFloat16\"><code>shaderSignedZeroInfNanPreserveFloat16</code></a> is <code>VK_FALSE</code>, then <code>SignedZeroInfNanPreserve</code> for 16-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderSignedZeroInfNanPreserveFloat32-06294",
          "text": "If <a href=\"#limits-shaderSignedZeroInfNanPreserveFloat32\"><code>shaderSignedZeroInfNanPreserveFloat32</code></a> is <code>VK_FALSE</code>, then <code>SignedZeroInfNanPreserve</code> for 32-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderSignedZeroInfNanPreserveFloat64-06295",
          "text": "If <a href=\"#limits-shaderSignedZeroInfNanPreserveFloat64\"><code>shaderSignedZeroInfNanPreserveFloat64</code></a> is <code>VK_FALSE</code>, then <code>SignedZeroInfNanPreserve</code> for 64-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderDenormPreserveFloat16-06296",
          "text": "If <a href=\"#limits-shaderDenormPreserveFloat16\"><code>shaderDenormPreserveFloat16</code></a> is <code>VK_FALSE</code>, then <code>DenormPreserve</code> for 16-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderDenormPreserveFloat32-06297",
          "text": "If <a href=\"#limits-shaderDenormPreserveFloat32\"><code>shaderDenormPreserveFloat32</code></a> is <code>VK_FALSE</code>, then <code>DenormPreserve</code> for 32-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderDenormPreserveFloat64-06298",
          "text": "If <a href=\"#limits-shaderDenormPreserveFloat64\"><code>shaderDenormPreserveFloat64</code></a> is <code>VK_FALSE</code>, then <code>DenormPreserve</code> for 64-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderDenormFlushToZeroFloat16-06299",
          "text": "If <a href=\"#limits-shaderDenormFlushToZeroFloat16\"><code>shaderDenormFlushToZeroFloat16</code></a> is <code>VK_FALSE</code>, then <code>DenormFlushToZero</code> for 16-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderDenormFlushToZeroFloat32-06300",
          "text": "If <a href=\"#limits-shaderDenormFlushToZeroFloat32\"><code>shaderDenormFlushToZeroFloat32</code></a> is <code>VK_FALSE</code>, then <code>DenormFlushToZero</code> for 32-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderDenormFlushToZeroFloat64-06301",
          "text": "If <a href=\"#limits-shaderDenormFlushToZeroFloat64\"><code>shaderDenormFlushToZeroFloat64</code></a> is <code>VK_FALSE</code>, then <code>DenormFlushToZero</code> for 64-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderRoundingModeRTEFloat16-06302",
          "text": "If <a href=\"#limits-shaderRoundingModeRTEFloat16\"><code>shaderRoundingModeRTEFloat16</code></a> is <code>VK_FALSE</code>, then <code>RoundingModeRTE</code> for 16-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderRoundingModeRTEFloat32-06303",
          "text": "If <a href=\"#limits-shaderRoundingModeRTEFloat32\"><code>shaderRoundingModeRTEFloat32</code></a> is <code>VK_FALSE</code>, then <code>RoundingModeRTE</code> for 32-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderRoundingModeRTEFloat64-06304",
          "text": "If <a href=\"#limits-shaderRoundingModeRTEFloat64\"><code>shaderRoundingModeRTEFloat64</code></a> is <code>VK_FALSE</code>, then <code>RoundingModeRTE</code> for 64-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderRoundingModeRTZFloat16-06305",
          "text": "If <a href=\"#limits-shaderRoundingModeRTZFloat16\"><code>shaderRoundingModeRTZFloat16</code></a> is <code>VK_FALSE</code>, then <code>RoundingModeRTZ</code> for 16-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderRoundingModeRTZFloat32-06306",
          "text": "If <a href=\"#limits-shaderRoundingModeRTZFloat32\"><code>shaderRoundingModeRTZFloat32</code></a> is <code>VK_FALSE</code>, then <code>RoundingModeRTZ</code> for 32-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-shaderRoundingModeRTZFloat64-06307",
          "text": "If <a href=\"#limits-shaderRoundingModeRTZFloat64\"><code>shaderRoundingModeRTZFloat64</code></a> is <code>VK_FALSE</code>, then <code>RoundingModeRTZ</code> for 64-bit floating-point type <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-PhysicalStorageBuffer64-06314",
          "text": "If the <code>PhysicalStorageBuffer64</code> addressing model is enabled any load or store through a physical pointer type <strong class=\"purple\">must</strong> be aligned to a multiple of the size of the largest scalar type in the pointed-to type",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-PhysicalStorageBuffer64-06315",
          "text": "If the <code>PhysicalStorageBuffer64</code> addressing model is enabled the pointer value of a memory access instruction <strong class=\"purple\">must</strong> be at least as aligned as specified by the <code>Aligned</code> memory access operand",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-DescriptorSet-06323",
          "text": "<code>DescriptorSet</code> and <code>Binding</code> decorations <strong class=\"purple\">must</strong> obey the constraints on <code>Storage</code> <code>Class</code>, type, and descriptor type described in <a href=\"#interfaces-resources-setandbinding\">DescriptorSet and Binding Assignment</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-None-06335",
          "text": "<a href=\"#features-shaderBufferFloat32Atomics\"><code>shaderBufferFloat32Atomics</code></a>, or <a href=\"#features-shaderBufferFloat32AtomicAdd\"><code>shaderBufferFloat32AtomicAdd</code></a>, or <a href=\"#features-shaderSharedFloat32Atomics\"><code>shaderSharedFloat32Atomics</code></a>, or <a href=\"#features-shaderSharedFloat32AtomicAdd\"><code>shaderSharedFloat32AtomicAdd</code></a>, or <a href=\"#features-shaderImageFloat32Atomics\"><code>shaderImageFloat32Atomics</code></a>, or <a href=\"#features-shaderImageFloat32AtomicAdd\"><code>shaderImageFloat32AtomicAdd</code></a> <strong class=\"purple\">must</strong> be enabled for 32-bit floating point atomic operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-None-06336",
          "text": "<a href=\"#features-shaderBufferFloat64Atomics\"><code>shaderBufferFloat64Atomics</code></a>, or <a href=\"#features-shaderBufferFloat64AtomicAdd\"><code>shaderBufferFloat64AtomicAdd</code></a>, or <a href=\"#features-shaderSharedFloat64Atomics\"><code>shaderSharedFloat64Atomics</code></a>, or <a href=\"#features-shaderSharedFloat64AtomicAdd\"><code>shaderSharedFloat64AtomicAdd</code></a> <strong class=\"purple\">must</strong> be enabled for 64-bit floating point atomic operations",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-NonWritable-06340",
          "text": "If <a href=\"#features-fragmentStoresAndAtomics\"><code>fragmentStoresAndAtomics</code></a> is not enabled, then all storage image, storage texel buffer, and storage buffer variables in the fragment stage <strong class=\"purple\">must</strong> be decorated with the <code>NonWritable</code> decoration",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-NonWritable-06341",
          "text": "If <a href=\"#features-vertexPipelineStoresAndAtomics\"><code>vertexPipelineStoresAndAtomics</code></a> is not enabled, then all storage image, storage texel buffer, and storage buffer variables in the vertex, tessellation, and geometry stages <strong class=\"purple\">must</strong> be decorated with the <code>NonWritable</code> decoration",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpAtomic-05091",
          "text": "If <a href=\"#features-shaderAtomicInstructions\">shaderAtomicInstructions</a> is not enabled, the SPIR-V Atomic Instructions listed in 3.37.18 (<code>OpAtomic*</code>) <strong class=\"purple\">must</strong> not be used <a href=\"#SCID-1\">[SCID-1]</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-None-06342",
          "text": "If <a href=\"#limits-subgroupQuadOperationsInAllStages\"><code>subgroupQuadOperationsInAllStages</code></a> is <code>VK_FALSE</code>, then <a href=\"#features-subgroup-quad\">quad subgroup operations</a> <strong class=\"purple\">must</strong> not be used except for in fragment and compute stages",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-None-06343",
          "text": "<a href=\"#shaders-group-operations\">Group operations</a> with <a href=\"#shaders-scope-subgroup\">subgroup scope</a> <strong class=\"purple\">must</strong> not be used if the shader stage is not in <a href=\"#limits-subgroupSupportedStages\"><code>subgroupSupportedStages</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-Offset-06344",
          "text": "The first element of the <code>Offset</code> operand of <code>InterpolateAtOffset</code> <strong class=\"purple\">must</strong> be greater than or equal to:<br> <span class=\"eq\">frag<sub>width</sub> × <a href=\"#limits-minInterpolationOffset\"><code>minInterpolationOffset</code></a></span><br> where <span class=\"eq\">frag<sub>width</sub></span> is the width of the current fragment in pixels",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-Offset-06345",
          "text": "The first element of the <code>Offset</code> operand of <code>InterpolateAtOffset</code> <strong class=\"purple\">must</strong> be less than or equal to<br> <span class=\"eq\">frag<sub>width</sub> × (<a href=\"#limits-maxInterpolationOffset\"><code>maxInterpolationOffset</code></a> +  ULP ) - ULP</span><br> where <span class=\"eq\">frag<sub>width</sub></span> is the width of the current fragment in pixels and <span class=\"eq\">ULP = 1 / 2^<a href=\"#limits-subPixelInterpolationOffsetBits\"><code>subPixelInterpolationOffsetBits</code></a>^</span>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-Offset-06346",
          "text": "The second element of the <code>Offset</code> operand of <code>InterpolateAtOffset</code> <strong class=\"purple\">must</strong> be greater than or equal to<br> <span class=\"eq\">frag<sub>height</sub> × <a href=\"#limits-minInterpolationOffset\"><code>minInterpolationOffset</code></a></span><br> where <span class=\"eq\">frag<sub>height</sub></span> is the height of the current fragment in pixels",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-Offset-06347",
          "text": "The second element of the <code>Offset</code> operand of <code>InterpolateAtOffset</code> <strong class=\"purple\">must</strong> be less than or equal to<br> <span class=\"eq\">frag<sub>height</sub> × (<a href=\"#limits-maxInterpolationOffset\"><code>maxInterpolationOffset</code></a> +  ULP ) - ULP</span><br> where <span class=\"eq\">frag<sub>height</sub></span> is the height of the current fragment in pixels and <span class=\"eq\">ULP = 1 / 2^<a href=\"#limits-subPixelInterpolationOffsetBits\"><code>subPixelInterpolationOffsetBits</code></a>^</span>.",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-x-06429",
          "text": "In compute shaders using the <code>GLCompute</code> <code>Execution</code> <code>Model</code> the <code>x</code> size in <code>LocalSize</code> or <code>LocalSizeId</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>maxComputeWorkGroupSize</code>[0]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-y-06430",
          "text": "In compute shaders using the <code>GLCompute</code> <code>Execution</code> <code>Model</code> the <code>y</code> size in <code>LocalSize</code> or <code>LocalSizeId</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>maxComputeWorkGroupSize</code>[1]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-z-06431",
          "text": "In compute shaders using the <code>GLCompute</code> <code>Execution</code> <code>Model</code> the <code>z</code> size in <code>LocalSize</code> or <code>LocalSizeId</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>maxComputeWorkGroupSize</code>[2]",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-x-06432",
          "text": "In compute shaders using the <code>GLCompute</code> <code>Execution</code> <code>Model</code> the product of <code>x</code> size, <code>y</code> size, and <code>z</code> size in <code>LocalSize</code> or <code>LocalSizeId</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#VkPhysicalDeviceLimits\">VkPhysicalDeviceLimits</a>::<code>maxComputeWorkGroupInvocations</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-LocalSizeId-06433",
          "text": "The <code>Execution</code> <code>Mode</code> <code>LocalSizeId</code> <strong class=\"purple\">must</strong> not be used",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpTypeVector-06816",
          "text": "Any <code>OpTypeVector</code> output interface variables <strong class=\"purple\">must</strong> not have a higher <code>Component</code> <code>Count</code> than a matching <code>OpTypeVector</code> input interface variable",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpEntryPoint-08743",
          "text": "Any <a href=\"#interfaces-iointerfaces-user\">user-defined variables</a> shared between the <code>OpEntryPoint</code> of two shader stages, and declared with <code>Input</code> as its <code>Storage</code> <code>Class</code> for the subsequent shader stage, <strong class=\"purple\">must</strong> have all <code>Location</code> slots and <code>Component</code> words declared in the preceding shader stage&#8217;s <code>OpEntryPoint</code> with <code>Output</code> as the <code>Storage</code> <code>Class</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpEntryPoint-07754",
          "text": "Any <a href=\"#interfaces-iointerfaces-user\">user-defined variables</a> between the <code>OpEntryPoint</code> of two shader stages <strong class=\"purple\">must</strong> have the same type and width for each <code>Component</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpVariable-08746",
          "text": "Any <code>OpVariable</code>, <code>Block</code>-decorated <code>OpTypeStruct</code>, or <code>Block</code>-decorated <code>OpTypeStruct</code> members shared between the <code>OpEntryPoint</code> of two shader stages <strong class=\"purple\">must</strong> have matching decorations as defined in <a href=\"#interfaces-iointerfaces-matching\">interface matching</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-Workgroup-06530",
          "text": "The sum of size in bytes for variables and <a href=\"#workgroup-padding\">padding</a> in the <code>Workgroup</code> <code>Storage</code> <code>Class</code> in the <code>GLCompute</code> <code>Execution</code> <code>Model</code> <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxComputeSharedMemorySize\"><code>maxComputeSharedMemorySize</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpVariable-06373",
          "text": "Any <code>OpVariable</code> with <code>Workgroup</code> as its <code>Storage</code> <code>Class</code> <strong class=\"purple\">must</strong> not have an <code>Initializer</code> operand",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpImage-06376",
          "text": "If an <code>OpImage*Gather</code> operation has an image operand of <code>Offset</code>, <code>ConstOffset</code>, or <code>ConstOffsets</code> the offset value <strong class=\"purple\">must</strong> be greater than or equal to <a href=\"#limits-minTexelGatherOffset\"><code>minTexelGatherOffset</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpImage-06377",
          "text": "If an <code>OpImage*Gather</code> operation has an image operand of <code>Offset</code>, <code>ConstOffset</code>, or <code>ConstOffsets</code> the offset value <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxTexelGatherOffset\"><code>maxTexelGatherOffset</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpImageSample-06435",
          "text": "If an <code>OpImageSample*</code> or <code>OpImageFetch*</code> operation has an image operand of <code>ConstOffset</code> then the offset value <strong class=\"purple\">must</strong> be greater than or equal to <a href=\"#limits-minTexelOffset\"><code>minTexelOffset</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpImageSample-06436",
          "text": "If an <code>OpImageSample*</code> or <code>OpImageFetch*</code> operation has an image operand of <code>ConstOffset</code> then the offset value <strong class=\"purple\">must</strong> be less than or equal to <a href=\"#limits-maxTexelOffset\"><code>maxTexelOffset</code></a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-samples-08725",
          "text": "If an <code>OpTypeImage</code> has an <code>MS</code> operand 0, its bound image <strong class=\"purple\">must</strong> have been created with <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>samples</code> as <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-samples-08726",
          "text": "If an <code>OpTypeImage</code> has an <code>MS</code> operand 1, its bound image <strong class=\"purple\">must</strong> not have been created with <a href=\"#VkImageCreateInfo\">VkImageCreateInfo</a>::<code>samples</code> as <code>VK_SAMPLE_COUNT_1_BIT</code>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-OpEntryPoint-08727",
          "text": "Each <code>OpEntryPoint</code> <strong class=\"purple\">must</strong> not have more than one variable decorated with <code>InputAttachmentIndex</code> per image aspect of the attachment image bound to it, either explicitly or implicitly as described by <a href=\"#interfaces-inputattachment\">input attachment interface</a>",
          "page": "vkspec"
        },
        {
          "vuid": "VUID-RuntimeSpirv-MeshEXT-09218",
          "text": "In mesh shaders using the <code>MeshEXT</code> or <code>MeshNV</code> <code>Execution</code> <code>Model</code> and the <code>OutputPoints</code> <code>Execution</code> <code>Mode</code>, if the number of output points is greater than 0, a <code>PointSize</code> decorated variable <strong class=\"purple\">must</strong> be written to for each output point",
          "page": "vkspec"
        }
      ]
    }
  }
}